("a-going"	nil	(((@ )0)((g ou )1)((i ng )0)))	;; ing
("aarons"	nil	(((a) 1) ((r @ n z) 0)))	;; unique
("abandoning"	nil	(((@ )0)((b a n )1)((d @ n )0)((i ng )0)))	;; ing
("abashing"	nil	(((@ )0)((b a sh )1)((i ng )0)))	;; ing
("abasing"	nil	(((@ )0)((b ei s )1)((i ng )0)))	;; ing
("abating"	nil	(((@ )0)((b ei t^ )1)((i ng )0)))	;; ing
("abbes"	nil	(((a) 1) ((b ei z) 0)))	;; unique
("abbreviating"	nil	(((@ )0)((b r ii )1)((v iy )0)((ei t^ )1)((i ng )0)))	;; ing
("abdicating"	nil	(((a b )1)((d @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("abducting"	nil	(((@ b )0)((d uh k t )1)((i ng )0)))	;; ing
("aberrating"	nil	(((a )1)((b @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("abetting"	nil	(((@ )0)((b e t^ )1)((i ng )0)))	;; ing
("abhorring"	nil	(((@ b )0)((h oo r )1)((i ng )0)))	;; ing
("abiding"	nil	(((@ )0)((b ai d )1)((i ng )0)))	;; ing
("abjuring"	nil	(((a b )0)((jh ur r )1)((i ng )0)))	;; ing
("ablating"	nil	(((a )0)((b l ei t^ )1)((i ng )0)))	;; ing
("abling"	nil	(((ei )1)((b l! )0)((i ng )0)))	;; ing
("abolishing"	nil	(((@ )0)((b o )1)((l i sh )0)((i ng )0)))	;; ing
("abominating"	nil	(((@ )0)((b o )1)((m @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("aborting"	nil	(((@ )0)((b oo t^ )1)((i ng )0)))	;; ing
("abounding"	nil	(((@ )0)((b ow n d )1)((i ng )0)))	;; ing
("abrading"	nil	(((@ )0)((b r ei d )1)((i ng )0)))	;; ing
("abreacting"	nil	(((a )1)((b r iy )0)((a k t )1)((i ng )0)))	;; ing
("abridging"	nil	(((@ )0)((b r i jh )1)((i ng )0)))	;; ing
("abrogating"	nil	(((a )1)((b r @ )0)((g ei t^ )1)((i ng )0)))	;; ing
("absconding"	nil	(((@ b )0)((s k o n d )1)((i ng )0)))	;; ing
("abseiling"	nil	(((a b )1)((s ei l )0)((i ng )0)))	;; ing
("absenting"	nil	(((a b )0)((s e n t )1)((i ng )0)))	;; ing
("absolving"	nil	(((@ b )0)((z o l v )1)((i ng )0)))	;; ing
("absorbing"	nil	(((@ b )0)((z oo b )1)((i ng )0)))	;; ing
("abstaining"	nil	(((@ b )0)((s t ei n )1)((i ng )0)))	;; ing
("abstracting"	nil	(((@ b )0)((s t r a k t )1)((i ng )0)))	;; ing
("abuilding"	nil	(((@ )0)((b i l d )1)((i ng )0)))	;; ing
("abusing"	nil	(((@ )0)((b y uu z )1)((i ng )0)))	;; ing
("abutting"	nil	(((@ )0)((b uh t^ )1)((i ng )0)))	;; ing
("academys"	nil	(((@) 0) ((k a) 1) ((d @) 0) ((m ii z) 0)))	;; unique
("acceding"	nil	(((@ k )0)((s ii d )1)((i ng )0)))	;; ing
("accelerating"	nil	(((@ k )0)((s a )1)((l @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("accenting"	nil	(((a k )0)((s e n t )1)((i ng )0)))	;; ing
("accentuating"	nil	(((@ k )0)((s e n )1)((ch uw )0)((ei t^ )1)((i ng )0)))	;; ing
("accepting"	nil	(((@ k )0)((s e p t )1)((i ng )0)))	;; ing
("accessing"	nil	(((a k )1)((s e s )0)((i ng )0)))	;; ing
("accessorising"	nil	(((@ k )0)((s e )1)((s @ )0)((r ai z )1)((i ng )0)))	;; ing
("accessorizing"	nil	(((@ k )0)((s e )1)((s @ )0)((r ai z )1)((i ng )0)))	;; ing
("accesss"	nil	(((a k) 1) ((s e s) 0) ((@ z) 0)))	;; unique
("acclaiming"	nil	(((@ )0)((k l ei m )1)((i ng )0)))	;; ing
("acclimating"	nil	(((a )1)((k l @ )0)((m ei t^ )1)((i ng )0)))	;; ing
("acclimatising"	nil	(((@ )0)((k l ai )1)((m @ t )0)((ai z )1)((i ng )0)))	;; ing
("acclimatizing"	nil	(((@ )0)((k l ai )1)((m @ t )0)((ai z )1)((i ng )0)))	;; ing
("accommodating"	nil	(((@ )0)((k o )1)((m @ )0)((d ei t^ )1)((i ng )0)))	;; ing
("accompanying"	nil	(((@ )0)((k uh m )1)((p @ )0)((n iy )0)((i ng )0)))	;; ing
("accomplishing"	nil	(((@ )0)((k uh m )1)((p l i sh )0)((i ng )0)))	;; ing
("according"	nil	(((@ )0)((k oo d )1)((i ng )0)))	;; ing
("accosting"	nil	(((@ )0)((k o s t )1)((i ng )0)))	;; ing
("accounting"	nil	(((@ )0)((k ow n t )1)((i ng )0)))	;; ing
("accrediting"	nil	(((@ )0)((k r e )1)((d @ t^ )0)((i ng )0)))	;; ing
("accruing"	nil	(((@ )0)((k r uu )1)((i ng )0)))	;; ing
("accumulating"	nil	(((@ )0)((k y uu )1)((m y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("accursing"	nil	(((@ )0)((k @@r s )1)((i ng )0)))	;; ing
("accuseds"	nil	(((@) 0) ((k y uu z d z) 1)))	;; unique
("accusing"	nil	(((@ )0)((k y uu z )1)((i ng )0)))	;; ing
("accustoming"	nil	(((@ )0)((k uh )1)((s t @ m )0)((i ng )0)))	;; ing
("acetylcholine"	nil	(((@) 0) ((s ii) 1) ((t l!) 0) ((k o) 1) ((l ii n) 0)))	;; oul
("achieving"	nil	(((@ )0)((ch ii v )1)((i ng )0)))	;; ing
("aching"	nil	(((ei k )1)((i ng )0)))	;; ing
("acidex"	nil	(((a) 1) ((s i) 0) ((d e k s) 1)))	;; unique
("acidifying"	nil	(((@ )0)((s i d )1)((@ )0)((f ai )1)((i ng )0)))	;; ing
("acidizing"	nil	(((a )1)((s @ d )0)((ai z )1)((i ng )0)))	;; ing
("acknowledging"	nil	(((@ k )0)((n o )1)((l i jh )0)((i ng )0)))	;; ing
("acquainting"	nil	(((@ )0)((k w ei n t )1)((i ng )0)))	;; ing
("acquiescing"	nil	(((a )1)((k w iy )0)((e s )1)((i ng )0)))	;; ing
("acquiring"	nil	(((@ )0)((k w ai @ r )1)((i ng )0)))	;; ing
("acquisitioning"	nil	(((a )1)((k w @ )0)((z i )1)((sh n! )0)((i ng )0)))	;; ing
("acquitting"	nil	(((@ )0)((k w i t^ )1)((i ng )0)))	;; ing
("acting"	nil	(((a k t )1)((i ng )0)))	;; ing
("activating"	nil	(((a k t )1)((@ v )0)((ei t^ )1)((i ng )0)))	;; ing
("activitys"	nil	(((a k t) 0) ((i v) 1) ((@) 0) ((t^ ii z) 0)))	;; unique
("actons"	nil	(((a k) 1) ((t @ n z) 0)))	;; unique
("actualising"	nil	(((a k )1)((ch uw @ l )0)((ai z )1)((i ng )0)))	;; ing
("actualizing"	nil	(((a k )1)((ch uw @ l )0)((ai z )1)((i ng )0)))	;; ing
("actuating"	nil	(((a k )1)((ch uw )0)((ei t^ )1)((i ng )0)))	;; ing
("ad-libbing"	nil	(((- a d )0)((l i b )1)((i ng )0)))	;; ing
("adairs"	nil	(((@) 0) ((d ir z) 1)))	;; unique
("adamss"	nil	(((a) 1) ((d @ m z) 0) ((@ z) 0)))	;; unique
("adapting"	nil	(((@ )0)((d a p t )1)((i ng )0)))	;; ing
("adas"	nil	(((ei) 1) ((d @ z) 0)))	;; unique
("addicting"	nil	(((@ )0)((d i k t )1)((i ng )0)))	;; ing
("adding"	nil	(((a d )1)((i ng )0)))	;; ing
("addisons"	nil	(((a) 1) ((d i) 0) ((s n! z) 0)))	;; unique
("addling"	nil	(((a )1)((d l! )0)((i ng )0)))	;; ing
("addressing"	nil	(((@ )0)((d r e s )1)((i ng )0)))	;; ing
("addresss"	nil	(((@) 0) ((d r e s) 1) ((@ z) 0)))	;; unique
("adducing"	nil	(((@ )0)((d y uu s )1)((i ng )0)))	;; ing
("adducting"	nil	(((@ )0)((d uh k t )1)((i ng )0)))	;; ing
("adhering"	nil	(((@ d )0)((h ir r )1)((i ng )0)))	;; ing
("adjoining"	nil	(((@ )0)((jh oi n )1)((i ng )0)))	;; ing
("adjourning"	nil	(((@ )0)((jh @@r n )1)((i ng )0)))	;; ing
("adjudging"	nil	(((@ )0)((jh uh jh )1)((i ng )0)))	;; ing
("adjudicating"	nil	(((@ )0)((jh uu )1)((d i )0)((k ei t^ )1)((i ng )0)))	;; ing
("adjuring"	nil	(((@ )0)((jh ur r )1)((i ng )0)))	;; ing
("adjusting"	nil	(((@ )0)((jh uh s t )1)((i ng )0)))	;; ing
("adlers"	nil	(((a d) 1) ((l @ z) 0)))	;; unique
("administering"	nil	(((@ d )0)((m i )1)((n @ )0)((s t @ r )0)((i ng )0)))	;; ing
("administrating"	nil	(((@ d )0)((m i )1)((n @ )0)((s t r ei t^ )1)((i ng )0)))	;; ing
("admiraltys"	nil	(((a d) 1) ((m @) 0) ((r @ l) 0) ((t ii z) 0)))	;; unique
("admiring"	nil	(((@ d )0)((m ai @ r )1)((i ng )0)))	;; ing
("admitting"	nil	(((@ d )0)((m i t^ )1)((i ng )0)))	;; ing
("admixing"	nil	(((a d )0)((m i k s )1)((i ng )0)))	;; ing
("admonishing"	nil	(((@ d )0)((m o )1)((n i sh )0)((i ng )0)))	;; ing
("adopting"	nil	(((@ )0)((d o p t )1)((i ng )0)))	;; ing
("adoring"	nil	(((@ )0)((d oo r )1)((i ng )0)))	;; ing
("adorning"	nil	(((@ )0)((d oo n )1)((i ng )0)))	;; ing
("adrians"	nil	(((ei) 1) ((d r ir n z) 0)))	;; unique
("adsorbing"	nil	(((@ d )0)((s oo b )1)((i ng )0)))	;; ing
("adulating"	nil	(((a )1)((jh @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("adulterating"	nil	(((@ )0)((d o l )1)((t @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("adumbrating"	nil	(((a )1)((d uh m )0)((b r ei t^ )1)((i ng )0)))	;; ing
("advancing"	nil	(((@ d )0)((v aa n s )1)((i ng )0)))	;; ing
("advantaging"	nil	(((@ d )0)((v aa n )1)((t i jh )0)((i ng )0)))	;; ing
("adventure-seeking"	nil	(((@ d )0)((v e n )1)((ch @ )0)((s ii k )1)((i ng )0)))	;; ing
("adventuring"	nil	(((@ d )0)((v e n )1)((ch @ r )0)((i ng )0)))	;; ing
("adverbialising"	nil	(((@ d )0)((v @@r b )1)((iy @ l )0)((ai z )1)((i ng )0)))	;; ing
("adverbializing"	nil	(((@ d )0)((v @@r b )1)((iy @ l )0)((ai z )1)((i ng )0)))	;; ing
("adversarys"	nil	(((a d) 1) ((v @ s) 0) ((@) 0) ((r ii z) 0)))	;; unique
("advertising"	nil	(((a d )1)((v @ )0)((t ai z )1)((i ng )0)))	;; ing
("advertizing"	nil	(((a d )1)((v @ )0)((t ai z )1)((i ng )0)))	;; ing
("advising"	nil	(((@ d )0)((v ai z )1)((i ng )0)))	;; ing
("advocating"	nil	(((a d )1)((v @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("ae"	nil	(((ai) 1) ((ei) 0)))	;; unique
("aeolian"	nil	(((ii) 0) ((o) 1) ((l ii @ n) 0)))	;; oul
("aerating"	nil	(((ir )0)((r ei t^ )1)((i ng )0)))	;; ing
("aerobraking"	nil	(((ir )1)((r ou )0)((b r ei k )1)((i ng )0)))	;; ing
("aerospaces"	nil	(((ir) 1) ((r ou) 0) ((s p ei s) 1) ((@ z) 0)))	;; unique
("aesops"	nil	(((ii) 1) ((s o p s) 0)))	;; unique
("affecting"	nil	(((@ )0)((f e k t )1)((i ng )0)))	;; ing
("affiancing"	nil	(((@ )0)((f ai @ n s )1)((i ng )0)))	;; ing
("affiliating"	nil	(((@ )0)((f i )1)((l iy )0)((ei t^ )1)((i ng )0)))	;; ing
("affirming"	nil	(((@ )0)((f @@r m )1)((i ng )0)))	;; ing
("affixing"	nil	(((@ )0)((f i k s )1)((i ng )0)))	;; ing
("afflicting"	nil	(((@ )0)((f l i k t )1)((i ng )0)))	;; ing
("affording"	nil	(((@ )0)((f oo d )1)((i ng )0)))	;; ing
("afforesting"	nil	(((@ )0)((f o )1)((r @ s t )0)((i ng )0)))	;; ing
("affricating"	nil	(((a )1)((f r @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("affronting"	nil	(((@ )0)((f r uh n t )1)((i ng )0)))	;; ing
("afghanistans"	nil	(((a f) 0) ((g a) 1) ((n @) 0) ((s t aa n z) 0)))	;; unique
("aforegoing"	nil	(((@ )0)((f oo )1)((g ou )1)((i ng )0)))	;; ing
("africas"	nil	(((a) 1) ((f r @) 0) ((k @ z) 0)))	;; unique
("age-old"	nil	((( ei jh) 0) ((o l d) 1)))	;; oul
("ageds"	nil	(((ei jh) 1) ((@ d z) 0)))	;; unique
("ageing"	nil	(((ei jh )1)((i ng )0)))	;; ing
("agencys"	nil	(((ei) 1) ((jh @ n) 0) ((s ii z) 0)))	;; unique
("agglomerating"	nil	(((@ )0)((g l o )1)((m @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("agglutinating"	nil	(((@ )0)((g l uu )1)((t^ @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("aggravating"	nil	(((a )1)((g r @ )0)((v ei t^ )1)((i ng )0)))	;; ing
("aggregating"	nil	(((a )1)((g r @ )0)((g ei t^ )1)((i ng )0)))	;; ing
("aggressing"	nil	(((@ )0)((g r e s )1)((i ng )0)))	;; ing
("aggrieving"	nil	(((@ )0)((g r ii v )1)((i ng )0)))	;; ing
("aging"	nil	(((ei jh )1)((i ng )0)))	;; ing
("agitating"	nil	(((a )1)((jh @ )0)((t ei t^ )1)((i ng )0)))	;; ing
("agonising"	nil	(((a )1)((g @ )0)((n ai z )1)((i ng )0)))	;; ing
("agonizing"	nil	(((a )1)((g @ )0)((n ai z )1)((i ng )0)))	;; ing
("agreeing"	nil	(((@ )0)((g r ii )1)((i ng )0)))	;; ing
("ahi"	nil	(((aa) 1) ((h ii) 0)))	;; unique
("ahold"	nil	(((@) 0) ((h o l d) 1)))	;; oul
("ahuriri"	nil	(((aa) 1) ((h u) 0) ((r i) 0) ((r ii) 1)))	;; unique
("ahuru"	nil	(((aa) 1) ((h u) 0) ((r uu) 0)))	;; unique
("ahuruhuru"	nil	(((aa) 0) ((h u) 1) ((r uu) 0) ((h u) 0) ((r uu) 0)))	;; unique
("aiding"	nil	(((ei d )1)((i ng )0)))	;; ing
("ailing"	nil	(((ei l )1)((i ng )0)))	;; ing
("aiming"	nil	(((ei m )1)((i ng )0)))	;; ing
("aint"	nil	(((ei n t) 1)))	;; unique
("air-brushing"	nil	(((ii @ )1)((b r uh sh )1)((i ng )0)))	;; ing
("air-conditioning"	nil	(((ii @ )1)((k @ n )0)((d i )1)((sh n! )0)((i ng )0)))	;; ing
("airbrushing"	nil	(((ii @ )1)((b r uh sh )1)((i ng )0)))	;; ing
("airconditioning"	nil	(((ii @ )1)((k @ n )0)((d i )1)((sh n! )0)((i ng )0)))	;; ing
("airdropping"	nil	(((ii @ )1)((d r o p )1)((i ng )0)))	;; ing
("airhole"	nil	(((e @) 1) ((h o l) 0)))	;; beer-bear, oul
("airholes"	nil	(((e @) 1) ((h o l z) 0)))	;; beer-bear, oul
("airing"	nil	(((ir r )1)((i ng )0)))	;; ing
("airlifting"	nil	(((ii @ )1)((l i f t )1)((i ng )0)))	;; ing
("airmailing"	nil	(((ii @ )1)((m ei l )1)((i ng )0)))	;; ing
("airmens"	nil	(((ir) 1) ((m @ n z) 0)))	;; unique
("aka"	nil	(((aa) 1) ((k @) 0)))	;; unique
("akakiore"	nil	(((aa) 0) ((k aa) 0) ((k ii) 1) ((oo) 0) ((r ii) 0)))	;; unique
("akakura"	nil	(((aa) 0) ((k @) 0) ((k u) 1) ((r @) 0)))	;; unique
("akarana"	nil	(((aa) 1) ((k @) 0) ((r a) 1) ((n @) 0)))	;; unique
("akatea"	nil	(((aa) 1) ((k @) 0) ((t e) 1) ((@) 0)))	;; unique
("ake"	nil	(((aa) 1) ((k ei) 0)))	;; unique
("akeake"	nil	(((aa) 1) ((k ei) 0) ((aa) 0) ((k ei) 0)))	;; unique
("akepiro"	nil	(((aa) 0) ((k e) 0) ((p ii) 1) ((r ou) 0)))	;; unique
("alans"	nil	(((a) 1) ((l @ n z) 0)))	;; unique
("alarming"	nil	(((@ )0)((l aa m )1)((i ng )0)))	;; ing
("alaskas"	nil	(((@) 0) ((l a) 1) ((s k @ z) 0)))	;; unique
("albanias"	nil	(((a l) 0) ((b ei) 1) ((n ir z) 0)))	;; unique
("albertas"	nil	(((a l) 0) ((b @@r) 1) ((t^ @ z) 0)))	;; unique
("albrechts"	nil	(((oo l) 1) ((b r e k t s) 0)))	;; unique
("aldens"	nil	(((oo l) 1) ((d n! z) 0)))	;; unique
("aldrins"	nil	(((oo l) 1) ((d r i n z) 0)))	;; unique
("alecs"	nil	(((a) 1) ((l i k s) 0)))	;; unique
("alendronate"	nil	(((@) 0) ((l e n) 1) ((d r @) 0) ((n ei t) 1)))	;; unique
("alerting"	nil	(((@ )0)((l @@r t^ )1)((i ng )0)))	;; ing
("alexs"	nil	(((a) 1) ((l i k s) 0) ((@ z) 0)))	;; unique
("alfs"	nil	(((a l f s) 1)))	;; unique
("algerias"	nil	(((a l) 0) ((jh ir) 1) ((r ir z) 0)))	;; unique
("aliasing"	nil	(((ei )1)((l iy @ s )0)((i ng )0)))	;; ing
("aliass"	nil	(((ei) 1) ((l ir s) 0) ((@ z) 0)))	;; unique
("alices"	nil	(((a) 1) ((l @ s) 0) ((@ z) 0)))	;; unique
("alienating"	nil	(((ei )1)((l iy @ n )0)((ei t^ )1)((i ng )0)))	;; ing
("alighting"	nil	(((@ )0)((l ai t^ )1)((i ng )0)))	;; ing
("aligning"	nil	(((@ )0)((l ai n )1)((i ng )0)))	;; ing
("alis"	nil	(((aa) 1) ((l ii z) 0)))	;; unique
("alisons"	nil	(((a) 1) ((l i) 0) ((s n! z) 0)))	;; unique
("alkalising"	nil	(((a l )1)((k @ )0)((l ai z )1)((i ng )0)))	;; ing
("alkalizing"	nil	(((a l )1)((k @ )0)((l ai z )1)((i ng )0)))	;; ing
("all-encompassing"	nil	(((oo l )1)((@ n )0)((k uh m )1)((p @ s )0)((i ng )0)))	;; ing
("all-knowing"	nil	(((oo l )1)((n ou )1)((i ng )0)))	;; ing
("all-or-nothing"	nil	(((oo l )1)((oo )0)((n uh )1)((th i ng )0)))	;; ing
("allahs"	nil	(((a) 1) ((l @ z) 0)))	;; unique
("allaying"	nil	(((@ )0)((l ei )1)((i ng )0)))	;; ing
("alleging"	nil	(((@ )0)((l e jh )1)((i ng )0)))	;; ing
("allens"	nil	(((a) 1) ((l @ n z) 0)))	;; unique
("alleviating"	nil	(((@ )0)((l ii )1)((v iy )0)((ei t^ )1)((i ng )0)))	;; ing
("alliterating"	nil	(((@ )0)((l i )1)((t^ @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("allocating"	nil	(((a )1)((l @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("allopurinol"	nil	(((a) 1) ((l @) 0) ((p y uu) 1) ((r i) 0) ((n o l) 0)))	;; unique
("allotting"	nil	(((@ )0)((l o t^ )1)((i ng )0)))	;; ing
("allowing"	nil	(((@ )0)((l ow )1)((i ng )0)))	;; ing
("alloying"	nil	(((a )1)((l oi )0)((i ng )0)))	;; ing
("alluding"	nil	(((@ )0)((l uu d )1)((i ng )0)))	;; ing
("alluring"	nil	(((@ )0)((l ur r )1)((i ng )0)))	;; ing
("allying"	nil	(((@ )0)((l ai )1)((i ng )0)))	;; ing
("almsgiving"	nil	(((aa m z )1)((g i v )1)((i ng )0)))	;; ing
("als"	nil	(((a l z) 1)))	;; unique
("alsops"	nil	(((oo l) 1) ((s o p s) 0)))	;; unique
("altercating"	nil	(((oo l )1)((t @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("altering"	nil	(((oo l )1)((t @ r )0)((i ng )0)))	;; ing
("alternating"	nil	(((oo l )1)((t @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("alveolar"	nil	(((a l) 1) ((v ii) 0) ((o) 1) ((l @) 0)))	;; oul
("alveolars"	nil	(((a l) 1) ((v ii) 0) ((o) 1) ((l @ z) 0)))	;; oul
("alveoli"	nil	(((a l) 1) ((v ii) 0) ((o) 1) ((l ai) 0)))	;; oul
("alveolus"	nil	(((a l) 1) ((v ii) 0) ((o) 1) ((l @ s) 0)))	;; oul
("ama"	nil	(((aa) 1) ((m @) 0)))	;; unique
("amalgamating"	nil	(((@ )0)((m a l )1)((g @ m )0)((ei t^ )1)((i ng )0)))	;; ing
("amassing"	nil	(((@ )0)((m a s )1)((i ng )0)))	;; ing
("amazing"	nil	(((@ )0)((m ei z )1)((i ng )0)))	;; ing
("ambling"	nil	(((a m )1)((b l! )0)((i ng )0)))	;; ing
("ambroses"	nil	(((a m) 1) ((b r ou z) 0) ((@ z) 0)))	;; unique
("ambulating"	nil	(((a m )1)((b y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("ambushing"	nil	(((a m )1)((b u sh )0)((i ng )0)))	;; ing
("amdahls"	nil	(((a m) 1) ((d aa l z) 0)))	;; unique
("ameliorating"	nil	(((@ )0)((m ii )1)((l y @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("amending"	nil	(((@ )0)((m e n d )1)((i ng )0)))	;; ing
("americanising"	nil	(((@ )0)((m e )1)((r @ )0)((k @ n )0)((ai z )1)((i ng )0)))	;; ing
("americanizing"	nil	(((@ )0)((m e )1)((r @ )0)((k @ n )0)((ai z )1)((i ng )0)))	;; ing
("ameritechs"	nil	(((@) 0) ((m e) 1) ((r @) 0) ((t^ e k s) 0)))	;; unique
("amlodipine"	nil	(((a m) 0) ((l o) 1) ((d @) 0) ((p ii n) 1)))	;; unique
("amnestying"	nil	(((a m )1)((n @ )0)((s t iy )0)((i ng )0)))	;; ing
("amnestys"	nil	(((a m) 1) ((n @) 0) ((s t ii z) 0)))	;; unique
("amokura"	nil	(((aa) 1) ((m oo) 0) ((k uu) 0) ((r @) 0)))	;; unique
("amortizing"	nil	(((@ )0)((m oo )1)((t^ ai z )0)((i ng )0)))	;; ing
("amounting"	nil	(((@ )0)((m ow n t )1)((i ng )0)))	;; ing
("amphibole"	nil	(((a m) 1) ((f i) 0) ((b o l) 0)))	;; oul
("amplifying"	nil	(((a m )1)((p l @ )0)((f ai )1)((i ng )0)))	;; ing
("amputating"	nil	(((a m )1)((p y uw )0)((t ei t^ )1)((i ng )0)))	;; ing
("amtraks"	nil	(((a m) 1) ((t r a k s) 0)))	;; unique
("amusing"	nil	(((@ )0)((m y uu z )1)((i ng )0)))	;; ing
("amys"	nil	(((ei) 1) ((m ii z) 0)))	;; unique
("ana"	nil	(((aa) 1) ((n @) 0))) 	;; maori
("anaesthetising"	nil	(((@ )0)((n ii s )1)((th @ )0)((t ai z )1)((i ng )0)))	;; ing
("anaesthetizing"	nil	(((@ )0)((n ii s )1)((th @ )0)((t ai z )1)((i ng )0)))	;; ing
("analogizing"	nil	(((@ )0)((n a )1)((l @ )0)((jh ai z )1)((i ng )0)))	;; ing
("analysing"	nil	(((a )1)((n l! )0)((ai z )1)((i ng )0)))	;; ing
("analyzing"	nil	(((a )1)((n l! )0)((ai z )1)((i ng )0)))	;; ing
("anatolia"	nil	(((a) 1) ((n @) 0) ((t o) 1) ((l ii @) 0)))	;; oul
("anatoly"	nil	(((a) 1) ((n @) 0) ((t o) 1) ((l ii) 0)))	;; oul
("anchoring"	nil	(((a ng )1)((k @ r )0)((i ng )0)))	;; ing
("andersens"	nil	(((a n) 1) ((d @) 0) ((s n! z) 0)))	;; unique
("andersons"	nil	(((a n) 1) ((d @) 0) ((s n! z) 0)))	;; unique
("andorras"	nil	(((a n) 0) ((d oo) 1) ((r @ z) 0)))	;; unique
("anesthetizing"	nil	(((@ )0)((n ii s )1)((th @ )0)((t ai z )1)((i ng )0)))	;; ing
("angering"	nil	(((a ng )1)((g @ r )0)((i ng )0)))	;; ing
("angiangi"	nil	(((uh ng) 1) ((ii) 0) ((uh ng) 0) ((ii) 0)))	;; unique
("anglicizing"	nil	(((a ng )1)((g l @ )0)((s ai z )1)((i ng )0)))	;; ing
("anglifying"	nil	(((a ng )1)((g l i )0)((f ai )1)((i ng )0)))	;; ing
("angling"	nil	(((a ng )1)((g l! )0)((i ng )0)))	;; ing
("angola"	nil	(((a ng) 0) ((g o) 1) ((l @) 0)))	;; oul
("angolan"	nil	(((a ng) 0) ((g o) 1) ((l @ n) 0)))	;; oul
("angolans"	nil	(((a ng) 0) ((g o) 1) ((l @ n z) 0)))	;; oul
("angolas"	nil	(((a ng) 0) ((g o) 1) ((l @ z) 0)))	;; unique
("animalising"	nil	(((a )1)((n @ )0)((m l! )0)((ai z )1)((i ng )0)))	;; ing
("animalizing"	nil	(((a )1)((n @ )0)((m l! )0)((ai z )1)((i ng )0)))	;; ing
("animating"	nil	(((a )1)((n @ )0)((m ei t^ )1)((i ng )0)))	;; ing
("anitas"	nil	(((@) 0) ((n ii) 1) ((t^ @ z) 0)))	;; unique
("ankaras"	nil	(((a ng) 1) ((k @) 0) ((r @ z) 0)))	;; unique
("annas"	nil	(((a) 1) ((n @ z) 0)))	;; unique
("annealing"	nil	(((@ )0)((n ii l )1)((i ng )0)))	;; ing
("annexd"	nil	(((@) 0) ((n e k s t) 1)))	;; unique
("annexing"	nil	(((@ )0)((n e k s )1)((i ng )0)))	;; ing
("annexs"	nil	(((a) 1) ((n e k s) 0) ((@ z) 0)))	;; unique
("annies"	nil	(((a) 1) ((n ii z) 0)))	;; unique
("annihilating"	nil	(((@ )0)((n ai @ )1)((l ei t^ )0)((i ng )0)))	;; ing
("annotating"	nil	(((a )1)((n @ )0)((t ei t^ )1)((i ng )0)))	;; ing
("announcing"	nil	(((@ )0)((n ow n s )1)((i ng )0)))	;; ing
("annoying"	nil	(((@ )0)((n oi )1)((i ng )0)))	;; ing
("annulling"	nil	(((@ )0)((n uh l )1)((i ng )0)))	;; ing
("annunciating"	nil	(((@ )0)((n uh n )1)((s iy )0)((ei t^ )1)((i ng )0)))	;; ing
("ano"	nil	(((a) 1) ((n ou) 0)))	;; unique
("anointing"	nil	(((@ )0)((n oi n t )1)((i ng )0)))	;; ing
("anothers"	nil	(((@) 0) ((n uh) 1) ((dh @ z) 0)))	;; unique
("anselms"	nil	(((a n) 1) ((s a l m z) 0)))	;; unique
("answerd"	nil	(((aa n) 1) ((s @ d) 0)))	;; unique
("answering"	nil	(((aa n )1)((s @ r )0)((i ng )0)))	;; ing
("antagonising"	nil	(((a n )0)((t a )1)((g @ )0)((n ai z )1)((i ng )0)))	;; ing
("antagonizing"	nil	(((a n )0)((t a )1)((g @ )0)((n ai z )1)((i ng )0)))	;; ing
("antedating"	nil	(((a n )1)((t iy )0)((d ei t^ )1)((i ng )0)))	;; ing
("anteing"	nil	(((a n )1)((t iy )0)((i ng )0)))	;; ing
("anthologising"	nil	(((a n )0)((th o )1)((l @ )0)((jh ai z )1)((i ng )0)))	;; ing
("anthologizing"	nil	(((a n )0)((th o )1)((l @ )0)((jh ai z )1)((i ng )0)))	;; ing
("anthonys"	nil	(((a n) 1) ((t @) 0) ((n ii z) 0)))	;; unique
("anthropomorphizing"	nil	(((a n )1)((th r @ )0)((p @ )0)((m oo )1)((f ai z )0)((i ng )0)))	;; ing
("anti-smoking"	nil	(((a n )1)((t iy )0)((s m ou k )1)((i ng )0)))	;; ing
("antialiasing"	nil	(((a n )1)((t iy )0)((ei )1)((l iy @ s )0)((i ng )0)))	;; ing
("anticipating"	nil	(((a n )0)((t i )1)((s @ )0)((p ei t^ )1)((i ng )0)))	;; ing
("antifoaming"	nil	(((a n )1)((t iy )0)((f ou m )1)((i ng )0)))	;; ing
("antifouling"	nil	(((a n )1)((t iy )0)((f ow l )1)((i ng )0)))	;; ing
("antigravitating"	nil	(((a n )1)((t iy )0)((g r a )1)((v @ )0)((t ei t^ )1)((i ng )0)))	;; ing
("antiing"	nil	(((a n )1)((t iy )0)((i ng )0)))	;; ing
("antisepticising"	nil	(((a n )1)((t iy )0)((s e p )1)((t i s )0)((ai z )1)((i ng )0)))	;; ing
("antisepticizing"	nil	(((a n )1)((t iy )0)((s e p )1)((t i s )0)((ai z )1)((i ng )0)))	;; ing
("antisolar"	nil	(((a n) 1) ((t ii) 0) ((s o) 1) ((l @) 0)))	;; oul
("antoines"	nil	(((o n) 0) ((t w a n z) 1)))	;; unique
("antonys"	nil	(((a n) 1) ((t @) 0) ((n ii z) 0)))	;; unique
("ants-eggs"	nil	(((a n t s) 1) (( e g z) 0)))	;; unique
("anviling"	nil	(((a n )1)((v i l )0)((i ng )0)))	;; ing
("anybodys"	nil	(((e) 1) ((n ii) 0) ((b o) 0) ((d ii z) 0)))	;; unique
("anyones"	nil	(((e) 1) ((n ii) 0) ((w uh n z) 1)))	;; unique
("anything"	nil	(((e )1)((n i )0)((th i ng )0)))	;; ing
("anythings"	nil	(((e) 1) ((n i) 0) ((th i ng z) 0)))	;; unique
("ao"	nil	(((ow) 1)))	;; unique
("aotearoa"	nil	(((ow) 0) ((t ir) 1) ((r ou) 1) ((@) 0)))	;; unique
("apartheids"	nil	(((@) 0) ((p aa t^) 1) ((ai d z) 0)))	;; unique
("apexs"	nil	(((ei) 1) ((p e k s) 0) ((@ z) 0)))	;; unique
("aphorising"	nil	(((a )1)((f @ )0)((r ai z )1)((i ng )0)))	;; ing
("aphorizing"	nil	(((a )1)((f @ )0)((r ai z )1)((i ng )0)))	;; ing
("apiha"	nil	(((aa) 1) ((p ii) 0) ((h aa) 0)))	;; unique
("aping"	nil	(((ei p )1)((i ng )0)))	;; ing
("apo"	nil	(((a) 1) ((p ou) 0)))	;; unique
("apologising"	nil	(((@ )0)((p o )1)((l @ )0)((jh ai z )1)((i ng )0)))	;; ing
("apologizing"	nil	(((@ )0)((p o )1)((l @ )0)((jh ai z )1)((i ng )0)))	;; ing
("apostatizing"	nil	(((@ )0)((p o )1)((s t @ t )0)((ai z )1)((i ng )0)))	;; ing
("apostrophising"	nil	(((@ )0)((p o )1)((s t r @ )0)((f ai z )1)((i ng )0)))	;; ing
("apostrophizing"	nil	(((@ )0)((p o )1)((s t r @ )0)((f ai z )1)((i ng )0)))	;; ing
("appaling"	nil	(((@ )0)((p oo l )1)((i ng )0)))	;; ing
("appalling"	nil	(((@ )0)((p oo l )1)((i ng )0)))	;; ing
("appareling"	nil	(((@ )0)((p a )1)((r @ l )0)((i ng )0)))	;; ing
("apparelling"	nil	(((@ )0)((p a )1)((r @ l )0)((i ng )0)))	;; ing
("appealing"	nil	(((@ )0)((p ii l )1)((i ng )0)))	;; ing
("appearing"	nil	(((@ )0)((p ir r )1)((i ng )0)))	;; ing
("appeasing"	nil	(((@ )0)((p ii z )1)((i ng )0)))	;; ing
("appending"	nil	(((@ )0)((p e n d )1)((i ng )0)))	;; ing
("appertaining"	nil	(((a )1)((p @ )0)((t ei n )1)((i ng )0)))	;; ing
("appetising"	nil	(((a )1)((p @ )0)((t ai z )1)((i ng )0)))	;; ing
("appetizing"	nil	(((a )1)((p @ )0)((t ai z )1)((i ng )0)))	;; ing
("applauding"	nil	(((@ )0)((p l oo d )1)((i ng )0)))	;; ing
("appliqueing"	nil	(((a )1)((p l @ )0)((k ei )1)((i ng )0)))	;; ing
("applying"	nil	(((@ )0)((p l ai )1)((i ng )0)))	;; ing
("appointing"	nil	(((@ )0)((p oi n t )1)((i ng )0)))	;; ing
("apportioning"	nil	(((@ )0)((p oo )1)((sh n! )0)((i ng )0)))	;; ing
("appraising"	nil	(((@ )0)((p r ei z )1)((i ng )0)))	;; ing
("appreciating"	nil	(((@ )0)((p r ii )1)((sh iy )0)((ei t^ )1)((i ng )0)))	;; ing
("apprehending"	nil	(((a )1)((p r i )0)((h e n d )1)((i ng )0)))	;; ing
("apprenticing"	nil	(((@ )0)((p r e n )1)((t i s )0)((i ng )0)))	;; ing
("apprising"	nil	(((@ )0)((p r ai z )1)((i ng )0)))	;; ing
("apprizing"	nil	(((@ )0)((p r ai z )1)((i ng )0)))	;; ing
("approaching"	nil	(((@ )0)((p r ou ch )1)((i ng )0)))	;; ing
("appropriating"	nil	(((@ )0)((p r ou )1)((p r iy )0)((ei t^ )1)((i ng )0)))	;; ing
("approving"	nil	(((@ )0)((p r uu v )1)((i ng )0)))	;; ing
("approximating"	nil	(((@ )0)((p r o k )1)((s @ )0)((m ei t^ )1)((i ng )0)))	;; ing
("aquaplaning"	nil	(((a )1)((k w @ )0)((p l ei n )1)((i ng )0)))	;; ing
("aquinos"	nil	(((@) 0) ((k ii) 1) ((n ou z) 0)))	;; unique
("araara"	nil	(((aa) 0) ((r aa) 1) ((r @) 0)))	;; unique
("arabias"	nil	(((@) 0) ((r ei) 1) ((b ir z) 0)))	;; unique
("arafats"	nil	(((a) 1) ((r @) 0) ((f a t s) 0)))	;; unique
("arbitrating"	nil	(((aa )1)((b @ )0)((t r ei t^ )1)((i ng )0)))	;; ing
("archfool"	nil	(((aa ch) 0) ((f u l) 1)))	;; uul
("arching"	nil	(((aa ch )1)((i ng )0)))	;; ing
("architecting"	nil	(((aa )1)((k i )0)((t e k t )1)((i ng )0)))	;; ing
("archiveing"	nil	(((aa )1)((k ai v )0)((i ng )0)))	;; ing
("archiving"	nil	(((aa )1)((k ai v )0)((i ng )0)))	;; ing
("arcing"	nil	(((aa k )1)((i ng )0)))	;; ing
("aren't"	nil	(((aa n t) 1)))	;; contraction
("argueing"	nil	(((aa )1)((g y uw )0)((i ng )0)))	;; ing
("arguing"	nil	(((aa )1)((g y uw )0)((i ng )0)))	;; ing
("ariki"	nil	(((aa) 1) ((r ii) 0) ((k ii) 0)))	;; unique
("arising"	nil	(((@ )0)((r ai z )1)((i ng )0)))	;; ing
("aristotles"	nil	(((a) 1) ((r @) 0) ((s t o) 1) ((t l! z) 0)))	;; unique
("arizonas"	nil	(((a) 1) ((r i) 0) ((z ou) 1) ((n @ z) 0)))	;; unique
("armhole"	nil	(((aa m) 1) ((h o l) 0)))	;; oul
("armholes"	nil	(((aa m) 1) ((h o l z) 0)))	;; oul
("arming"	nil	(((aa m )1)((i ng )0)))	;; ing
("armstrongs"	nil	(((aa m) 1) ((s t r o ng z) 0)))	;; unique
("armys"	nil	(((aa) 1) ((m ii z) 0)))	;; unique
("aroha"	nil	(((aa) 1) ((r ou) 0) ((h aa) 0)))	;; unique
("arohanui"	nil	(((aa) 1) ((r ou) 0) ((h a) 0) ((n uu) 1) ((ii) 0)))	;; unique
("arousing"	nil	(((@ )0)((r ow z )1)((i ng )0)))	;; ing
("arraigning"	nil	(((@ )0)((r ei n )1)((i ng )0)))	;; ing
("arranging"	nil	(((@ )0)((r ei n jh )1)((i ng )0)))	;; ing
("arraying"	nil	(((@ )0)((r ei )1)((i ng )0)))	;; ing
("arresting"	nil	(((@ )0)((r e s t )1)((i ng )0)))	;; ing
("arriving"	nil	(((@ )0)((r ai v )1)((i ng )0)))	;; ing
("arrogating"	nil	(((a )1)((r @ )0)((g ei t^ )1)((i ng )0)))	;; ing
("arse-licking"	nil	(((aa s )1)((l i k )1)((i ng )0)))	;; ing
("arsehole"	nil	(((aa s) 1) ((h o l) 0)))	;; oul
("arseholes"	nil	(((aa s) 1) ((h o l z) 0)))	;; oul
("arteriole"	nil	(((aa) 0) ((t ir) 1) ((r ii) 0) ((o l) 0)))	;; oul
("arthurs"	nil	(((aa) 1) ((th @ z) 0)))	;; unique
("articulating"	nil	(((aa )0)((t i )1)((k y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("artillerymans"	nil	(((aa) 0) ((t i) 1) ((l @) 0) ((r ii) 0) ((m @ n z) 0)))	;; unique
("arubas"	nil	(((@) 0) ((r uu) 1) ((b @ z) 0)))	;; unique
("aruhe"	nil	(((aa) 1) ((r uu) 0) ((h ei) 0)))	;; unique
("asacol"	nil	(((a) 1) ((s @) 0) ((k o l) 1)))	;; unique
("ascending"	nil	(((@ )0)((s e n d )1)((i ng )0)))	;; ing
("ascertaining"	nil	(((a )1)((s @ )0)((t ei n )1)((i ng )0)))	;; ing
("ascribing"	nil	(((@ )0)((s k r ai b )1)((i ng )0)))	;; ing
("ashaming"	nil	(((@ )0)((sh ei m )1)((i ng )0)))	;; ing
("ashmolean"	nil	(((a sh) 0) ((m o) 1) ((l ii @ n) 0)))	;; oul
("ashs"	nil	(((a sh) 1) ((@ z) 0)))	;; unique
("asias"	nil	(((ei) 1) ((zh @ z) 0)))	;; unique
("asking"	nil	(((aa s k )1)((i ng )0)))	;; ing
("asphalting"	nil	(((a s )1)((f oo l t )0)((i ng )0)))	;; ing
("asphyxiating"	nil	(((@ s )0)((f i k )1)((s iy )0)((ei t^ )1)((i ng )0)))	;; ing
("aspirating"	nil	(((a )1)((s p @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("aspiring"	nil	(((@ )0)((s p ai @ r )1)((i ng )0)))	;; ing
("assailing"	nil	(((@ )0)((s ei l )1)((i ng )0)))	;; ing
("assassinating"	nil	(((@ )0)((s a )1)((s i n )0)((ei t^ )1)((i ng )0)))	;; ing
("assaulting"	nil	(((@ )0)((s oo l t )1)((i ng )0)))	;; ing
("assaying"	nil	(((@ )0)((s ei )1)((i ng )0)))	;; ing
("assembling"	nil	(((@ )0)((s e m )1)((b l! )0)((i ng )0)))	;; ing
("assemblys"	nil	(((@) 0) ((s e m) 1) ((b l ii z) 0)))	;; unique
("assenting"	nil	(((@ )0)((s e n t )1)((i ng )0)))	;; ing
("asserting"	nil	(((@ )0)((s @@r t^ )1)((i ng )0)))	;; ing
("assessing"	nil	(((@ )0)((s e s )1)((i ng )0)))	;; ing
("asseverating"	nil	(((@ )0)((s e )1)((v @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("asshole"	nil	(((aa s) 1) ((h o l) 0)))	;; oul
("assholes"	nil	(((aa s) 1) ((h o l z) 0)))	;; oul
("assibilating"	nil	(((@ )0)((s i )1)((b @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("assigning"	nil	(((@ )0)((s ai n )1)((i ng )0)))	;; ing
("assimilating"	nil	(((@ )0)((s i )1)((m @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("assing"	nil	(((aa s )1)((i ng )0)))	;; ing
("assisting"	nil	(((@ )0)((s i s t )1)((i ng )0)))	;; ing
("associating"	nil	(((@ )0)((s ou )1)((s iy )0)((ei t^ )1)((i ng )0)))	;; ing
("assorting"	nil	(((@ )0)((s oo t^ )1)((i ng )0)))	;; ing
("assuaging"	nil	(((@ )0)((s w ei jh )1)((i ng )0)))	;; ing
("assuming"	nil	(((@ )0)((s y uu m )1)((i ng )0)))	;; ing
("assuring"	nil	(((@ )0)((sh ur r )1)((i ng )0)))	;; ing
("astonishing"	nil	(((@ )0)((s t o )1)((n i sh )0)((i ng )0)))	;; ing
("astounding"	nil	(((@ )0)((s t ow n d )1)((i ng )0)))	;; ing
("astronomys"	nil	(((@) 0) ((s t r o) 1) ((n @) 0) ((m ii z) 0)))	;; unique
("ataata"	nil	(((aa) 0) ((t aa) 1) ((t^ @) 0)))	;; unique
("atacand"	nil	(((a) 1) ((t^ @) 0) ((k a n d) 1)))	;; unique
("atea"	nil	(((aa) 1) ((t e) 0) ((@) 0)))	;; unique
("atlantas"	nil	(((@ t) 0) ((l a n) 1) ((t @ z) 0)))	;; unique
("atlass"	nil	(((a t) 1) ((l @ s) 0) ((@ z) 0)))	;; unique
("atomizing"	nil	(((a )1)((t^ @ m )0)((ai z )1)((i ng )0)))	;; ing
("atoning"	nil	(((@ )0)((t ou n )1)((i ng )0)))	;; ing
("atorvastatin"	nil	(((a) 1) ((t @) 0) ((v a) 1) ((s t @) 0) ((t i n) 0)))	;; unique
("atrophying"	nil	(((a )1)((t r @ )0)((f iy )0)((i ng )0)))	;; ing
("attaching"	nil	(((@ )0)((t a ch )1)((i ng )0)))	;; ing
("attacking"	nil	(((@ )0)((t a k )1)((i ng )0)))	;; ing
("attaining"	nil	(((@ )0)((t ei n )1)((i ng )0)))	;; ing
("attempting"	nil	(((@ )0)((t e m p t )1)((i ng )0)))	;; ing
("attending"	nil	(((@ )0)((t e n d )1)((i ng )0)))	;; ing
("attenuating"	nil	(((@ )0)((t e )1)((n y uw )0)((ei t^ )1)((i ng )0)))	;; ing
("attesting"	nil	(((@ )0)((t e s t )1)((i ng )0)))	;; ing
("attiring"	nil	(((@ )0)((t ai @ r )1)((i ng )0)))	;; ing
("attitudinising"	nil	(((a )1)((t^ @ )0)((t y uu d )1)((i n )0)((ai z )1)((i ng )0)))	;; ing
("attitudinizing"	nil	(((a )1)((t^ @ )0)((t y uu d )1)((i n )0)((ai z )1)((i ng )0)))	;; ing
("attracting"	nil	(((@ )0)((t r a k t )1)((i ng )0)))	;; ing
("attributing"	nil	(((@ )0)((t r i )1)((b y uw t^ )0)((i ng )0)))	;; ing
("attuning"	nil	(((@ )0)((t y uu n )1)((i ng )0)))	;; ing
("atua"	nil	(((aa) 1) ((t uu) 0) ((@) 0)))	;; unique
("aua"	nil	(((ow) 1) ((@) 0)))	;; unique
("auctioneering"	nil	(((oo k )1)((sh n! )0)((ir r )1)((i ng )0)))	;; ing
("auctioning"	nil	(((oo k )1)((sh n! )0)((i ng )0)))	;; ing
("audiocoding"	nil	(((oo )1)((d iy )0)((ou )0)((k ou d )1)((i ng )0)))	;; ing
("audioconferencing"	nil	(((oo )1)((d iy )0)((ou )0)((k o n )1)((f @ r )0)((@ n s )0)((i ng )0)))	;; ing
("audioplaying"	nil	(((oo )1)((d iy )0)((ou )1)((p l ei )1)((i ng )0)))	;; ing
("audiotaping"	nil	(((oo )1)((d iy )0)((ou )0)((t ei p )1)((i ng )0)))	;; ing
("audiotool"	nil	(((oo) 1) ((d ii) 0) ((ou) 0) ((t u l) 1)))	;; uul
("audiotools"	nil	(((oo) 1) ((d ii) 0) ((ou) 0) ((t u l z) 1)))	;; uul
("audiotyping"	nil	(((oo )1)((d iy )0)((ou )0)((t ai p )1)((i ng )0)))	;; ing
("auditing"	nil	(((oo )1)((d @ t^ )0)((i ng )0)))	;; ing
("auditioning"	nil	(((oo )0)((d i )1)((sh n! )0)((i ng )0)))	;; ing
("aue"	nil	(((ow) 0) ((ei) 1)))	;; unique
("augmenting"	nil	(((oo g )0)((m e n t )1)((i ng )0)))	;; ing
("auguring"	nil	(((oo )1)((g @ r )0)((i ng )0)))	;; ing
("augustas"	nil	(((oo) 0) ((g uh) 1) ((s t @ z) 0)))	;; unique
("aukati"	nil	(((ow) 1) ((k aa) 0) ((t ii) 0)))	;; unique
("aureole"	nil	(((oo) 1) ((r ii) 0) ((o l) 0)))	;; oul
("australias"	nil	(((o) 0) ((s t r ei) 1) ((l y @ z) 0)))	;; unique
("austrias"	nil	(((o) 1) ((s t r ir z) 0)))	;; unique
("aute"	nil	(((ow) 1) ((t ei) 0)))	;; unique
("authenticating"	nil	(((oo )0)((th e n )1)((t @ k )0)((ei t^ )1)((i ng )0)))	;; ing
("authord"	nil	(((oo) 1) ((th @ d) 0)))	;; unique
("authoring"	nil	(((oo )1)((th @ r )0)((i ng )0)))	;; ing
("authorising"	nil	(((oo )1)((th @ )0)((r ai z )1)((i ng )0)))	;; ing
("authoritys"	nil	(((oo) 0) ((th o) 1) ((r @) 0) ((t^ ii z) 0)))	;; unique
("authorizing"	nil	(((oo )1)((th @ )0)((r ai z )1)((i ng )0)))	;; ing
("autoassigning"	nil	(((oo )1)((t^ ou @ )0)((s ai n )1)((i ng )0)))	;; ing
("autocollimating"	nil	(((oo )1)((t^ ou )0)((k o )1)((l @ )0)((m ei t^ )1)((i ng )0)))	;; ing
("autocuing"	nil	(((oo )1)((t^ ou )0)((k y uu )1)((i ng )0)))	;; ing
("autodetecting"	nil	(((oo )1)((t^ ou )0)((d i )0)((t e k t )1)((i ng )0)))	;; ing
("autodialing"	nil	(((oo )1)((t^ ou )0)((d ai @ l )1)((i ng )0)))	;; ing
("autographing"	nil	(((oo )1)((t^ @ )0)((g r aa f )1)((i ng )0)))	;; ing
("autoindenting"	nil	(((oo )1)((t^ ou )0)((i n )0)((d e n t )1)((i ng )0)))	;; ing
("autoinstalling"	nil	(((oo )1)((t^ ou )0)((i n )0)((s t oo l )1)((i ng )0)))	;; ing
("autoload"	nil	(((oo) 1) ((t^ o) 0) ((l ou d) 1)))	;; oul
("autoloaded"	nil	(((oo) 1) ((t^ o) 0) ((l ou d) 1) ((@ d) 0)))	;; oul
("autoloader"	nil	(((oo) 1) ((t^ o) 0) ((l ou d) 1) ((@) 0)))	;; oul
("autoloaders"	nil	(((oo) 1) ((t^ o) 0) ((l ou d) 1) ((@ z) 0)))	;; oul
("autoloading"	nil	(((oo) 1) ((t^ o) 0) ((l ou d) 1) ((i ng) 0)))	;; oul
("autoloadings"	nil	(((oo) 1) ((t^ o) 0) ((l ou d) 1) ((i ng z) 0)))	;; oul
("autoloads"	nil	(((oo) 1) ((t^ o) 0) ((l ou d z) 1)))	;; oul
("automating"	nil	(((oo )1)((t^ @ )0)((m ei t^ )1)((i ng )0)))	;; ing
("automounting"	nil	(((oo )1)((t^ ou )0)((m ow n t )1)((i ng )0)))	;; ing
("availing"	nil	(((@ )0)((v ei l )1)((i ng )0)))	;; ing
("avengeing"	nil	(((@ )0)((v e n jh )1)((i ng )0)))	;; ing
("avenging"	nil	(((@ )0)((v e n jh )1)((i ng )0)))	;; ing
("averaging"	nil	(((a )1)((v @ )0)((r i jh )0)((i ng )0)))	;; ing
("averring"	nil	(((@ )0)((v @@r r )1)((i ng )0)))	;; ing
("averting"	nil	(((@ )0)((v @@r t^ )1)((i ng )0)))	;; ing
("aviating"	nil	(((ei )1)((v iy )0)((ei t^ )1)((i ng )0)))	;; ing
("avocating"	nil	(((a )1)((v @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("avogadros"	nil	(((a) 1) ((v @) 0) ((g aa) 1) ((d r ou z) 0)))	;; unique
("avoiding"	nil	(((@ )0)((v oi d )1)((i ng )0)))	;; ing
("avowing"	nil	(((@ )0)((v ow )1)((i ng )0)))	;; ing
("awa"	nil	(((aa) 1) ((w @) 0)))	;; unique
("awaiting"	nil	(((@ )0)((w ei t^ )1)((i ng )0)))	;; ing
("awakairangi"	nil	(((aa) 0) ((w aa) 0) ((k ai) 0) ((r uh ng) 0) ((ii) 0)))	;; unique
("awakening"	nil	(((@ )0)((w ei k )1)((@ n )0)((i ng )0)))	;; ing
("awaking"	nil	(((@ )0)((w ei k )1)((i ng )0)))	;; ing
("award-winning"	nil	(((@ )0)((w oo d )1)((w i n )1)((i ng )0)))	;; ing
("awarding"	nil	(((@ )0)((w oo d )1)((i ng )0)))	;; ing
("awe-compelling"	nil	(((oo )1)((k @ m )0)((p a l )1)((i ng )0)))	;; ing
("awe-inspiring"	nil	(((oo )1)((i n )0)((s p ai @ r )1)((i ng )0)))	;; ing
("awhato"	nil	(((@) 0) ((f aa) 1) ((t ou) 0)))	;; unique
("awhi"	nil	(((aa) 1) ((f ii) 0)))	;; unique
("awhina"	nil	(((aa) 1) ((f ii) 0) ((n @) 0)))	;; unique
("awning"	nil	(((oo )1)((n i ng )0)))	;; ing
("azathiprine"	nil	(((@) 0) ((z a) 1) ((th @) 0) ((p r ii n) 1)))	;; unique
("babbling"	nil	(((b a )1)((b l! )0)((i ng )0)))	;; ing
("baby-sitting"	nil	(((b ei )1)((b iy )0)((s i t^ )1)((i ng )0)))	;; ing
("babying"	nil	(((b ei )1)((b iy )0)((i ng )0)))	;; ing
("babys"	nil	(((b ei) 1) ((b ii z) 0)))	;; unique
("babysitting"	nil	(((b ei )1)((b iy )0)((s i t^ )1)((i ng )0)))	;; ing
("back-combing"	nil	(((b a k )1)((k ou m )1)((i ng )0)))	;; ing
("backbiting"	nil	(((b a k )1)((b ai t^ )1)((i ng )0)))	;; ing
("backbreaking"	nil	(((b a k )1)((b r ei k )1)((i ng )0)))	;; ing
("backdating"	nil	(((b a k )0)((d ei t^ )1)((i ng )0)))	;; ing
("backfiring"	nil	(((b a k )0)((f ai @ r )1)((i ng )0)))	;; ing
("backgrounding"	nil	(((b a k )1)((g r ow n d )1)((i ng )0)))	;; ing
("backing"	nil	(((b a k )1)((i ng )0)))	;; ing
("backlashing"	nil	(((b a k )1)((l a sh )1)((i ng )0)))	;; ing
("backlighting"	nil	(((b a k )1)((l ai t^ )1)((i ng )0)))	;; ing
("backordering"	nil	(((b a k )1)((oo )1)((d @ r )0)((i ng )0)))	;; ing
("backpacking"	nil	(((b a k )1)((p a k )1)((i ng )0)))	;; ing
("backpedaling"	nil	(((b a k )1)((p e )1)((d l! )0)((i ng )0)))	;; ing
("backpedalling"	nil	(((b a k )1)((p e )1)((d l! )0)((i ng )0)))	;; ing
("backscattering"	nil	(((b a k )1)((s k a )1)((t^ @ r )0)((i ng )0)))	;; ing
("backscratching"	nil	(((b a k )1)((s k r a ch )1)((i ng )0)))	;; ing
("backslapping"	nil	(((b a k )1)((s l a p )1)((i ng )0)))	;; ing
("backsliding"	nil	(((b a k )1)((s l ai d )1)((i ng )0)))	;; ing
("backspacing"	nil	(((b a k )1)((s p ei s )1)((i ng )0)))	;; ing
("backspinning"	nil	(((b a k )1)((s p i n )1)((i ng )0)))	;; ing
("backstabbing"	nil	(((b a k )1)((s t a b )1)((i ng )0)))	;; ing
("backstepping"	nil	(((b a k )1)((s t e p )1)((i ng )0)))	;; ing
("backstitching"	nil	(((b a k )1)((s t i ch )1)((i ng )0)))	;; ing
("backstopping"	nil	(((b a k )1)((s t o p )1)((i ng )0)))	;; ing
("backtracking"	nil	(((b a k )1)((t r a k )1)((i ng )0)))	;; ing
("backwashing"	nil	(((b a k )1)((w o sh )1)((i ng )0)))	;; ing
("badgering"	nil	(((b a )1)((jh @ r )0)((i ng )0)))	;; ing
("badmouthing"	nil	(((b a d )1)((m ow dh )1)((i ng )0)))	;; ing
("bads"	nil	(((b a d z) 1)))	;; unique
("baffling"	nil	(((b a )1)((f l! )0)((i ng )0)))	;; ing
("bagging"	nil	(((b a g )1)((i ng )0)))	;; ing
("baghdads"	nil	(((b a g) 0) ((d a d z) 1)))	;; unique
("bagholders"	nil	(((b a g) 1) ((h o l d) 1) ((@ z) 0)))	;; oul
("bahrains"	nil	(((b aa) 0) ((r ei n z) 1)))	;; unique
("bailing"	nil	(((b ei l )1)((i ng )0)))	;; ing
("baiting"	nil	(((b ei t^ )1)((i ng )0)))	;; ing
("baking"	nil	(((b ei k )1)((i ng )0)))	;; ing
("balancing"	nil	(((b a )1)((l @ n s )0)((i ng )0)))	;; ing
("balding"	nil	(((b oo l d )1)((i ng )0)))	;; ing
("baling"	nil	(((b ei l )1)((i ng )0)))	;; ing
("balkanizing"	nil	(((b oo l )1)((k @ n )0)((ai z )1)((i ng )0)))	;; ing
("balking"	nil	(((b oo k )1)((i ng )0)))	;; ing
("ballbearing"	nil	(((b oo l )1)((b ir r )1)((i ng )0)))	;; ing
("ballooning"	nil	(((b @ )0)((l uu n )1)((i ng )0)))	;; ing
("balloting"	nil	(((b a )1)((l @ t^ )0)((i ng )0)))	;; ing
("balmorals"	nil	(((b a l) 0) ((m o) 1) ((r @ l z) 0)))	;; unique
("bamboozling"	nil	(((b a m )0)((b uu )1)((z l! )0)((i ng )0)))	;; ing
("bandaging"	nil	(((b a n d )1)((i jh )0)((i ng )0)))	;; ing
("banding"	nil	(((b a n d )1)((i ng )0)))	;; ing
("bandying"	nil	(((b a n )1)((d iy )0)((i ng )0)))	;; ing
("banging"	nil	(((b a ng )1)((i ng )0)))	;; ing
("bangladeshs"	nil	(((b a ng) 1) ((g l @) 0) ((d e sh) 1) ((@ z) 0)))	;; unique
("banishing"	nil	(((b a )1)((n i sh )0)((i ng )0)))	;; ing
("banking"	nil	(((b a ng k )1)((i ng )0)))	;; ing
("bankroll"	nil	(((b a ng k) 1) ((r o l) 0)))	;; oul
("bankrolled"	nil	(((b a ng k) 1) ((r o l d) 0)))	;; oul
("bankrolling"	nil	(((b a ng k) 1) ((r o l) 1) ((i ng) 0)))	;; oul
("bankrolls"	nil	(((b a ng k) 1) ((r o l z) 0)))	;; oul
("bankrupting"	nil	(((b a ng )1)((k r uh p t )0)((i ng )0)))	;; ing
("bankswitching"	nil	(((b a ng k )1)((s w i ch )1)((i ng )0)))	;; ing
("banning"	nil	(((b a n )1)((i ng )0)))	;; ing
("banqueting"	nil	(((b a ng )1)((k w @ t^ )0)((i ng )0)))	;; ing
("bantering"	nil	(((b a n )1)((t @ r )0)((i ng )0)))	;; ing
("baptising"	nil	(((b a p )0)((t ai z )1)((i ng )0)))	;; ing
("baptizing"	nil	(((b a p )0)((t ai z )1)((i ng )0)))	;; ing
("barbaras"	nil	(((b aa) 1) ((b @) 0) ((r @ z) 0)))	;; unique
("barbecueing"	nil	(((b aa )1)((b @ )0)((k y uu )1)((i ng )0)))	;; ing
("barbecuing"	nil	(((b aa )1)((b @ )0)((k y uu )1)((i ng )0)))	;; ing
("bargaining"	nil	(((b aa )1)((g @ n )0)((i ng )0)))	;; ing
("bargepole"	nil	(((b aa jh) 1) ((p o l) 0)))	;; oul
("bargepoles"	nil	(((b aa jh) 1) ((p o l z) 0)))	;; oul
("barging"	nil	(((b aa jh )1)((i ng )0)))	;; ing
("baring"	nil	(((b ir r )1)((i ng )0)))	;; ing
("barking"	nil	(((b aa )1)((k i ng )0)))	;; ing
("barleys"	nil	(((b aa) 1) ((l ii z) 0)))	;; unique
("barnards"	nil	(((b aa) 1) ((n aa d z) 0)))	;; unique
("barness"	nil	(((b aa n z) 1) ((@ z) 0)))	;; unique
("barnsleys"	nil	(((b aa n z) 1) ((l ii z) 0)))	;; unique
("barnstorming"	nil	(((b aa n )1)((s t oo m )1)((i ng )0)))	;; ing
("barracking"	nil	(((b a )1)((r @ k )0)((i ng )0)))	;; ing
("barreling"	nil	(((b a )1)((r @ l )0)((i ng )0)))	;; ing
("barrelling"	nil	(((b a )1)((r @ l )0)((i ng )0)))	;; ing
("barricading"	nil	(((b a )1)((r @ )0)((k ei d )1)((i ng )0)))	;; ing
("barring"	nil	(((b aa r )1)((i ng )0)))	;; ing
("barrys"	nil	(((b a) 1) ((r ii z) 0)))	;; unique
("bartending"	nil	(((b aa )1)((t e n d )1)((i ng )0)))	;; ing
("bartering"	nil	(((b aa )1)((t^ @ r )0)((i ng )0)))	;; ing
("bartoks"	nil	(((b aa) 1) ((t^ o k s) 0)))	;; unique
("bashing"	nil	(((b a sh )1)((i ng )0)))	;; ing
("bashs"	nil	(((b a sh) 1) ((@ z) 0)))	;; unique
("basing"	nil	(((b ei s )1)((i ng )0)))	;; ing
("basket-making"	nil	(((b aa )1)((s k @ t )0)((m ei k )1)((i ng )0)))	;; ing
("basking"	nil	(((b aa s k )1)((i ng )0)))	;; ing
("bastardising"	nil	(((b aa )1)((s t @ d )0)((ai z )1)((i ng )0)))	;; ing
("bastardizing"	nil	(((b aa )1)((s t @ d )0)((ai z )1)((i ng )0)))	;; ing
("basting"	nil	(((b ei s t )1)((i ng )0)))	;; ing
("batching"	nil	(((b a ch )1)((i ng )0)))	;; ing
("bathing"	nil	(((b ei dh )1)((i ng )0)))	;; ing
("bating"	nil	(((b ei t^ )1)((i ng )0)))	;; ing
("batmans"	nil	(((b a t) 1) ((m a n z) 0)))	;; unique
("batsons"	nil	(((b a t) 1) ((s n! z) 0)))	;; unique
("battening"	nil	(((b a )1)((t n! )0)((i ng )0)))	;; ing
("battered-looking"	nil	(((b a )1)((t^ @ d )0)((l u k )1)((i ng )0)))	;; ing
("battering"	nil	(((b a )1)((t^ @ r )0)((i ng )0)))	;; ing
("batting"	nil	(((b a t^ )1)((i ng )0)))	;; ing
("battling"	nil	(((b a )1)((t l! )0)((i ng )0)))	;; ing
("bawling"	nil	(((b oo l )1)((i ng )0)))	;; ing
("baxters"	nil	(((b a k) 1) ((s t @ z) 0)))	;; unique
("bayers"	nil	(((b ei @ z) 1)))	;; unique
("baying"	nil	(((b ei )1)((i ng )0)))	;; ing
("bayness"	nil	(((b ei n z) 1) ((@ z) 0)))	;; unique
("bayoneting"	nil	(((b ei @ )1)((n @ t^ )0)((i ng )0)))	;; ing
("beachcombing"	nil	(((b ii ch )1)((k ou m )1)((i ng )0)))	;; ing
("beaching"	nil	(((b ii ch )1)((i ng )0)))	;; ing
("beachs"	nil	(((b ii ch) 1) ((@ z) 0)))	;; unique
("beaconing"	nil	(((b ii )1)((k @ n )0)((i ng )0)))	;; ing
("beading"	nil	(((b ii d )1)((i ng )0)))	;; ing
("beaming"	nil	(((b ii m )1)((i ng )0)))	;; ing
("beanpole"	nil	(((b ii n) 1) ((p o l) 0)))	;; oul
("beanpoles"	nil	(((b ii n) 1) ((p o l z) 0)))	;; oul
("bearing"	nil	(((b ir r )1)((i ng )0)))	;; ing
("beatifying"	nil	(((b iy )0)((a )1)((t^ @ )0)((f ai )1)((i ng )0)))	;; ing
("beating"	nil	(((b ii t^ )1)((i ng )0)))	;; ing
("beatrices"	nil	(((b ii @) 1) ((t r @ s) 0) ((@ z) 0)))	;; unique
("beatys"	nil	(((b ii) 1) ((t^ ii z) 0)))	;; unique
("beautifying"	nil	(((b y uu )1)((t^ @ )0)((f ai )1)((i ng )0)))	;; ing
("beauty-loving"	nil	(((b y uu )1)((t^ iy )0)((l uh v )1)((i ng )0)))	;; ing
("beautys"	nil	(((b y uu) 1) ((t^ ii z) 0)))	;; unique
("beavering"	nil	(((b ii )1)((v @ r )0)((i ng )0)))	;; ing
("bebopping"	nil	(((b ii )1)((b o p )1)((i ng )0)))	;; ing
("becalming"	nil	(((b i )0)((k aa m )1)((i ng )0)))	;; ing
("bechers"	nil	(((b ii) 1) ((ch @ z) 0)))	;; unique
("beckers"	nil	(((b e) 1) ((k @ z) 0)))	;; unique
("beckoning"	nil	(((b e )1)((k @ n )0)((i ng )0)))	;; ing
("becoming"	nil	(((b i )0)((k uh m )1)((i ng )0)))	;; ing
("bed-wetting"	nil	(((b e d )1)((w e t^ )1)((i ng )0)))	;; ing
("bedazzling"	nil	(((b i )0)((d a )1)((z l! )0)((i ng )0)))	;; ing
("bedding"	nil	(((b e d )1)((i ng )0)))	;; ing
("bedecking"	nil	(((b i )0)((d e k )1)((i ng )0)))	;; ing
("bedeviling"	nil	(((b i )0)((d e )1)((v l! )0)((i ng )0)))	;; ing
("bedevilling"	nil	(((b i )0)((d e )1)((v l! )0)((i ng )0)))	;; ing
("bedimming"	nil	(((b i )0)((d i m )1)((i ng )0)))	;; ing
("bedraggling"	nil	(((b i )0)((d r a )1)((g l! )0)((i ng )0)))	;; ing
("beechers"	nil	(((b ii) 1) ((ch @ z) 0)))	;; unique
("beefing"	nil	(((b ii f )1)((i ng )0)))	;; ing
("beeing"	nil	(((b ii )1)((i ng )0)))	;; ing
("beekeeping"	nil	(((b ii )1)((k ii p )1)((i ng )0)))	;; ing
("beeping"	nil	(((b ii p )1)((i ng )0)))	;; ing
("beer-drinking"	nil	(((b ii @ )1)((d r i ng k )1)((i ng )0)))	;; ing
("beethovens"	nil	(((b ei t) 1) ((h ou) 1) ((v n! z) 0)))	;; unique
("beetling"	nil	(((b ii )1)((t l! )0)((i ng )0)))	;; ing
("befalling"	nil	(((b i )0)((f oo l )1)((i ng )0)))	;; ing
("befitting"	nil	(((b i )0)((f i t^ )1)((i ng )0)))	;; ing
("befogging"	nil	(((b i )0)((f o g )1)((i ng )0)))	;; ing
("befriending"	nil	(((b i )0)((f r e n d )1)((i ng )0)))	;; ing
("befuddling"	nil	(((b i )0)((f uh )1)((d l! )0)((i ng )0)))	;; ing
("begetting"	nil	(((b i )0)((g e t^ )1)((i ng )0)))	;; ing
("beggaring"	nil	(((b e g )1)((@ r )0)((i ng )0)))	;; ing
("begging"	nil	(((b e g )1)((i ng )0)))	;; ing
("beginning"	nil	(((b i )0)((g i n )1)((i ng )0)))	;; ing
("begriming"	nil	(((b i )0)((g r ai m )1)((i ng )0)))	;; ing
("begrudging"	nil	(((b i )0)((g r uh jh )1)((i ng )0)))	;; ing
("beguiling"	nil	(((b i )0)((g ai l )1)((i ng )0)))	;; ing
("behaving"	nil	(((b i )0)((h ei v )1)((i ng )0)))	;; ing
("beheading"	nil	(((b i )0)((h e d )1)((i ng )0)))	;; ing
("behold"	nil	(((b i) 0) ((h o l d) 1)))	;; oul
("beholden"	nil	(((b i) 0) ((h o l d) 1) ((n!) 0)))	;; oul
("beholder"	nil	(((b i) 0) ((h o l d) 1) ((@) 0)))	;; oul
("beholders"	nil	(((b i) 0) ((h o l d) 1) ((@ z) 0)))	;; oul
("beholding"	nil	(((b i) 0) ((h o l d) 1) ((i ng) 0)))	;; oul
("beholds"	nil	(((b i) 0) ((h o l d z) 1)))	;; oul
("behoving"	nil	(((b i )0)((h ou v )1)((i ng )0)))	;; ing
("being"	nil	(((b ii )1)((i ng )0)))	;; ing
("bejeweling"	nil	(((b i )0)((jh uu @ l )1)((i ng )0)))	;; ing
("bejewelling"	nil	(((b i )0)((jh uu @ l )1)((i ng )0)))	;; ing
("belaboring"	nil	(((b i )0)((l ei )1)((b @ r )0)((i ng )0)))	;; ing
("belching"	nil	(((b a l ch )1)((i ng )0)))	;; ing
("belding"	nil	(((b a l )1)((d i ng )0)))	;; ing
("belgiums"	nil	(((b a l) 1) ((jh @ m z) 0)))	;; unique
("belgrades"	nil	(((b a l) 0) ((g r ei d z) 1)))	;; unique
("believing"	nil	(((b @ )0)((l ii v )1)((i ng )0)))	;; ing
("belittling"	nil	(((b i )0)((l i )1)((t l! )0)((i ng )0)))	;; ing
("belizes"	nil	(((b i) 0) ((l ii z) 1) ((@ z) 0)))	;; unique
("bellcores"	nil	(((b a l) 1) ((k oo z) 0)))	;; unique
("bellowing"	nil	(((b a )1)((l ou )0)((i ng )0)))	;; ing
("bellpushing"	nil	(((b a l )1)((p u sh )1)((i ng )0)))	;; ing
("belly-aching"	nil	(((b a )1)((l iy )0)((ei k )1)((i ng )0)))	;; ing
("belly-dancing"	nil	(((b a )1)((l iy )0)((d aa n s )1)((i ng )0)))	;; ing
("bellyaching"	nil	(((b a )1)((l iy )0)((ei k )1)((i ng )0)))	;; ing
("bellyflopping"	nil	(((b a )1)((l iy )0)((f l o p )1)((i ng )0)))	;; ing
("bellylaughing"	nil	(((b a )1)((l iy )0)((l aa f )1)((i ng )0)))	;; ing
("belonging"	nil	(((b @ )0)((l o ng )1)((i ng )0)))	;; ing
("beloving"	nil	(((b i )0)((l uh v )1)((i ng )0)))	;; ing
("belting"	nil	(((b a l t )1)((i ng )0)))	;; ing
("belying"	nil	(((b i )0)((l ai )1)((i ng )0)))	;; ing
("bemaddening"	nil	(((b i )0)((m a d )1)((n! )0)((i ng )0)))	;; ing
("bemoaning"	nil	(((b i )0)((m ou n )1)((i ng )0)))	;; ing
("bemusing"	nil	(((b i )0)((m y uu z )1)((i ng )0)))	;; ing
("benchmarking"	nil	(((b e n ch )1)((m aa k )1)((i ng )0)))	;; ing
("bending"	nil	(((b e n d )1)((i ng )0)))	;; ing
("bendrofluazide"	nil	(((b e n) 1) ((d r @) 0) ((f l uu) 1) ((r @) 0) ((z ai d) 1)))	;; unique
("beneficiarys"	nil	(((b e) 1) ((n @) 0) ((f i) 1) ((sh @) 0) ((r ii z) 0)))	;; unique
("benefiting"	nil	(((b e )1)((n @ )0)((f i t^ )1)((i ng )0)))	;; ing
("benefitting"	nil	(((b e )1)((n @ )0)((f i t^ )1)((i ng )0)))	;; ing
("benins"	nil	(((b e) 0) ((n ii n z) 1)))	;; unique
("benjamins"	nil	(((b e n) 1) ((jh @) 0) ((m @ n z) 0)))	;; unique
("bennetts"	nil	(((b e) 1) ((n i t s) 0)))	;; unique
("bens"	nil	(((b e n z) 1)))	;; unique
("benthams"	nil	(((b e n) 1) ((th m! z) 0)))	;; unique
("beplastering"	nil	(((b i )0)((p l aa )1)((s t @ r )0)((i ng )0)))	;; ing
("bequeathing"	nil	(((b i )0)((k w ii dh )1)((i ng )0)))	;; ing
("berating"	nil	(((b i )0)((r ei t^ )1)((i ng )0)))	;; ing
("bereaving"	nil	(((b @ )0)((r ii v )1)((i ng )0)))	;; ing
("beribboning"	nil	(((b i )0)((r i )1)((b @ n )0)((i ng )0)))	;; ing
("berkeleys"	nil	(((b @@r) 1) ((k l ii z) 0)))	;; unique
("bermudas"	nil	(((b @) 0) ((m y uu) 1) ((d @ z) 0)))	;; unique
("bernsteins"	nil	(((b @@r n) 1) ((s t ai n z) 0)))	;; unique
("berrys"	nil	(((b e) 1) ((r ii z) 0)))	;; unique
("berserking"	nil	(((b @ )0)((z @@r k )1)((i ng )0)))	;; ing
("berthing"	nil	(((b @@r th )1)((i ng )0)))	;; ing
("berts"	nil	(((b @@r t s) 1)))	;; unique
("beseeching"	nil	(((b i )0)((s ii ch )1)((i ng )0)))	;; ing
("beseeming"	nil	(((b i )0)((s ii m )1)((i ng )0)))	;; ing
("besetting"	nil	(((b i )0)((s e t^ )1)((i ng )0)))	;; ing
("besieging"	nil	(((b i )0)((s ii jh )1)((i ng )0)))	;; ing
("besmirching"	nil	(((b i )0)((s m @@r ch )1)((i ng )0)))	;; ing
("besotting"	nil	(((b i )0)((s o t^ )1)((i ng )0)))	;; ing
("bespeaking"	nil	(((b i )0)((s p ii k )1)((i ng )0)))	;; ing
("best-looking"	nil	(((b e s t )1)((l u k )1)((i ng )0)))	;; ing
("best-selling"	nil	(((b e s t )1)((s a l )1)((i ng )0)))	;; ing
("bestialising"	nil	(((b e )1)((s t iy @ l )0)((ai z )1)((i ng )0)))	;; ing
("bestializing"	nil	(((b e )1)((s t iy @ l )0)((ai z )1)((i ng )0)))	;; ing
("besting"	nil	(((b e s t )1)((i ng )0)))	;; ing
("bestirring"	nil	(((b i )0)((s t @@r r )1)((i ng )0)))	;; ing
("bestowing"	nil	(((b i )0)((s t ou )1)((i ng )0)))	;; ing
("bestselling"	nil	(((b e s t )1)((s a l )1)((i ng )0)))	;; ing
("besylate"	nil	(((b e) 1) ((s i) 0) ((l ei t) 1)))	;; unique
("betaloc"	nil	(((b e) 1) ((t^ @) 0) ((l o k) 1)))	;; unique
("betokening"	nil	(((b i )0)((t ou )1)((k @ n )0)((i ng )0)))	;; ing
("betraying"	nil	(((b i )0)((t r ei )1)((i ng )0)))	;; ing
("betrothing"	nil	(((b i )0)((t r ou dh )1)((i ng )0)))	;; ing
("bettering"	nil	(((b e )1)((t^ @ r )0)((i ng )0)))	;; ing
("betting"	nil	(((b e t^ )1)((i ng )0)))	;; ing
("beveling"	nil	(((b e )1)((v l! )0)((i ng )0)))	;; ing
("bevelling"	nil	(((b e )1)((v l! )0)((i ng )0)))	;; ing
("bewailing"	nil	(((b i )0)((w ei l )1)((i ng )0)))	;; ing
("bewildering"	nil	(((b i )0)((w i l )1)((d @ r )0)((i ng )0)))	;; ing
("bewitching"	nil	(((b i )0)((w i ch )1)((i ng )0)))	;; ing
("bhutans"	nil	(((b uw) 0) ((t aa n z) 1)))	;; unique
("biasing"	nil	(((b ai @ s )1)((i ng )0)))	;; ing
("bible-thumping"	nil	(((b ai )1)((b l! )0)((th uh m p )1)((i ng )0)))	;; ing
("bickering"	nil	(((b i )1)((k @ r )0)((i ng )0)))	;; ing
("bicycling"	nil	(((b ai )1)((s i )0)((k l i ng )0)))	;; ing
("bidding"	nil	(((b i d )1)((i ng )0)))	;; ing
("biddys"	nil	(((b i) 1) ((d ii z) 0)))	;; unique
("biding"	nil	(((b ai d )1)((i ng )0)))	;; ing
("biennializing"	nil	(((b ai )0)((e )1)((n iy @ l )0)((ai z )1)((i ng )0)))	;; ing
("biffing"	nil	(((b i f )1)((i ng )0)))	;; ing
("bifurcating"	nil	(((b ai )1)((f @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("bigelows"	nil	(((b i) 1) ((g @) 0) ((l ou z) 0)))	;; unique
("biking"	nil	(((b ai k )1)((i ng )0)))	;; ing
("billeting"	nil	(((b i )1)((l @ t^ )0)((i ng )0)))	;; ing
("billfold"	nil	(((b i l) 1) ((f o l d) 0)))	;; oul
("billfolds"	nil	(((b i l) 1) ((f o l d z) 0)))	;; oul
("billing"	nil	(((b i l )1)((i ng )0)))	;; ing
("billowing"	nil	(((b i )1)((l ou )0)((i ng )0)))	;; ing
("billys"	nil	(((b i) 1) ((l ii z) 0)))	;; unique
("binding"	nil	(((b ai n d )1)((i ng )0)))	;; ing
("binging"	nil	(((b i n jh )1)((i ng )0)))	;; ing
("bings"	nil	(((b i ng z) 1)))	;; unique
("binning"	nil	(((b i n )1)((i ng )0)))	;; ing
("biodegrading"	nil	(((b ai )1)((ou )0)((d i )0)((g r ei d )1)((i ng )0)))	;; ing
("bioengineering"	nil	(((b ai )1)((ou )0)((e n )1)((jh i n )0)((ir r )1)((i ng )0)))	;; ing
("biofuels"	nil	(((b ai) 1) ((ou) 0) ((f y u l z) 1)))	;; uul
("bioluminescence"	nil	(((b ai) 1) ((o) 0) ((l uu) 1) ((m @) 0) ((n e s) 1) ((n! s) 0)))	;; oul
("bipolar"	nil	(((b ai) 0) ((p o l) 1) ((@) 0)))	;; oul
("bipolarism"	nil	(((b ai) 0) ((p o l) 1) ((@ r) 0) ((i) 1) ((z m!) 0)))	;; oul
("bipolarity"	nil	(((b ai) 1) ((p o l) 0) ((a r) 1) ((@) 0) ((t^ ii) 0)))	;; oul
("bipolarize"	nil	(((b ai) 0) ((p o l) 1) ((@ r) 0) ((ai z) 0)))	;; oul
("bipolarized"	nil	(((b ai) 0) ((p o l) 1) ((@ r) 0) ((ai z d) 0)))	;; oul
("bipolarizes"	nil	(((b ai) 0) ((p o l) 1) ((@ r) 0) ((ai z) 1) ((@ z) 0)))	;; oul
("birching"	nil	(((b @@r ch )1)((i ng )0)))	;; ing
("birchs"	nil	(((b @@r ch) 1) ((@ z) 0)))	;; unique
("bird-catching"	nil	(((b @@r d )1)((k a ch )1)((i ng )0)))	;; ing
("birdieing"	nil	(((b @@r d )1)((iy )0)((i ng )0)))	;; ing
("birdliming"	nil	(((b @@r d )1)((l ai m )1)((i ng )0)))	;; ing
("birds-eye"	nil	(((b @@r d z) 1) (( ai) 0)))	;; unique
("birdseye"	nil	(((b @@r d z) 1) (( ai) 0)))	;; unique
("birdwatching"	nil	(((b @@r d )1)((w o ch )1)((i ng )0)))	;; ing
("birminghamising"	nil	(((b @@r )1)((m i ng )0)((@ m )0)((ai z )1)((i ng )0)))	;; ing
("birminghamizing"	nil	(((b @@r )1)((m i ng )0)((@ m )0)((ai z )1)((i ng )0)))	;; ing
("birth-control"	nil	(((b @@r th) 1) ((k @ n) 0) ((t r o l) 1)))	;; oul
("birth-controls"	nil	(((b @@r th) 1) ((k @ n) 0) ((t r o l z) 1)))	;; oul
("birthing"	nil	(((b @@r th )1)((i ng )0)))	;; ing
("bisecting"	nil	(((b ai )0)((s e k t )1)((i ng )0)))	;; ing
("bitching"	nil	(((b i ch )1)((i ng )0)))	;; ing
("biting"	nil	(((b ai t^ )1)((i ng )0)))	;; ing
("bitting"	nil	(((b i t^ )1)((i ng )0)))	;; ing
("blabbing"	nil	(((b l a b )1)((i ng )0)))	;; ing
("blackballing"	nil	(((b l a k )1)((b oo l )1)((i ng )0)))	;; ing
("blackberrying"	nil	(((b l a k )1)((b @ )0)((r iy )0)((i ng )0)))	;; ing
("blackening"	nil	(((b l a k )1)((n! )0)((i ng )0)))	;; ing
("blacking"	nil	(((b l a k )1)((i ng )0)))	;; ing
("blacklegging"	nil	(((b l a k )1)((l e g )1)((i ng )0)))	;; ing
("blacklisting"	nil	(((b l a k )1)((l i s t )1)((i ng )0)))	;; ing
("blackmailing"	nil	(((b l a k )1)((m ei l )1)((i ng )0)))	;; ing
("blackmores"	nil	(((b l a k) 1) ((m oo z) 0)))	;; unique
("blackouting"	nil	(((b l a k )1)((ow t^ )1)((i ng )0)))	;; ing
("blackpool"	nil	(((b l a k) 1) ((p u l) 0)))	;; uul
("blackpools"	nil	(((b l a k) 1) ((p u l z) 0)))	;; unique
("blacksmithing"	nil	(((b l a k )1)((s m - i th )0)((i ng )0)))	;; ing
("blaming"	nil	(((b l ei m )1)((i ng )0)))	;; ing
("blanchards"	nil	(((b l a n) 1) ((ch aa d z) 0)))	;; unique
("blanching"	nil	(((b l aa n ch )1)((i ng )0)))	;; ing
("blandishing"	nil	(((b l a n )1)((d i sh )0)((i ng )0)))	;; ing
("blanketing"	nil	(((b l a ng )1)((k @ t^ )0)((i ng )0)))	;; ing
("blanking"	nil	(((b l a ng k )1)((i ng )0)))	;; ing
("blaring"	nil	(((b l ir r )1)((i ng )0)))	;; ing
("blarneying"	nil	(((b l aa )1)((n iy )0)((i ng )0)))	;; ing
("blaspheming"	nil	(((b l a s )0)((f ii m )1)((i ng )0)))	;; ing
("blasting"	nil	(((b l aa s t )1)((i ng )0)))	;; ing
("blathering"	nil	(((b l a )1)((dh @ r )0)((i ng )0)))	;; ing
("blazing"	nil	(((b l ei z )1)((i ng )0)))	;; ing
("blazoning"	nil	(((b l ei )1)((z n! )0)((i ng )0)))	;; ing
("bleaching"	nil	(((b l ii ch )1)((i ng )0)))	;; ing
("bleating"	nil	(((b l ii t^ )1)((i ng )0)))	;; ing
("bleeding"	nil	(((b l ii d )1)((i ng )0)))	;; ing
("bleeping"	nil	(((b l ii p )1)((i ng )0)))	;; ing
("blenching"	nil	(((b l e n ch )1)((i ng )0)))	;; ing
("blending"	nil	(((b l e n d )1)((i ng )0)))	;; ing
("blessing"	nil	(((b l e s )1)((i ng )0)))	;; ing
("blethering"	nil	(((b l e )1)((dh @ r )0)((i ng )0)))	;; ing
("blighting"	nil	(((b l ai t^ )1)((i ng )0)))	;; ing
("blind-mans"	nil	(((b l ai n d) 1) ((m a n z) 0)))	;; unique
("blindfold"	nil	(((b l ai n d) 1) ((f o l d) 0)))	;; oul
("blindfolded"	nil	(((b l ai n d) 1) ((f o l d) 1) ((@ d) 0)))	;; oul
("blindfolding"	nil	(((b l ai n d) 1) ((f o l d) 1) ((i ng) 0)))	;; oul
("blindfolds"	nil	(((b l ai n d) 1) ((f o l d z) 0)))	;; oul
("blinding"	nil	(((b l ai n d )1)((i ng )0)))	;; ing
("blindmans"	nil	(((b l ai n d) 1) ((m a n z) 0)))	;; unique
("blinking"	nil	(((b l i ng k )1)((i ng )0)))	;; ing
("blipping"	nil	(((b l i p )1)((i ng )0)))	;; ing
("blistering"	nil	(((b l i )1)((s t @ r )0)((i ng )0)))	;; ing
("blithering"	nil	(((b l i )1)((dh @ r )0)((i ng )0)))	;; ing
("blitzing"	nil	(((b l i t s )1)((i ng )0)))	;; ing
("bloating"	nil	(((b l ou t^ )1)((i ng )0)))	;; ing
("blockading"	nil	(((b l o )0)((k ei d )1)((i ng )0)))	;; ing
("blockbusting"	nil	(((b l o k )1)((b uh s t )1)((i ng )0)))	;; ing
("blocking"	nil	(((b l o k )1)((i ng )0)))	;; ing
("blockmaking"	nil	(((b l o k )1)((m ei k )1)((i ng )0)))	;; ing
("blood-curdling"	nil	(((b l uh d )1)((k @@r )1)((d l! )0)((i ng )0)))	;; ing
("blood-letting"	nil	(((b l uh d )1)((l e t^ )1)((i ng )0)))	;; ing
("bloodcurdling"	nil	(((b l uh d )1)((k @@r )1)((d l! )0)((i ng )0)))	;; ing
("blooding"	nil	(((b l uh d )1)((i ng )0)))	;; ing
("bloodletting"	nil	(((b l uh d )1)((l e t^ )1)((i ng )0)))	;; ing
("bloodpoisoning"	nil	(((b l uh d )1)((p oi )1)((z n! )0)((i ng )0)))	;; ing
("bloodsucking"	nil	(((b l uh d )1)((s uh k )1)((i ng )0)))	;; ing
("blooming"	nil	(((b l uu m )1)((i ng )0)))	;; ing
("bloomingdales"	nil	(((b l uu) 1) ((m i ng) 0) ((d ei l z) 1)))	;; unique
("blossoming"	nil	(((b l o )1)((s m! )0)((i ng )0)))	;; ing
("blotching"	nil	(((b l o ch )1)((i ng )0)))	;; ing
("blotting"	nil	(((b l o t^ )1)((i ng )0)))	;; ing
("blowhole"	nil	(((b l ou) 1) ((h o l) 0)))	;; oul
("blowholes"	nil	(((b l ou) 1) ((h o l z) 0)))	;; oul
("blowing"	nil	(((b l ou )1)((i ng )0)))	;; ing
("blubbering"	nil	(((b l uh )1)((b @ r )0)((i ng )0)))	;; ing
("blubbing"	nil	(((b l uh b )1)((i ng )0)))	;; ing
("bludgeoning"	nil	(((b l uh )1)((jh @ n )0)((i ng )0)))	;; ing
("blueberrys"	nil	(((b l uu) 1) ((b @) 0) ((r ii z) 0)))	;; unique
("blueing"	nil	(((b l uu )1)((i ng )0)))	;; ing
("blueprinting"	nil	(((b l uu )1)((p r i n t )1)((i ng )0)))	;; ing
("bluestocking"	nil	(((b l uu )1)((s t o )1)((k i ng )0)))	;; ing
("bluffcalling"	nil	(((b l uh f )1)((k oo l )1)((i ng )0)))	;; ing
("bluffing"	nil	(((b l uh f )1)((i ng )0)))	;; ing
("blundering"	nil	(((b l uh n )1)((d @ r )0)((i ng )0)))	;; ing
("blunting"	nil	(((b l uh n t )1)((i ng )0)))	;; ing
("blurring"	nil	(((b l @@r r )1)((i ng )0)))	;; ing
("blurting"	nil	(((b l @@r t^ )1)((i ng )0)))	;; ing
("blushing"	nil	(((b l uh sh )1)((i ng )0)))	;; ing
("blustering"	nil	(((b l uh )1)((s t @ r )0)((i ng )0)))	;; ing
("boarding"	nil	(((b oo d )1)((i ng )0)))	;; ing
("boarding-school"	nil	(((b oo d) 1) ((i ng) 0) ((s k u l) 1)))	;; uul
("boarding-schools"	nil	(((b oo d) 1) ((i ng) 0) ((s k u l z) 1)))	;; uul
("boardsailing"	nil	(((b oo d )1)((s ei l )1)((i ng )0)))	;; ing
("boasting"	nil	(((b ou s t )1)((i ng )0)))	;; ing
("boating"	nil	(((b ou t^ )1)((i ng )0)))	;; ing
("bobbing"	nil	(((b o b )1)((i ng )0)))	;; ing
("bobbling"	nil	(((b o )1)((b l! )0)((i ng )0)))	;; ing
("bodging"	nil	(((b o jh )1)((i ng )0)))	;; ing
("boding"	nil	(((b ou d )1)((i ng )0)))	;; ing
("body-building"	nil	(((b o )1)((d iy )0)((b i l d )1)((i ng )0)))	;; ing
("bodybuilding"	nil	(((b o )1)((d iy )0)((b i l d )1)((i ng )0)))	;; ing
("bodys"	nil	(((b o) 1) ((d ii z) 0)))	;; unique
("boeing"	nil	(((b ou )1)((i ng )0)))	;; ing
("bogging"	nil	(((b o g )1)((i ng )0)))	;; ing
("boggling"	nil	(((b o )1)((g l! )0)((i ng )0)))	;; ing
("bogtrotting"	nil	(((b o g )1)((t r o t^ )1)((i ng )0)))	;; ing
("boiling"	nil	(((b oi l )1)((i ng )0)))	;; ing
("bolan"	nil	(((b o) 1) ((l @ n) 0)))	;; oul
("boland"	nil	(((b o) 1) ((l @ n d) 0)))	;; oul
("bold"	nil	(((b o l d) 1)))	;; oul
("bold-faced"	nil	(((b o l d) 1) ((f ei s t) 0)))	;; oul
("bolder"	nil	(((b o l d) 1) ((@) 0)))	;; oul
("boldest"	nil	(((b o l d) 1) ((@ s t) 0)))	;; oul
("boldface"	nil	(((b o l d) 1) ((f ei s) 0)))	;; oul
("boldfaced"	nil	(((b o l d) 1) ((f ei s t) 0)))	;; oul
("boldfaces"	nil	(((b o l d) 1) ((f ei s) 1) ((@ z) 0)))	;; oul
("boldly"	nil	(((b o l d) 1) ((l ii) 0)))	;; oul
("boldness"	nil	(((b o l d) 1) ((n @ s) 0)))	;; oul
("bole"	nil	(((b o l) 1)))	;; oul
("boll"	nil	(((b o l) 1)))	;; oul
("bolling"	nil	(((b o l) 1) ((i ng) 0)))	;; oul
("bollocking"	nil	(((b o )1)((l @ k )0)((i ng )0)))	;; ing
("bolo"	nil	(((b o) 1) ((l ou) 0)))	;; oul
("bolometer"	nil	(((b o) 0) ((l o) 1) ((m @) 0) ((t^ @) 0)))	;; oul
("bolster"	nil	(((b o l) 1) ((s t @) 0)))	;; oul
("bolstered"	nil	(((b o l) 1) ((s t @ d) 0)))	;; oul
("bolsterer"	nil	(((b o l) 1) ((s t @ r) 0) ((@) 0)))	;; oul
("bolsterers"	nil	(((b o l) 1) ((s t @ r) 0) ((@ z) 0)))	;; oul
("bolstering"	nil	(((b o l) 1) ((s t @ r) 0) ((i ng) 0)))	;; oul
("bolsters"	nil	(((b o l) 1) ((s t @ z) 0)))	;; oul
("bolt"	nil	(((b o l t) 1)))	;; oul
("boltcutter"	nil	(((b o l t) 1) ((k uh t^) 1) ((@) 0)))	;; oul
("boltcutters"	nil	(((b o l t) 1) ((k uh t^) 1) ((@ z) 0)))	;; oul
("bolted"	nil	(((b o l t) 1) ((@ d) 0)))	;; oul
("bolter"	nil	(((b o l t) 1) ((@) 0)))	;; oul
("bolters"	nil	(((b o l t) 1) ((@ z) 0)))	;; oul
("bolthead"	nil	(((b o l t) 1) ((h e d) 0)))	;; oul
("boltheads"	nil	(((b o l t) 1) ((h e d z) 0)))	;; oul
("bolthole"	nil	(((b o l t) 1) ((h o l) 0)))	;; oul
("boltholes"	nil	(((b o l t) 1) ((h o l z) 0)))	;; oul
("bolting"	nil	(((b o l t) 1) ((i ng) 0)))	;; oul
("bolton"	nil	(((b o l) 1) ((t n!) 0)))	;; oul
("boltongate"	nil	(((b o l) 1) ((t n!) 0) ((g ei t) 1)))	;; oul
("bolts"	nil	(((b o l t s) 1)))	;; oul
("bombarding"	nil	(((b o m )0)((b aa d )1)((i ng )0)))	;; ing
("bombing"	nil	(((b o m )1)((i ng )0)))	;; ing
("bonapartes"	nil	(((b ou) 1) ((n @) 0) ((p aa t s) 0)))	;; unique
("bondholder"	nil	(((b o n d) 1) ((h o l d) 1) ((@) 0)))	;; oul
("bondholders"	nil	(((b o n d) 1) ((h o l d) 1) ((@ z) 0)))	;; oul
("bonding"	nil	(((b o n d )1)((i ng )0)))	;; ing
("bonegrinding"	nil	(((b ou n )1)((g r ai n d )1)((i ng )0)))	;; ing
("bonesetting"	nil	(((b ou n )1)((s e t^ )1)((i ng )0)))	;; ing
("boning"	nil	(((b ou n )1)((i ng )0)))	;; ing
("bonking"	nil	(((b o ng k )1)((i ng )0)))	;; ing
("boobing"	nil	(((b uu b )1)((i ng )0)))	;; ing
("boobytrapping"	nil	(((b uu )1)((b iy )0)((t r a p )1)((i ng )0)))	;; ing
("boogieing"	nil	(((b uu )1)((g iy )0)((i ng )0)))	;; ing
("booing"	nil	(((b uu )1)((i ng )0)))	;; ing
("book-learning"	nil	(((b u k )1)((l @@r n )1)((i ng )0)))	;; ing
("book-making"	nil	(((b u k )1)((m ei k )1)((i ng )0)))	;; ing
("bookbinding"	nil	(((b u k )1)((b ai n d )1)((i ng )0)))	;; ing
("booking"	nil	(((b u k )1)((i ng )0)))	;; ing
("bookkeeping"	nil	(((b u k )1)((k ii p )1)((i ng )0)))	;; ing
("bookmaking"	nil	(((b u k )1)((m ei k )1)((i ng )0)))	;; ing
("bookmarking"	nil	(((b u k )1)((m aa k )1)((i ng )0)))	;; ing
("bookselling"	nil	(((b u k )1)((s a l )1)((i ng )0)))	;; ing
("boolean"	nil	(((b @) 1) ((l ii @ n) 0)))	;; uul
("booming"	nil	(((b uu m )1)((i ng )0)))	;; ing
("boosting"	nil	(((b uu s t )1)((i ng )0)))	;; ing
("boot-upping"	nil	(((b uu t )1)((uh p )1)((i ng )0)))	;; ing
("booting"	nil	(((b uu t^ )1)((i ng )0)))	;; ing
("bootlegging"	nil	(((b uu t )1)((l e g )1)((i ng )0)))	;; ing
("bootlicking"	nil	(((b uu t )1)((l i k )1)((i ng )0)))	;; ing
("bootmaking"	nil	(((b uu t )1)((m ei k )1)((i ng )0)))	;; ing
("bootstrapping"	nil	(((b uu t )1)((s t r a p )1)((i ng )0)))	;; ing
("boozing"	nil	(((b uu z )1)((i ng )0)))	;; ing
("bopping"	nil	(((b o p )1)((i ng )0)))	;; ing
("bordering"	nil	(((b oo )1)((d @ r )0)((i ng )0)))	;; ing
("borehole"	nil	(((b oo) 1) ((h o l) 0)))	;; oul
("boreholes"	nil	(((b oo) 1) ((h o l z) 0)))	;; oul
("boring"	nil	(((b oo r )1)((i ng )0)))	;; ing
("borks"	nil	(((b oo k s) 1)))	;; unique
("borrowing"	nil	(((b o )1)((r ou )0)((i ng )0)))	;; ing
("bossing"	nil	(((b o s )1)((i ng )0)))	;; ing
("bosss"	nil	(((b o s) 1) ((@ z) 0)))	;; unique
("bostons"	nil	(((b o) 1) ((s t @ n z) 0)))	;; unique
("botanizing"	nil	(((b o )1)((t^ @ )0)((n ai z )1)((i ng )0)))	;; ing
("botching"	nil	(((b o ch )1)((i ng )0)))	;; ing
("bothering"	nil	(((b o )1)((dh @ r )0)((i ng )0)))	;; ing
("botswanas"	nil	(((b o t) 0) ((s w aa) 1) ((n @ z) 0)))	;; unique
("bottle-feeding"	nil	(((b o )1)((t l! )0)((f ii d )1)((i ng )0)))	;; ing
("bottling"	nil	(((b o )1)((t l! )0)((i ng )0)))	;; ing
("bottoming"	nil	(((b o )1)((t^ @ m )0)((i ng )0)))	;; ing
("boulder"	nil	(((b o l) 1) ((d @) 0)))	;; oul
("boulders"	nil	(((b o l) 1) ((d @ z) 0)))	;; oul
("bouncing"	nil	(((b ow n s )1)((i ng )0)))	;; ing
("bounding"	nil	(((b ow n d )1)((i ng )0)))	;; ing
("bowdlerising"	nil	(((b ow d )1)((l @ r )0)((ai z )1)((i ng )0)))	;; ing
("bowdlerizing"	nil	(((b ow d )1)((l @ r )0)((ai z )1)((i ng )0)))	;; ing
("boweling"	nil	(((b ow @ l )1)((i ng )0)))	;; ing
("bowing"	nil	(((b ou )1)((i ng )0)))	;; ing
("bowling"	nil	(((b ou l )1)((i ng )0)))	;; ing
("boxing"	nil	(((b o k s )1)((i ng )0)))	;; ing
("boxings"	nil	(((b o k s) 1) ((i ng z) 0)))	;; unique
("boxs"	nil	(((b o k s) 1) ((@ z) 0)))	;; unique
("boycotting"	nil	(((b oi )1)((k o t^ )1)((i ng )0)))	;; ing
("bracing"	nil	(((b r ei s )1)((i ng )0)))	;; ing
("bracketing"	nil	(((b r a )1)((k @ t^ )0)((i ng )0)))	;; ing
("bradfords"	nil	(((b r a d) 1) ((f @ d z) 0)))	;; unique
("bradleys"	nil	(((b r a d) 1) ((l ii z) 0)))	;; unique
("brads"	nil	(((b r a d z) 1)))	;; unique
("bragging"	nil	(((b r a g )1)((i ng )0)))	;; ing
("braiding"	nil	(((b r ei d )1)((i ng )0)))	;; ing
("braining"	nil	(((b r ei n )1)((i ng )0)))	;; ing
("brainstorming"	nil	(((b r ei n )1)((s t oo m )1)((i ng )0)))	;; ing
("brainwashing"	nil	(((b r ei n )1)((w o sh )1)((i ng )0)))	;; ing
("braising"	nil	(((b r ei z )1)((i ng )0)))	;; ing
("brakemans"	nil	(((b r ei k) 1) ((m @ n z) 0)))	;; unique
("braking"	nil	(((b r ei k )1)((i ng )0)))	;; ing
("brambling"	nil	(((b r a m )1)((b l! )0)((i ng )0)))	;; ing
("branching"	nil	(((b r aa n ch )1)((i ng )0)))	;; ing
("branchs"	nil	(((b r aa n ch) 1) ((@ z) 0)))	;; unique
("branding"	nil	(((b r a n d )1)((i ng )0)))	;; ing
("brandishing"	nil	(((b r a n )1)((d i sh )0)((i ng )0)))	;; ing
("brandons"	nil	(((b r a n) 1) ((d @ n z) 0)))	;; unique
("bransons"	nil	(((b r a n) 1) ((s n! z) 0)))	;; unique
("brasilias"	nil	(((b r @) 0) ((z i) 1) ((l y @ z) 0)))	;; unique
("braving"	nil	(((b r ei v )1)((i ng )0)))	;; ing
("brawling"	nil	(((b r oo l )1)((i ng )0)))	;; ing
("braying"	nil	(((b r ei )1)((i ng )0)))	;; ing
("brazing"	nil	(((b r ei z )1)((i ng )0)))	;; ing
("breaching"	nil	(((b r ii ch )1)((i ng )0)))	;; ing
("bread-winning"	nil	(((b r e d )1)((w i n )1)((i ng )0)))	;; ing
("breadwinning"	nil	(((b r e d )1)((w i n )1)((i ng )0)))	;; ing
("breakdancing"	nil	(((b r ei k )1)((d aa n s )1)((i ng )0)))	;; ing
("breakfasting"	nil	(((b r e k )1)((f @ s t )0)((i ng )0)))	;; ing
("breaking"	nil	(((b r ei k )1)((i ng )0)))	;; ing
("breast-feeding"	nil	(((b r e s t )1)((f ii d )1)((i ng )0)))	;; ing
("breastfeeding"	nil	(((b r e s t )1)((f ii d )1)((i ng )0)))	;; ing
("breasting"	nil	(((b r e s t )1)((i ng )0)))	;; ing
("breathalysing"	nil	(((b r e )1)((th @ )0)((l ai z )1)((i ng )0)))	;; ing
("breathing"	nil	(((b r ii dh )1)((i ng )0)))	;; ing
("breathtaking"	nil	(((b r e th )1)((t ei k )1)((i ng )0)))	;; ing
("breeching"	nil	(((b r ii ch )1)((i ng )0)))	;; ing
("breeding"	nil	(((b r ii d )1)((i ng )0)))	;; ing
("breezing"	nil	(((b r ii z )1)((i ng )0)))	;; ing
("brewing"	nil	(((b r uu )1)((i ng )0)))	;; ing
("bribing"	nil	(((b r ai b )1)((i ng )0)))	;; ing
("bricking"	nil	(((b r i k )1)((i ng )0)))	;; ing
("bricklaying"	nil	(((b r i k )1)((l ei )1)((i ng )0)))	;; ing
("brickmaking"	nil	(((b r i k )1)((m ei k )1)((i ng )0)))	;; ing
("bridge-building"	nil	(((b r i jh )1)((b i l d )1)((i ng )0)))	;; ing
("bridging"	nil	(((b r i jh )1)((i ng )0)))	;; ing
("bridling"	nil	(((b r ai )1)((d l! )0)((i ng )0)))	;; ing
("briefing"	nil	(((b r ii f )1)((i ng )0)))	;; ing
("brierlys"	nil	(((b r ai @) 1) ((l ii z) 0)))	;; unique
("bright-looking"	nil	(((b r ai t )1)((l u k )1)((i ng )0)))	;; ing
("brightening"	nil	(((b r ai t )1)((n! )0)((i ng )0)))	;; ing
("brimming"	nil	(((b r i m )1)((i ng )0)))	;; ing
("bringing"	nil	(((b r i ng )1)((i ng )0)))	;; ing
("brining"	nil	(((b r ai n )1)((i ng )0)))	;; ing
("briquetting"	nil	(((b r i )0)((k e t^ )1)((i ng )0)))	;; ing
("brisbanes"	nil	(((b r i z) 1) ((b @ n z) 0)))	;; unique
("bristling"	nil	(((b r i )1)((s l! )0)((i ng )0)))	;; ing
("broaching"	nil	(((b r ou ch )1)((i ng )0)))	;; ing
("broadcasting"	nil	(((b r oo d )1)((k aa s t )1)((i ng )0)))	;; ing
("broadening"	nil	(((b r oo d )1)((n! )0)((i ng )0)))	;; ing
("brodies"	nil	(((b r ou) 1) ((d ii z) 0)))	;; unique
("broidering"	nil	(((b r oi )1)((d @ r )0)((i ng )0)))	;; ing
("broiling"	nil	(((b r oi l )1)((i ng )0)))	;; ing
("brokering"	nil	(((b r ou k )1)((@ r )0)((i ng )0)))	;; ing
("broking"	nil	(((b r ou k )1)((i ng )0)))	;; ing
("bronchiolar"	nil	(((b r o ng) 1) ((k ii) 0) ((o l) 1) ((@) 0)))	;; oul
("bronchiole"	nil	(((b r o ng) 1) ((k ii) 0) ((o l) 0)))	;; oul
("bronchioles"	nil	(((b r o ng) 1) ((k ii) 0) ((o l z) 0)))	;; oul
("bronzing"	nil	(((b r o n z )1)((i ng )0)))	;; ing
("brooding"	nil	(((b r uu d )1)((i ng )0)))	;; ing
("brooking"	nil	(((b r u k )1)((i ng )0)))	;; ing
("brookss"	nil	(((b r u k s) 1) ((@ z) 0)))	;; unique
("brool"	nil	(((b r u l) 1)))	;; uul
("browbeating"	nil	(((b r ow )1)((b ii t^ )1)((i ng )0)))	;; ing
("browning"	nil	(((b r ow n )1)((i ng )0)))	;; ing
("browsing"	nil	(((b r ow z )1)((i ng )0)))	;; ing
("bruces"	nil	(((b r uu s) 1) ((@ z) 0)))	;; unique
("bruising"	nil	(((b r uu z )1)((i ng )0)))	;; ing
("brunching"	nil	(((b r uh n ch )1)((i ng )0)))	;; ing
("brunos"	nil	(((b r uu) 1) ((n ou z) 0)))	;; unique
("brushing"	nil	(((b r uh sh )1)((i ng )0)))	;; ing
("brusquely"	nil	(((b r uu s k) 1) ((l ii) 0)))	;; uul
("brutalising"	nil	(((b r uu t )1)((l! )0)((ai z )1)((i ng )0)))	;; ing
("brutalizing"	nil	(((b r uu t )1)((l! )0)((ai z )1)((i ng )0)))	;; ing
("bryces"	nil	(((b r ai s) 1) ((@ z) 0)))	;; unique
("bs"	nil	(((b ii z) 1)))	;; unique
("bubbling"	nil	(((b uh )1)((b l! )0)((i ng )0)))	;; ing
("buccaneering"	nil	(((b uh )1)((k @ )0)((n ir r )1)((i ng )0)))	;; ing
("bucketing"	nil	(((b uh )1)((k @ t^ )0)((i ng )0)))	;; ing
("bucking"	nil	(((b uh k )1)((i ng )0)))	;; ing
("buckleys"	nil	(((b uh) 1) ((k l ii z) 0)))	;; unique
("buckling"	nil	(((b uh )1)((k l! )0)((i ng )0)))	;; ing
("buddhas"	nil	(((b u) 1) ((d @ z) 0)))	;; unique
("budding"	nil	(((b uh d )1)((i ng )0)))	;; ing
("budds"	nil	(((b uh d z) 1)))	;; unique
("budesonide"	nil	(((b y uu) 0) ((d e) 1) ((s @) 0) ((n ai d) 1)))	;; unique
("budgeting"	nil	(((b uh )1)((jh @ t^ )0)((i ng )0)))	;; ing
("budging"	nil	(((b uh jh )1)((i ng )0)))	;; ing
("buffering"	nil	(((b uh )1)((f @ r )0)((i ng )0)))	;; ing
("buffeting"	nil	(((b uh )1)((f @ t^ )0)((i ng )0)))	;; ing
("buffing"	nil	(((b uh f )1)((i ng )0)))	;; ing
("buggering"	nil	(((b uh )1)((g @ r )0)((i ng )0)))	;; ing
("bugging"	nil	(((b uh g )1)((i ng )0)))	;; ing
("building"	nil	(((b i l d )1)((i ng )0)))	;; ing
("bulgarias"	nil	(((b o l) 0) ((g ir) 1) ((r ii @ z) 0)))	;; unique
("bulging"	nil	(((b o l jh )1)((i ng )0)))	;; ing
("bulkhandling"	nil	(((b o l k )1)((h a n )1)((d l! )0)((i ng )0)))	;; ing
("bulking"	nil	(((b o l k )1)((i ng )0)))	;; ing
("bulldozing"	nil	(((b u l )1)((d ou z )1)((i ng )0)))	;; ing
("bulletproofing"	nil	(((b u )1)((l @ t )0)((p r uu f )1)((i ng )0)))	;; ing
("bullfighting"	nil	(((b u l )1)((f ai t^ )1)((i ng )0)))	;; ing
("bulls-eyes"	nil	(((b u l z) 1) (( ai z) 0)))	;; unique
("bullshitting"	nil	(((b u l )1)((sh i t^ )1)((i ng )0)))	;; ing
("bullying"	nil	(((b u )1)((l iy )0)((i ng )0)))	;; ing
("bumbling"	nil	(((b uh m )1)((b l! )0)((i ng )0)))	;; ing
("bumming"	nil	(((b uh m )1)((i ng )0)))	;; ing
("bumping"	nil	(((b uh m p )1)((i ng )0)))	;; ing
("bumsucking"	nil	(((b uh m )1)((s uh k )1)((i ng )0)))	;; ing
("bunching"	nil	(((b uh n ch )1)((i ng )0)))	;; ing
("bundling"	nil	(((b uh n )1)((d l! )0)((i ng )0)))	;; ing
("bung-hole"	nil	(((b uh ng) 1) ((h o l) 0)))	;; oul
("bung-holes"	nil	(((b uh ng) 1) ((h o l z) 0)))	;; oul
("bunging"	nil	(((b uh ng )1)((i ng )0)))	;; ing
("bunkering"	nil	(((b uh ng k )1)((@ r )0)((i ng )0)))	;; ing
("bunking"	nil	(((b uh ng k )1)((i ng )0)))	;; ing
("bunnys"	nil	(((b uh) 1) ((n ii z) 0)))	;; unique
("bunting"	nil	(((b uh n )1)((t i ng )0)))	;; ing
("bunyans"	nil	(((b uh) 1) ((n y @ n z) 0)))	;; unique
("buoying"	nil	(((b oi )1)((i ng )0)))	;; ing
("burbanks"	nil	(((b @@r) 1) ((b a ng k s) 0)))	;; unique
("burbling"	nil	(((b @@r )1)((b l! )0)((i ng )0)))	;; ing
("burdening"	nil	(((b @@r )1)((d n! )0)((i ng )0)))	;; ing
("burdensharing"	nil	(((b @@r )1)((d n! )0)((sh ir r )1)((i ng )0)))	;; ing
("bureaucratising"	nil	(((b y ur )0)((r o )1)((k r @ t )0)((ai z )1)((i ng )0)))	;; ing
("bureaucratizing"	nil	(((b y ur )0)((r o )1)((k r @ t )0)((ai z )1)((i ng )0)))	;; ing
("burgeoning"	nil	(((b @@r )1)((jh @ n )0)((i ng )0)))	;; ing
("burglarising"	nil	(((b @@r )1)((g l @ r )0)((ai z )1)((i ng )0)))	;; ing
("burglarizing"	nil	(((b @@r )1)((g l @ r )0)((ai z )1)((i ng )0)))	;; ing
("burgling"	nil	(((b @@r )1)((g l! )0)((i ng )0)))	;; ing
("burmas"	nil	(((b @@r) 1) ((m @ z) 0)))	;; unique
("burning"	nil	(((b @@r n )1)((i ng )0)))	;; ing
("burnishing"	nil	(((b @@r )1)((n i sh )0)((i ng )0)))	;; ing
("burping"	nil	(((b @@r p )1)((i ng )0)))	;; ing
("burrowing"	nil	(((b uh )1)((r ou )0)((i ng )0)))	;; ing
("bursting"	nil	(((b @@r s t )1)((i ng )0)))	;; ing
("burying"	nil	(((b e )1)((r iy )0)((i ng )0)))	;; ing
("burys"	nil	(((b e) 1) ((r ii z) 0)))	;; unique
("busheling"	nil	(((b u )1)((sh l! )0)((i ng )0)))	;; ing
("bushing"	nil	(((b u sh )1)((i ng )0)))	;; ing
("bushs"	nil	(((b u sh) 1) ((@ z) 0)))	;; unique
("bushwalking"	nil	(((b u sh )1)((w oo k )1)((i ng )0)))	;; ing
("bushwhacking"	nil	(((b u sh )1)((w a k )1)((i ng )0)))	;; ing
("businesss"	nil	(((b i z) 1) ((n i s) 0) ((@ z) 0)))	;; unique
("businessweeks"	nil	(((b i z) 1) ((n i s) 0) ((w ii k s) 1)))	;; unique
("busking"	nil	(((b uh s k )1)((i ng )0)))	;; ing
("bussing"	nil	(((b uh s )1)((i ng )0)))	;; ing
("bustin"	nil	(((b uh s t) 1) ((i n) 0)))	;; unique
("busting"	nil	(((b uh s t )1)((i ng )0)))	;; ing
("bustling"	nil	(((b uh )1)((s l! )0)((i ng )0)))	;; ing
("busying"	nil	(((b i )1)((z iy )0)((i ng )0)))	;; ing
("butchering"	nil	(((b u )1)((ch @ r )0)((i ng )0)))	;; ing
("buttering"	nil	(((b uh )1)((t^ @ r )0)((i ng )0)))	;; ing
("butthole"	nil	(((b uh t) 1) ((h o l) 0)))	;; oul
("buttholes"	nil	(((b uh t) 1) ((h o l z) 0)))	;; oul
("butting"	nil	(((b uh t^ )1)((i ng )0)))	;; ing
("button-hole"	nil	(((b uh) 1) ((t n!) 0) ((h o l) 1)))	;; oul
("button-holes"	nil	(((b uh) 1) ((t n!) 0) ((h o l z) 1)))	;; oul
("buttonhole"	nil	(((b uh) 1) ((t n!) 0) ((h o l) 0)))	;; oul
("buttonholed"	nil	(((b uh) 1) ((t n!) 0) ((h o l d) 0)))	;; oul
("buttonholes"	nil	(((b uh) 1) ((t n!) 0) ((h o l z) 0)))	;; oul
("buttonholing"	nil	(((b uh) 1) ((t n!) 0) ((h o l) 1) ((i ng) 0)))	;; oul
("buttoning"	nil	(((b uh )1)((t n! )0)((i ng )0)))	;; ing
("buttonpressing"	nil	(((b uh )1)((t n! )0)((p r e s )1)((i ng )0)))	;; ing
("buttressing"	nil	(((b uh )1)((t r @ s )0)((i ng )0)))	;; ing
("buying"	nil	(((b ai )1)((i ng )0)))	;; ing
("buzzing"	nil	(((b uh z )1)((i ng )0)))	;; ing
("buzzs"	nil	(((b uh z) 1) ((@ z) 0)))	;; unique
("by-passing"	nil	(((b ai )1)((p aa s )1)((i ng )0)))	;; ing
("bypassing"	nil	(((b ai )1)((p aa s )1)((i ng )0)))	;; ing
("byrds"	nil	(((b @@r d z) 1)))	;; unique
("byrons"	nil	(((b ai) 1) ((r @ n z) 0)))	;; unique
("byteswapping"	nil	(((b ai t )1)((s w o p )1)((i ng )0)))	;; ing
("cabbing"	nil	(((k a b )1)((i ng )0)))	;; ing
("cabinetmaking"	nil	(((k a )1)((b @ )0)((n i t )0)((m ei k )1)((i ng )0)))	;; ing
("cablemaking"	nil	(((k ei )1)((b l! )0)((m ei k )1)((i ng )0)))	;; ing
("cabling"	nil	(((k ei )1)((b l! )0)((i ng )0)))	;; ing
("cabmans"	nil	(((k a b) 1) ((m @ n z) 0)))	;; unique
("cacheing"	nil	(((k a sh )1)((i ng )0)))	;; ing
("cacheting"	nil	(((k a )1)((sh ei )0)((i ng )0)))	;; ing
("caching"	nil	(((k a sh )1)((i ng )0)))	;; ing
("cackling"	nil	(((k a )1)((k l! )0)((i ng )0)))	;; ing
("caddying"	nil	(((k a )1)((d iy )0)((i ng )0)))	;; ing
("cadging"	nil	(((k a jh )1)((i ng )0)))	;; ing
("caging"	nil	(((k ei jh )1)((i ng )0)))	;; ing
("cajole"	nil	(((k @) 0) ((jh o l) 1)))	;; oul
("cajoled"	nil	(((k @) 0) ((jh o l d) 1)))	;; oul
("cajolement"	nil	(((k @) 0) ((jh o l) 1) ((m @ n t) 0)))	;; oul
("cajolery"	nil	(((k @) 0) ((jh o l) 1) ((@) 0) ((r ii) 0)))	;; oul
("cajoles"	nil	(((k @) 0) ((jh o l z) 1)))	;; oul
("cajoling"	nil	(((k @) 0) ((jh o l) 1) ((i ng) 0)))	;; oul
("caking"	nil	(((k ei k )1)((i ng )0)))	;; ing
("calciferol"	nil	(((k a l) 0) ((s i) 1) ((f @) 0) ((r o l) 1)))	;; unique
("calcifying"	nil	(((k a l )1)((s @ )0)((f ai )1)((i ng )0)))	;; ing
("calculating"	nil	(((k a l )1)((k y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("caldwells"	nil	(((k oo l d) 1) ((w a l z) 0)))	;; unique
("calendarising"	nil	(((k a )1)((l @ n )0)((d @ r )0)((ai z )1)((i ng )0)))	;; ing
("calendarizing"	nil	(((k a )1)((l @ n )0)((d @ r )0)((ai z )1)((i ng )0)))	;; ing
("calibrating"	nil	(((k a )1)((l @ )0)((b r ei t^ )1)((i ng )0)))	;; ing
("californias"	nil	(((k a) 1) ((l @) 0) ((f oo) 1) ((n y @ z) 0)))	;; unique
("calipering"	nil	(((k a )1)((l @ )0)((p @ r )0)((i ng )0)))	;; ing
("calling"	nil	(((k oo l )1)((i ng )0)))	;; ing
("callwaiting"	nil	(((k oo l )1)((w ei t^ )1)((i ng )0)))	;; ing
("calming"	nil	(((k aa m )1)((i ng )0)))	;; ing
("calumniating"	nil	(((k @ )0)((l uh m )1)((n iy )0)((ei t^ )1)((i ng )0)))	;; ing
("calving"	nil	(((k aa v )1)((i ng )0)))	;; ing
("cambodias"	nil	(((k a m) 0) ((b ou) 1) ((d ii @ z) 0)))	;; unique
("cameoing"	nil	(((k a )1)((m iy )0)((ou )0)((i ng )0)))	;; ing
("camillas"	nil	(((k @) 0) ((m i) 1) ((l @ z) 0)))	;; unique
("camisole"	nil	(((k a) 1) ((m i) 0) ((s o l) 0)))	;; oul
("camisoles"	nil	(((k a) 1) ((m i) 0) ((s o l z) 0)))	;; oul
("camouflaging"	nil	(((k a )1)((m @ )0)((f l aa zh )1)((i ng )0)))	;; ing
("campaigning"	nil	(((k a m )0)((p ei n )1)((i ng )0)))	;; ing
("camping"	nil	(((k a m p )1)((i ng )0)))	;; ing
("can't"	nil	(((k aa n t) 1))) 	;; contraction
("canadas"	nil	(((k a) 1) ((n @) 0) ((d @ z) 0)))	;; unique
("canalising"	nil	(((k a )1)((n l! )0)((ai z )0)((i ng )0)))	;; ing
("canarys"	nil	(((k @) 0) ((n ir) 1) ((r ii z) 0)))	;; unique
("canceling"	nil	(((k a n )1)((s l! )0)((i ng )0)))	;; ing
("cancelling"	nil	(((k a n )1)((s l! )0)((i ng )0)))	;; ing
("candesartan"	nil	(((k a n) 0) ((d e) 1) ((s @) 0) ((t a n) 1)))	;; unique
("candle-holder"	nil	(((k a n) 1) ((d l!) 0) ((h o l d) 1) ((@) 0)))	;; oul
("candle-holders"	nil	(((k a n) 1) ((d l!) 0) ((h o l d) 1) ((@ z) 0)))	;; oul
("candlemaking"	nil	(((k a n )1)((d l! )0)((m ei k )1)((i ng )0)))	;; ing
("caning"	nil	(((k ei n )1)((i ng )0)))	;; ing
("canisterising"	nil	(((k a )1)((n i )0)((s t @ r )0)((ai z )1)((i ng )0)))	;; ing
("canisterizing"	nil	(((k a )1)((n i )0)((s t @ r )0)((ai z )1)((i ng )0)))	;; ing
("cankering"	nil	(((k a ng )1)((k @ r )0)((i ng )0)))	;; ing
("cannibalising"	nil	(((k a )1)((n @ )0)((b l! )0)((ai z )1)((i ng )0)))	;; ing
("cannibalizing"	nil	(((k a )1)((n @ )0)((b l! )0)((ai z )1)((i ng )0)))	;; ing
("canning"	nil	(((k a n )1)((i ng )0)))	;; ing
("cannoning"	nil	(((k a )1)((n @ n )0)((i ng )0)))	;; ing
("canoeing"	nil	(((k @ )0)((n uu )1)((i ng )0)))	;; ing
("canonicalising"	nil	(((k @ )0)((n o n )1)((i k )0)((@ l )0)((ai z )1)((i ng )0)))	;; ing
("canonicalizing"	nil	(((k @ )0)((n o n )1)((i k )0)((@ l )0)((ai z )1)((i ng )0)))	;; ing
("canonising"	nil	(((k a )1)((n @ n )0)((ai z )1)((i ng )0)))	;; ing
("canonizing"	nil	(((k a )1)((n @ n )0)((ai z )1)((i ng )0)))	;; ing
("canoodling"	nil	(((k @ )0)((n uu )1)((d l! )0)((i ng )0)))	;; ing
("canopys"	nil	(((k a) 1) ((n @) 0) ((p ii z) 0)))	;; unique
("cantering"	nil	(((k a n )1)((t @ r )0)((i ng )0)))	;; ing
("canting"	nil	(((k a n t )1)((i ng )0)))	;; ing
("canvassing"	nil	(((k a n )1)((v @ s )0)((i ng )0)))	;; ing
("capabilitys"	nil	(((k ei) 1) ((p @) 0) ((b i l) 1) ((@) 0) ((t^ ii z) 0)))	;; unique
("capacitating"	nil	(((k @ )0)((p a )1)((s @ )0)((t ei t^ )1)((i ng )0)))	;; ing
("capering"	nil	(((k ei )1)((p @ r )0)((i ng )0)))	;; ing
("capitalising"	nil	(((k a )1)((p @ )0)((t l! )0)((ai z )1)((i ng )0)))	;; ing
("capitalizing"	nil	(((k a )1)((p @ )0)((t l! )0)((ai z )1)((i ng )0)))	;; ing
("capitulating"	nil	(((k @ )0)((p i )1)((ch @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("caponizing"	nil	(((k ei )1)((p o n )0)((ai z )1)((i ng )0)))	;; ing
("capoten"	nil	(((k a) 1) ((p @) 0) ((t e n) 1)))	;; unique
("capping"	nil	(((k a p )1)((i ng )0)))	;; ing
("capsizing"	nil	(((k a p )0)((s ai z )1)((i ng )0)))	;; ing
("capsuling"	nil	(((k a p s )1)((y @ l )0)((i ng )0)))	;; ing
("capsulizing"	nil	(((k a p s )1)((y @ l )0)((ai z )1)((i ng )0)))	;; ing
("captaining"	nil	(((k a p )1)((t @ n )0)((i ng )0)))	;; ing
("captivating"	nil	(((k a p )1)((t @ v )0)((ei t^ )1)((i ng )0)))	;; ing
("capturing"	nil	(((k a p )1)((ch @ r )0)((i ng )0)))	;; ing
("caravaning"	nil	(((k a )1)((r @ )0)((v a n )1)((i ng )0)))	;; ing
("carbonating"	nil	(((k aa )1)((b @ n )0)((ei t^ )1)((i ng )0)))	;; ing
("carboncopying"	nil	(((k aa )1)((b @ n )0)((k o )1)((p iy )0)((i ng )0)))	;; ing
("carbonising"	nil	(((k aa )1)((b @ n )0)((ai z )1)((i ng )0)))	;; ing
("carbonizing"	nil	(((k aa )1)((b @ n )0)((ai z )1)((i ng )0)))	;; ing
("card-carrying"	nil	(((k aa d )1)((k a )1)((r iy )0)((i ng )0)))	;; ing
("card-holder"	nil	(((k aa d) 1) ((h o l d) 1) ((@) 0)))	;; oul
("card-holders"	nil	(((k aa d) 1) ((h o l d) 1) ((@ z) 0)))	;; oul
("card-playing"	nil	(((k aa d )1)((p l ei )1)((i ng )0)))	;; ing
("cardholder"	nil	(((k aa d) 1) ((h o l d) 1) ((@) 0)))	;; oul
("cardholders"	nil	(((k aa d) 1) ((h o l d) 1) ((@ z) 0)))	;; oul
("carding"	nil	(((k aa d )1)((i ng )0)))	;; ing
("cardpunching"	nil	(((k aa d )1)((p uh n ch )1)((i ng )0)))	;; ing
("careening"	nil	(((k @ )0)((r ii n )1)((i ng )0)))	;; ing
("careering"	nil	(((k @ )0)((r ir r )1)((i ng )0)))	;; ing
("caressing"	nil	(((k @ )0)((r e s )1)((i ng )0)))	;; ing
("caretaking"	nil	(((k ii @ )1)((t ei k )1)((i ng )0)))	;; ing
("cargills"	nil	(((k aa) 1) ((g i l z) 0)))	;; unique
("cargoless"	nil	(((k aa) 1) ((g o) 0) ((l @ s) 0)))	;; oul
("caricaturing"	nil	(((k a )1)((r @ )0)((k @ )0)((ch ur r )1)((i ng )0)))	;; ing
("caring"	nil	(((k ir r )1)((i ng )0)))	;; ing
("carling"	nil	(((k aa )1)((l i ng )0)))	;; ing
("caroling"	nil	(((k a )1)((r @ l )0)((i ng )0)))	;; ing
("carolling"	nil	(((k a )1)((r @ l )0)((i ng )0)))	;; ing
("carousing"	nil	(((k @ )0)((r ow z )1)((i ng )0)))	;; ing
("carpentering"	nil	(((k aa )1)((p @ n )0)((t @ r )0)((i ng )0)))	;; ing
("carpetbagging"	nil	(((k aa )1)((p @ t )0)((b a g )1)((i ng )0)))	;; ing
("carpeting"	nil	(((k aa )1)((p @ t^ )0)((i ng )0)))	;; ing
("carping"	nil	(((k aa p )1)((i ng )0)))	;; ing
("carpooling"	nil	(((k aa) 1) ((p u l) 1) ((i ng) 0)))	;; uul
("carringtons"	nil	(((k a) 1) ((r i ng) 0) ((t @ n z) 0)))	;; unique
("carrolls"	nil	(((k a) 1) ((r @ l z) 0)))	;; unique
("carrutherss"	nil	(((k @) 0) ((r uh) 1) ((dh @ z) 0) ((@ z) 0)))	;; unique
("carrying"	nil	(((k a )1)((r iy )0)((i ng )0)))	;; ing
("cartagenas"	nil	(((k aa) 1) ((t^ @) 0) ((jh ii) 1) ((n @ z) 0)))	;; unique
("carting"	nil	(((k aa t^ )1)((i ng )0)))	;; ing
("cartonizing"	nil	(((k aa )1)((t n! )0)((ai z )1)((i ng )0)))	;; ing
("cartooning"	nil	(((k aa )0)((t uu n )1)((i ng )0)))	;; ing
("cartwheeling"	nil	(((k aa t )1)((w - ii l )0)((i ng )0)))	;; ing
("carving"	nil	(((k aa v )1)((i ng )0)))	;; ing
("casanovas"	nil	(((k a) 1) ((s @) 0) ((n ou) 1) ((v @ z) 0)))	;; unique
("cascading"	nil	(((k a )0)((s k ei d )1)((i ng )0)))	;; ing
("caseys"	nil	(((k ei) 1) ((s ii z) 0)))	;; unique
("cashing"	nil	(((k a sh )1)((i ng )0)))	;; ing
("casing"	nil	(((k ei s )1)((i ng )0)))	;; ing
("casserole"	nil	(((k a) 1) ((s @) 0) ((r o l) 0)))	;; oul
("casseroles"	nil	(((k a) 1) ((s @) 0) ((r o l z) 0)))	;; oul
("cassiopeias"	nil	(((k a) 1) ((s ii) 0) ((ou) 0) ((p ii @ z) 1)))	;; unique
("casss"	nil	(((k a s) 1) ((@ z) 0)))	;; unique
("castigating"	nil	(((k a )1)((s t @ )0)((g ei t^ )1)((i ng )0)))	;; ing
("casting"	nil	(((k aa s t )1)((i ng )0)))	;; ing
("castrating"	nil	(((k a )0)((s t r ei t^ )1)((i ng )0)))	;; ing
("casualising"	nil	(((k a )1)((zh uw @ l )0)((ai z )1)((i ng )0)))	;; ing
("casualizing"	nil	(((k a )1)((zh uw @ l )0)((ai z )1)((i ng )0)))	;; ing
("cataloging"	nil	(((k a )1)((t^ @ )0)((l o g )1)((i ng )0)))	;; ing
("cataloguing"	nil	(((k a )1)((t^ @ )0)((l o g )1)((i ng )0)))	;; ing
("catalyzing"	nil	(((k a )1)((t l! )0)((ai z )1)((i ng )0)))	;; ing
("catapulting"	nil	(((k a )1)((t^ @ )0)((p o l t )1)((i ng )0)))	;; ing
("catcalling"	nil	(((k a t )1)((k oo l )1)((i ng )0)))	;; ing
("catching"	nil	(((k a ch )1)((i ng )0)))	;; ing
("catchpole"	nil	(((k a ch) 1) ((p o l) 0)))	;; oul
("catchpoles"	nil	(((k a ch) 1) ((p o l z) 0)))	;; oul
("catchpoll"	nil	(((k a ch) 1) ((p o l) 0)))	;; oul
("catchpolls"	nil	(((k a ch) 1) ((p o l z) 0)))	;; oul
("catechising"	nil	(((k a )1)((t^ @ )0)((k ai z )1)((i ng )0)))	;; ing
("catechizing"	nil	(((k a )1)((t^ @ )0)((k ai z )1)((i ng )0)))	;; ing
("categorising"	nil	(((k a )1)((t^ i )0)((g @ )0)((r ai z )1)((i ng )0)))	;; ing
("categorizing"	nil	(((k a )1)((t^ i )0)((g @ )0)((r ai z )1)((i ng )0)))	;; ing
("categorys"	nil	(((k a) 1) ((t^ @) 0) ((g @) 0) ((r ii z) 0)))	;; unique
("catering"	nil	(((k ei )1)((t^ @ r )0)((i ng )0)))	;; ing
("caterwauling"	nil	(((k a )1)((t^ @ )0)((w oo l )1)((i ng )0)))	;; ing
("catherines"	nil	(((k a) 1) ((th @) 0) ((r i n z) 0)))	;; unique
("catholicising"	nil	(((k @ )0)((th o )1)((l i s )0)((ai z )1)((i ng )0)))	;; ing
("catholicizing"	nil	(((k @ )0)((th o )1)((l i s )0)((ai z )1)((i ng )0)))	;; ing
("caths"	nil	(((k a th s) 1)))	;; unique
("cathys"	nil	(((k a) 1) ((th ii z) 0)))	;; unique
("catnapping"	nil	(((k a t )1)((n a p )1)((i ng )0)))	;; ing
("catopril"	nil	(((k a) 1) ((t @) 0) ((p r i l) 1)))	;; unique
("cats-cradle"	nil	(((k a t s) 1) ((k r ei) 1) ((d l!) 0)))	;; unique
("cats-eye"	nil	(((k a t s) 1) (( ai) 0)))	;; unique
("catting"	nil	(((k a t^ )1)((i ng )0)))	;; ing
("cattlemans"	nil	(((k a) 1) ((t l!) 0) ((m @ n z) 0)))	;; unique
("cattleranching"	nil	(((k a )1)((t l! )0)((r aa n ch )1)((i ng )0)))	;; ing
("cattlerustling"	nil	(((k a )1)((t l! )0)((r uh )1)((s l! )0)((i ng )0)))	;; ing
("caulking"	nil	(((k oo k )1)((i ng )0)))	;; ing
("causing"	nil	(((k oo z )1)((i ng )0)))	;; ing
("cauterising"	nil	(((k oo )1)((t^ @ )0)((r ai z )1)((i ng )0)))	;; ing
("cauterizing"	nil	(((k oo )1)((t^ @ )0)((r ai z )1)((i ng )0)))	;; ing
("cautioning"	nil	(((k oo )1)((sh n! )0)((i ng )0)))	;; ing
("caviling"	nil	(((k a )1)((v i l )0)((i ng )0)))	;; ing
("cavilling"	nil	(((k a )1)((v i l )0)((i ng )0)))	;; ing
("caving"	nil	(((k ei v )1)((i ng )0)))	;; ing
("cavorting"	nil	(((k @ )0)((v oo t^ )1)((i ng )0)))	;; ing
("cawing"	nil	(((k oo )1)((i ng )0)))	;; ing
("ceasing"	nil	(((s ii s )1)((i ng )0)))	;; ing
("ceding"	nil	(((s ii d )1)((i ng )0)))	;; ing
("ceiling"	nil	(((s ii )1)((l i ng )0)))	;; ing
("celebrating"	nil	(((s a )1)((l @ )0)((b r ei t^ )1)((i ng )0)))	;; ing
("cementing"	nil	(((s @ )0)((m e n t )1)((i ng )0)))	;; ing
("censoring"	nil	(((s e n )1)((s @ r )0)((i ng )0)))	;; ing
("censuring"	nil	(((s e n )1)((sh r )0)((i ng )0)))	;; ing
("censusing"	nil	(((s e n )1)((s @ s )0)((i ng )0)))	;; ing
("centerfold"	nil	(((s e n) 1) ((t @) 0) ((f o l d) 1)))	;; oul
("centerfolds"	nil	(((s e n) 1) ((t @) 0) ((f o l d z) 1)))	;; oul
("centering"	nil	(((s e n )1)((t @ r )0)((i ng )0)))	;; ing
("centralising"	nil	(((s e n )1)((t r @ l )0)((ai z )1)((i ng )0)))	;; ing
("centralizing"	nil	(((s e n )1)((t r @ l )0)((ai z )1)((i ng )0)))	;; ing
("centrals"	nil	(((s e n) 1) ((t r @ l z) 0)))	;; unique
("centrefold"	nil	(((s e n) 1) ((t @) 0) ((f o l d) 1)))	;; oul
("centrefolds"	nil	(((s e n) 1) ((t @) 0) ((f o l d z) 1)))	;; oul
("centring"	nil	(((s e n )1)((t @ r )0)((i ng )0)))	;; ing
("centurys"	nil	(((s e n) 1) ((ch @) 0) ((r ii z) 0)))	;; unique
("ceremonising"	nil	(((s e )1)((r @ )0)((m @ )0)((n ai z )1)((i ng )0)))	;; ing
("certificating"	nil	(((s @ )0)((t i )1)((f i )0)((k ei t^ )1)((i ng )0)))	;; ing
("certifying"	nil	(((s @@r )1)((t^ @ )0)((f ai )1)((i ng )0)))	;; ing
("cessing"	nil	(((s e s )1)((i ng )0)))	;; ing
("cesspool"	nil	(((s e s) 1) ((p u l) 0)))	;; uul
("cesspools"	nil	(((s e s) 1) ((p u l z) 0)))	;; uul
("chads"	nil	(((ch a d z) 1)))	;; unique
("chaffing"	nil	(((ch a f )1)((i ng )0)))	;; ing
("chafing"	nil	(((ch ei f )1)((i ng )0)))	;; ing
("chain-smoking"	nil	(((ch ei n )1)((s m ou k )1)((i ng )0)))	;; ing
("chaining"	nil	(((ch ei n )1)((i ng )0)))	;; ing
("chainstitching"	nil	(((ch ei n )1)((s t i ch )1)((i ng )0)))	;; ing
("chairholder"	nil	(((ch e @) 1) ((h o l d) 1) ((@) 0)))	;; beer-bear, oul
("chairing"	nil	(((ch ir r )1)((i ng )0)))	;; ing
("chairlifting"	nil	(((ch ii @ )1)((l i f t )1)((i ng )0)))	;; ing
("chairmans"	nil	(((ch ir) 1) ((m @ n z) 0)))	;; unique
("chairmens"	nil	(((ch ir) 1) ((m @ n z) 0)))	;; unique
("chalking"	nil	(((ch oo k )1)((i ng )0)))	;; ing
("challenging"	nil	(((ch a )1)((l @ n jh )0)((i ng )0)))	;; ing
("chambering"	nil	(((ch ei m )1)((b @ r )0)((i ng )0)))	;; ing
("chamberlains"	nil	(((ch ei m) 1) ((b @) 0) ((l i n z) 0)))	;; unique
("champing"	nil	(((ch a m p )1)((i ng )0)))	;; ing
("championing"	nil	(((ch a m )1)((p iy @ n )0)((i ng )0)))	;; ing
("chancing"	nil	(((ch aa n s )1)((i ng )0)))	;; ing
("chandlers"	nil	(((ch aa n d) 1) ((l @ z) 0)))	;; unique
("changeling"	nil	(((ch ei n jh )1)((l i ng )0)))	;; ing
("changing"	nil	(((ch ei n jh )1)((i ng )0)))	;; ing
("channeling"	nil	(((ch a )1)((n l! )0)((i ng )0)))	;; ing
("channelling"	nil	(((ch a )1)((n l! )0)((i ng )0)))	;; ing
("chans"	nil	(((ch a n z) 1)))	;; unique
("chanting"	nil	(((ch aa n t )1)((i ng )0)))	;; ing
("chaoss"	nil	(((k ei) 1) ((o s) 0) ((@ z) 0)))	;; unique
("chapmans"	nil	(((ch a p) 1) ((m @ n z) 0)))	;; unique
("chapping"	nil	(((ch a p )1)((i ng )0)))	;; ing
("characterising"	nil	(((k a )1)((r i k )0)((t @ r )0)((ai z )1)((i ng )0)))	;; ing
("characterizing"	nil	(((k a )1)((r i k )0)((t @ r )0)((ai z )1)((i ng )0)))	;; ing
("charcoal"	nil	(((ch aa) 1) ((k o l) 0)))	;; oul
("charcoals"	nil	(((ch aa) 1) ((k o l z) 0)))	;; oul
("charging"	nil	(((ch aa jh )1)((i ng )0)))	;; ing
("charing"	nil	(((ch a )1)((r i ng )0)))	;; ing
("charlemagnes"	nil	(((sh aa) 1) ((l @) 0) ((m ei n z) 0)))	;; unique
("charless"	nil	(((ch aa l z) 1) ((@ z) 0)))	;; unique
("charlies"	nil	(((ch aa) 1) ((l ii z) 0)))	;; unique
("charming"	nil	(((ch aa m )1)((i ng )0)))	;; ing
("charpentiers"	nil	(((sh aa) 0) ((p o n) 1) ((t ii) 0) ((ei z) 0)))	;; unique
("charring"	nil	(((ch aa r )1)((i ng )0)))	;; ing
("charterers"	nil	(((ch aa) 1) ((t^ @ r) 0) ((@ z) 0)))	;; unique
("chartering"	nil	(((ch aa )1)((t^ @ r )0)((i ng )0)))	;; ing
("charting"	nil	(((ch aa t^ )1)((i ng )0)))	;; ing
("chasing"	nil	(((ch ei s )1)((i ng )0)))	;; ing
("chassiss"	nil	(((sh a) 1) ((s ii z) 0)))	;; unique
("chastening"	nil	(((ch ei s )1)((n! )0)((i ng )0)))	;; ing
("chastising"	nil	(((ch a )0)((s t ai z )1)((i ng )0)))	;; ing
("chastizing"	nil	(((ch a )0)((s t ai z )1)((i ng )0)))	;; ing
("chateaus"	nil	(((sh a) 1) ((t^ ou z) 0)))	;; unique
("chattering"	nil	(((ch a )1)((t^ @ r )0)((i ng )0)))	;; ing
("chatting"	nil	(((ch a t^ )1)((i ng )0)))	;; ing
("chaucers"	nil	(((ch oo) 1) ((s @ z) 0)))	;; unique
("chauffeuring"	nil	(((sh ou )1)((f @ r )0)((i ng )0)))	;; ing
("chawing"	nil	(((ch oo )1)((i ng )0)))	;; ing
("cheapening"	nil	(((ch ii p )1)((@ n )0)((i ng )0)))	;; ing
("cheating"	nil	(((ch ii t^ )1)((i ng )0)))	;; ing
("checking"	nil	(((ch e k )1)((i ng )0)))	;; ing
("checkmarking"	nil	(((ch e k )1)((m aa k )1)((i ng )0)))	;; ing
("checkmating"	nil	(((ch e k )1)((m ei t^ )1)((i ng )0)))	;; ing
("checksumming"	nil	(((ch e k )1)((s uh m )1)((i ng )0)))	;; ing
("cheeking"	nil	(((ch ii k )1)((i ng )0)))	;; ing
("cheeping"	nil	(((ch ii p )1)((i ng )0)))	;; ing
("cheering"	nil	(((ch ir r )1)((i ng )0)))	;; ing
("cheerleading"	nil	(((ch ii @ )1)((l ii d )1)((i ng )0)))	;; ing
("cheeseparing"	nil	(((ch ii z )1)((p ir r )1)((i ng )0)))	;; ing
("chens"	nil	(((ch e n z) 1)))	;; unique
("chequering"	nil	(((ch e k )1)((@ r )0)((i ng )0)))	;; ing
("cherishing"	nil	(((ch e )1)((r i sh )0)((i ng )0)))	;; ing
("chernobyls"	nil	(((ch @@r) 1) ((n @) 0) ((b i l z) 0)))	;; unique
("cherrys"	nil	(((ch e) 1) ((r ii z) 0)))	;; unique
("chest-thumping"	nil	(((ch e s t )1)((th uh m p )1)((i ng )0)))	;; ing
("chewing"	nil	(((ch uu )1)((i ng )0)))	;; ing
("chicagos"	nil	(((sh i) 0) ((k aa) 1) ((g ou z) 0)))	;; unique
("chicaning"	nil	(((sh i )0)((k ei n )1)((i ng )0)))	;; ing
("chickening"	nil	(((ch i )1)((k @ n )0)((i ng )0)))	;; ing
("chiding"	nil	(((ch ai d )1)((i ng )0)))	;; ing
("child-bearing"	nil	(((ch ai l d )1)((b ir r )1)((i ng )0)))	;; ing
("child-raising"	nil	(((ch ai l d )1)((r ei z )1)((i ng )0)))	;; ing
("child-rearing"	nil	(((ch ai l d )1)((r ir r )1)((i ng )0)))	;; ing
("childbearing"	nil	(((ch ai l d )1)((b ir r )1)((i ng )0)))	;; ing
("childrearing"	nil	(((ch ai l d )1)((r ir r )1)((i ng )0)))	;; ing
("childrens"	nil	(((ch i l) 1) ((d r @ n z) 0)))	;; unique
("chilling"	nil	(((ch i l )1)((i ng )0)))	;; ing
("chiming"	nil	(((ch ai m )1)((i ng )0)))	;; ing
("chinamans"	nil	(((ch ai) 1) ((n @) 0) ((m @ n z) 0)))	;; unique
("chings"	nil	(((ch i ng z) 1)))	;; unique
("chinking"	nil	(((ch i ng k )1)((i ng )0)))	;; ing
("chinning"	nil	(((ch i n )1)((i ng )0)))	;; ing
("chinwagging"	nil	(((ch i n )1)((w a g )1)((i ng )0)))	;; ing
("chipping"	nil	(((ch i p )1)((i ng )0)))	;; ing
("chirping"	nil	(((ch @@r p )1)((i ng )0)))	;; ing
("chirruping"	nil	(((ch i )1)((r @ p )0)((i ng )0)))	;; ing
("chiseling"	nil	(((ch i )1)((z l! )0)((i ng )0)))	;; ing
("chiselling"	nil	(((ch i )1)((z l! )0)((i ng )0)))	;; ing
("chivvying"	nil	(((ch i )1)((v iy )0)((i ng )0)))	;; ing
("chlorinating"	nil	(((k l oo )1)((r i n )0)((ei t^ )1)((i ng )0)))	;; ing
("chloroforming"	nil	(((k l o )1)((r @ )0)((f oo m )1)((i ng )0)))	;; ing
("choking"	nil	(((ch ou k )1)((i ng )0)))	;; ing
("cholinesterase"	nil	(((k o) 1) ((l i) 0) ((n e) 1) ((s t @) 0) ((r ei z) 0)))	;; oul
("chomping"	nil	(((ch o m p )1)((i ng )0)))	;; ing
("choosing"	nil	(((ch uu z )1)((i ng )0)))	;; ing
("chopins"	nil	(((sh ou) 1) ((p a n z) 0)))	;; unique
("chopping"	nil	(((ch o p )1)((i ng )0)))	;; ing
("chording"	nil	(((k oo d )1)((i ng )0)))	;; ing
("choreographing"	nil	(((k o )1)((r iy @ )0)((g r aa f )1)((i ng )0)))	;; ing
("chortling"	nil	(((ch oo )1)((t l! )0)((i ng )0)))	;; ing
("chorusing"	nil	(((k oo )1)((r @ s )0)((i ng )0)))	;; ing
("chriss"	nil	(((k r i s) 1) ((@ z) 0)))	;; unique
("christening"	nil	(((k r i s )1)((n! )0)((i ng )0)))	;; ing
("christianising"	nil	(((k r i s t )1)((iy @ n )0)((ai z )1)((i ng )0)))	;; ing
("christianizing"	nil	(((k r i s t )1)((iy @ n )0)((ai z )1)((i ng )0)))	;; ing
("christiansens"	nil	(((k r i) 1) ((s t ii @ n) 0) ((s n! z) 0)))	;; unique
("christis"	nil	(((k r i) 1) ((s t ii z) 0)))	;; unique
("christs"	nil	(((k r ai s t s) 1)))	;; unique
("chromolithograph"	nil	(((k r ou) 1) ((m o) 0) ((l i) 1) ((th @) 0) ((g r aa f) 1)))	;; oul
("chromolithography"	nil	(((k r ou) 1) ((m o) 0) ((l i) 0) ((th o) 1) ((g r @) 0) ((f ii) 0)))	;; oul
("chronicling"	nil	(((k r o )1)((n i )0)((k l! )0)((i ng )0)))	;; ing
("chubbs"	nil	(((ch uh b z) 1)))	;; unique
("chucking"	nil	(((ch uh k )1)((i ng )0)))	;; ing
("chuckling"	nil	(((ch uh )1)((k l! )0)((i ng )0)))	;; ing
("chuffing"	nil	(((ch uh f )1)((i ng )0)))	;; ing
("chugging"	nil	(((ch uh g )1)((i ng )0)))	;; ing
("chumming"	nil	(((ch uh m )1)((i ng )0)))	;; ing
("chunking"	nil	(((ch uh ng k )1)((i ng )0)))	;; ing
("chuntering"	nil	(((ch uh n )1)((t @ r )0)((i ng )0)))	;; ing
("church-going"	nil	(((ch @@r ch )1)((g ou )1)((i ng )0)))	;; ing
("churchgoing"	nil	(((ch @@r ch )1)((g ou )1)((i ng )0)))	;; ing
("churchills"	nil	(((ch @@r) 1) ((ch i l z) 0)))	;; unique
("churchs"	nil	(((ch @@r ch) 1) ((@ z) 0)))	;; unique
("churning"	nil	(((ch @@r n )1)((i ng )0)))	;; ing
("cilazapril"	nil	(((s i) 0) ((l a) 1) ((z @) 0) ((p r i l) 1)))	;; unique
("cilexetil"	nil	(((s i) 0) ((l e k) 1) ((s @) 0) ((t i l) 1)))	;; unique
("ciphering"	nil	(((s ai )1)((f @ r )0)((i ng )0)))	;; ing
("circling"	nil	(((s @@r )1)((k l! )0)((i ng )0)))	;; ing
("circulating"	nil	(((s @@r )1)((k y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("circumambulating"	nil	(((s @@r )1)((k @ m )0)((a m )1)((b y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("circumcising"	nil	(((s @@r )1)((k @ m )0)((s ai z )1)((i ng )0)))	;; ing
("circumcizing"	nil	(((s @@r )1)((k @ m )0)((s ai z )1)((i ng )0)))	;; ing
("circumnavigating"	nil	(((s @@r )1)((k @ m )0)((n a )1)((v @ )0)((g ei t^ )1)((i ng )0)))	;; ing
("circumpolar"	nil	(((s @@r) 1) ((k @ m) 0) ((p o l) 1) ((@) 0)))	;; oul
("circumscribing"	nil	(((s @@r )1)((k @ m )0)((s k r ai b )1)((i ng )0)))	;; ing
("circumsolar"	nil	(((s @@r) 1) ((k @ m) 0) ((s o) 1) ((l @) 0)))	;; oul
("circumventing"	nil	(((s @@r )1)((k @ m )0)((v e n t )1)((i ng )0)))	;; ing
("cirruss"	nil	(((s i) 1) ((r @ s) 0) ((@ z) 0)))	;; unique
("citibanks"	nil	(((s i) 1) ((t^ ii) 0) ((b a ng k s) 1)))	;; unique
("citicorps"	nil	(((s i) 1) ((t^ ii) 0) ((k oo p s) 1)))	;; unique
("citing"	nil	(((s ai t^ )1)((i ng )0)))	;; ing
("citys"	nil	(((s i) 1) ((t^ ii z) 0)))	;; unique
("civilising"	nil	(((s i )1)((v l! )0)((ai z )1)((i ng )0)))	;; ing
("civilizing"	nil	(((s i )1)((v l! )0)((ai z )1)((i ng )0)))	;; ing
("clacking"	nil	(((k l a k )1)((i ng )0)))	;; ing
("cladding"	nil	(((k l a d )1)((i ng )0)))	;; ing
("claiming"	nil	(((k l ei m )1)((i ng )0)))	;; ing
("claimjumping"	nil	(((k l ei m )1)((jh uh m p )1)((i ng )0)))	;; ing
("clambering"	nil	(((k l a m )1)((b @ r )0)((i ng )0)))	;; ing
("clamming"	nil	(((k l a m )1)((i ng )0)))	;; ing
("clamoring"	nil	(((k l a )1)((m @ r )0)((i ng )0)))	;; ing
("clamouring"	nil	(((k l a )1)((m @ r )0)((i ng )0)))	;; ing
("clamping"	nil	(((k l a m p )1)((i ng )0)))	;; ing
("clanging"	nil	(((k l a ng )1)((i ng )0)))	;; ing
("clanking"	nil	(((k l a ng k )1)((i ng )0)))	;; ing
("clapping"	nil	(((k l a p )1)((i ng )0)))	;; ing
("claras"	nil	(((k l ir) 1) ((r @ z) 0)))	;; unique
("claridges"	nil	(((k l a) 1) ((r i jh) 0) ((@ z) 0)))	;; unique
("clarifying"	nil	(((k l a )1)((r @ )0)((f ai )1)((i ng )0)))	;; ing
("clarkes"	nil	(((k l aa k s) 1)))	;; unique
("clarks"	nil	(((k l aa k s) 1)))	;; unique
("clashing"	nil	(((k l a sh )1)((i ng )0)))	;; ing
("clasping"	nil	(((k l aa s p )1)((i ng )0)))	;; ing
("classifying"	nil	(((k l a s )1)((@ )0)((f ai )1)((i ng )0)))	;; ing
("classing"	nil	(((k l aa s )1)((i ng )0)))	;; ing
("classs"	nil	(((k l aa s) 1) ((@ z) 0)))	;; unique
("clattering"	nil	(((k l a )1)((t^ @ r )0)((i ng )0)))	;; ing
("claudicating"	nil	(((k l oo )1)((d @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("clawing"	nil	(((k l oo )1)((i ng )0)))	;; ing
("clean-living"	nil	(((k l ii n )1)((l i v )1)((i ng )0)))	;; ing
("cleaning"	nil	(((k l ii n )1)((i ng )0)))	;; ing
("cleansing"	nil	(((k l e n z )1)((i ng )0)))	;; ing
("clearing"	nil	(((k l ir r )1)((i ng )0)))	;; ing
("cleaving"	nil	(((k l ii v )1)((i ng )0)))	;; ing
("clems"	nil	(((k l e m z) 1)))	;; unique
("clenching"	nil	(((k l e n ch )1)((i ng )0)))	;; ing
("clergymans"	nil	(((k l @@r) 1) ((jh ii) 0) ((m @ n z) 0)))	;; unique
("clevelands"	nil	(((k l ii v) 1) ((l @ n d z) 0)))	;; unique
("clicking"	nil	(((k l i k )1)((i ng )0)))	;; ing
("cliffhanging"	nil	(((k l i f )1)((h a ng )1)((i ng )0)))	;; ing
("cliftons"	nil	(((k l i f) 1) ((t @ n z) 0)))	;; unique
("climaxing"	nil	(((k l ai )1)((m a k s )0)((i ng )0)))	;; ing
("climbing"	nil	(((k l ai m )1)((i ng )0)))	;; ing
("clinching"	nil	(((k l i n ch )1)((i ng )0)))	;; ing
("clinging"	nil	(((k l i ng )1)((i ng )0)))	;; ing
("clinking"	nil	(((k l i ng k )1)((i ng )0)))	;; ing
("clipping"	nil	(((k l i p )1)((i ng )0)))	;; ing
("cloaking"	nil	(((k l ou k )1)((i ng )0)))	;; ing
("clobbering"	nil	(((k l o )1)((b @ r )0)((i ng )0)))	;; ing
("clocking"	nil	(((k l o k )1)((i ng )0)))	;; ing
("clodhopping"	nil	(((k l o d )1)((h o p )1)((i ng )0)))	;; ing
("clogging"	nil	(((k l o g )1)((i ng )0)))	;; ing
("cloistering"	nil	(((k l oi )1)((s t @ r )0)((i ng )0)))	;; ing
("clomping"	nil	(((k l o m p )1)((i ng )0)))	;; ing
("cloning"	nil	(((k l ou n )1)((i ng )0)))	;; ing
("clonking"	nil	(((k l o ng k )1)((i ng )0)))	;; ing
("clopping"	nil	(((k l o p )1)((i ng )0)))	;; ing
("closeting"	nil	(((k l o )1)((z @ t^ )0)((i ng )0)))	;; ing
("closing"	nil	(((k l ou z )1)((i ng )0)))	;; ing
("clothing"	nil	(((k l ou dh )1)((i ng )0)))	;; ing
("clotting"	nil	(((k l o t^ )1)((i ng )0)))	;; ing
("clouding"	nil	(((k l ow d )1)((i ng )0)))	;; ing
("clovers"	nil	(((k l ou) 1) ((v @ z) 0)))	;; unique
("clowning"	nil	(((k l ow n )1)((i ng )0)))	;; ing
("cloying"	nil	(((k l oi )1)((i ng )0)))	;; ing
("clubbing"	nil	(((k l uh b )1)((i ng )0)))	;; ing
("clucking"	nil	(((k l uh k )1)((i ng )0)))	;; ing
("clueing"	nil	(((k l uu )1)((i ng )0)))	;; ing
("clunking"	nil	(((k l uh ng k )1)((i ng )0)))	;; ing
("clustering"	nil	(((k l uh )1)((s t @ r )0)((i ng )0)))	;; ing
("clutching"	nil	(((k l uh ch )1)((i ng )0)))	;; ing
("cluttering"	nil	(((k l uh )1)((t^ @ r )0)((i ng )0)))	;; ing
("co-operating"	nil	(((k ou )0)((o )1)((p @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("co-opting"	nil	(((k ou )0)((o p t )1)((i ng )0)))	;; ing
("co-ordinating"	nil	(((k ou )0)((oo )1)((d i n )0)((ei t^ )1)((i ng )0)))	;; ing
("coaching"	nil	(((k ou ch )1)((i ng )0)))	;; ing
("coachmans"	nil	(((k ou ch) 1) ((m @ n z) 0)))	;; unique
("coachs"	nil	(((k ou ch) 1) ((@ z) 0)))	;; unique
("coagulating"	nil	(((k ou )0)((a )1)((g y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("coal"	nil	(((k o l) 1)))	;; oul
("coal-black"	nil	(((k o l) 0) ((b l a k) 1)))	;; oul
("coal-blacks"	nil	(((k o l) 0) ((b l a k s) 1)))	;; oul
("coal-bunker"	nil	(((k o l) 1) ((b uh ng k) 1) ((@) 0)))	;; oul
("coal-bunkers"	nil	(((k o l) 1) ((b uh ng k) 1) ((@ z) 0)))	;; oul
("coal-burner"	nil	(((k o l) 1) ((b @@r n) 1) ((@) 0)))	;; oul
("coal-cellar"	nil	(((k o l) 1) ((s a) 1) ((l @) 0)))	;; oul
("coal-cellars"	nil	(((k o l) 1) ((s a) 1) ((l @ z) 0)))	;; oul
("coal-dust"	nil	(((k o l) 1) ((d uh s t) 0)))	;; oul
("coal-dusts"	nil	(((k o l) 1) ((d uh s t s) 0)))	;; oul
("coal-face"	nil	(((k o l) 1) ((f ei s) 0)))	;; oul
("coal-faces"	nil	(((k o l) 1) ((f ei s) 1) ((@ z) 0)))	;; oul
("coal-fired"	nil	(((k o l) 1) ((f ai @ d) 0)))	;; oul
("coal-hole"	nil	(((k o l) 1) ((h o l) 0)))	;; oul
("coal-holes"	nil	(((k o l) 1) ((h o l z) 0)))	;; oul
("coal-merchant"	nil	(((k o l) 1) ((m @@r) 1) ((ch @ n t) 0)))	;; oul
("coal-merchants"	nil	(((k o l) 1) ((m @@r) 1) ((ch @ n t s) 0)))	;; oul
("coal-mine"	nil	(((k o l) 1) ((m ai n) 0)))	;; oul
("coal-mines"	nil	(((k o l) 1) ((m ai n z) 0)))	;; oul
("coal-porter"	nil	(((k o l) 1) ((p oo t^) 1) ((@) 0)))	;; oul
("coal-scuttles"	nil	(((k o l) 1) ((s k uh) 1) ((t l! z) 0)))	;; oul
("coal-shed"	nil	(((k o l) 1) ((sh e d) 0)))	;; oul
("coal-sheds"	nil	(((k o l) 1) ((sh e d z) 0)))	;; oul
("coalescing"	nil	(((k ou @ )0)((l e s )1)((i ng )0)))	;; ing
("coalface"	nil	(((k o l) 1) ((f ei s) 0)))	;; oul
("coalfaces"	nil	(((k o l) 1) ((f ei s) 1) ((@ z) 0)))	;; oul
("coalfield"	nil	(((k o l) 1) ((f ii l d) 0)))	;; oul
("coalfields"	nil	(((k o l) 1) ((f ii l d z) 0)))	;; oul
("coaling"	nil	(((k o l) 1) ((i ng) 0)))	;; oul
("coalman"	nil	(((k o l) 1) ((m @ n) 0)))	;; oul
("coalmine"	nil	(((k o l) 1) ((m ai n) 0)))	;; oul
("coalmined"	nil	(((k o l) 1) ((m ai n d) 0)))	;; oul
("coalmines"	nil	(((k o l) 1) ((m ai n z) 0)))	;; oul
("coalmining"	nil	(((k o l) 1) ((m ai ng) 1) ((i ng) 0)))	;; oul
("coalpit"	nil	(((k o l) 1) ((p i t) 0)))	;; oul
("coalpits"	nil	(((k o l) 1) ((p i t s) 0)))	;; oul
("coals"	nil	(((k o l z) 1)))	;; oul
("coarsening"	nil	(((k oo s )1)((n! )0)((i ng )0)))	;; ing
("coasting"	nil	(((k ou s t )1)((i ng )0)))	;; ing
("coating"	nil	(((k ou t^ )1)((i ng )0)))	;; ing
("coauthoring"	nil	(((k ou )1)((oo )1)((th @ r )0)((i ng )0)))	;; ing
("coaxing"	nil	(((k ou k s )1)((i ng )0)))	;; ing
("cobbling"	nil	(((k o )1)((b l! )0)((i ng )0)))	;; ing
("cobols"	nil	(((k ou) 1) ((b o l z) 0)))	;; unique
("coca-cola"	nil	(((k ou) 1) ((k @) 0) ((k o) 1) ((l @) 0)))	;; oul
("cochairing"	nil	(((k ou )1)((ch ir r )1)((i ng )0)))	;; ing
("cochrans"	nil	(((k o) 1) ((k r @ n z) 0)))	;; unique
("cockers"	nil	(((k o) 1) ((k @ z) 0)))	;; unique
("cockfighting"	nil	(((k o k )1)((f ai t^ )1)((i ng )0)))	;; ing
("cocking"	nil	(((k o k )1)((i ng )0)))	;; ing
("cocooning"	nil	(((k @ )0)((k uu n )1)((i ng )0)))	;; ing
("coddling"	nil	(((k o )1)((d l! )0)((i ng )0)))	;; ing
("codebreaking"	nil	(((k ou d )1)((b r ei k )1)((i ng )0)))	;; ing
("codein"	nil	(((k ou) 1) ((d ii n) 0)))	;; unique
("codenaming"	nil	(((k ou d )1)((n ei m )1)((i ng )0)))	;; ing
("codifying"	nil	(((k ou d )1)((@ )0)((f ai )1)((i ng )0)))	;; ing
("coding"	nil	(((k ou d )1)((i ng )0)))	;; ing
("codling"	nil	(((k o d )1)((l i ng )0)))	;; ing
("cods-wallop"	nil	(((k o d z) 1) ((w o) 1) ((l @ p) 0)))	;; unique
("coediting"	nil	(((k ou )0)((e )1)((d @ t^ )0)((i ng )0)))	;; ing
("coercing"	nil	(((k ou )0)((@@r s )1)((i ng )0)))	;; ing
("coexisting"	nil	(((k ou @ g )1)((z i s t )1)((i ng )0)))	;; ing
("cofactoring"	nil	(((k ou )1)((f a k )1)((t @ r )0)((i ng )0)))	;; ing
("cofinancing"	nil	(((k ou )0)((f ai )1)((n a n s )0)((i ng )0)))	;; ing
("cogitating"	nil	(((k o )1)((jh @ )0)((t ei t^ )1)((i ng )0)))	;; ing
("cohabiting"	nil	(((k ou )0)((h a )1)((b @ t^ )0)((i ng )0)))	;; ing
("cohens"	nil	(((k ou) 1) ((i n z) 0)))	;; unique
("cohering"	nil	(((k ou )0)((h ir r )1)((i ng )0)))	;; ing
("coiling"	nil	(((k oi l )1)((i ng )0)))	;; ing
("coinciding"	nil	(((k ou )1)((i n )0)((s ai d )1)((i ng )0)))	;; ing
("coining"	nil	(((k oi n )1)((i ng )0)))	;; ing
("coking"	nil	(((k ou k )1)((i ng )0)))	;; ing
("cola"	nil	(((k o) 1) ((l @) 0)))	;; oul
("colas"	nil	(((k o) 1) ((l @ z) 0)))	;; oul
("colatitude"	nil	(((k o) 0) ((l a) 1) ((t^ @) 0) ((ch uu d) 0)))	;; oul
("colchester"	nil	(((k o l) 1) ((ch i) 0) ((s t @) 0)))	;; oul
("cold"	nil	(((k o l d) 1)))	;; oul
("cold-blooded"	nil	(((k o l d) 1) ((b l uh d) 1) ((@ d) 0)))	;; oul
("cold-bloodedly"	nil	(((k o l d) 1) ((b l uh d) 1) ((@ d) 0) ((l ii) 0)))	;; oul
("cold-bloodedness"	nil	(((k o l d) 1) ((b l uh d) 1) ((@ d) 0) ((n @ s) 0)))	;; oul
("cold-hearted"	nil	(((k o l d) 1) ((h aa t^) 1) ((@ d) 0)))	;; oul
("colder"	nil	(((k o l d) 1) ((@) 0)))	;; oul
("coldest"	nil	(((k o l d) 1) ((@ s t) 0)))	;; oul
("coldfield"	nil	(((k o l d) 1) ((f ii l d) 0)))	;; oul
("coldish"	nil	(((k o l d) 1) ((i sh) 0)))	;; oul
("colditz"	nil	(((k o l) 1) ((d i t s) 0)))	;; oul
("coldly"	nil	(((k o l d) 1) ((l ii) 0)))	;; oul
("coldness"	nil	(((k o l d) 1) ((n @ s) 0)))	;; oul
("colds"	nil	(((k o l d z) 1)))	;; oul
("coldstarted"	nil	(((k o l d) 1) ((s t aa t^) 1) ((@ d) 0)))	;; oul
("coldwater"	nil	(((k o l d) 1) ((w oo) 1) ((t^ @) 0)))	;; oul
("coldwell"	nil	(((k o l d) 1) ((w a l) 0)))	;; oul
("coldwells"	nil	(((k o l d) 1) ((w a l z) 0)))	;; unique
("cole"	nil	(((k o l) 1)))	;; oul
("colecalciferol"	nil	(((k o l) 1) ((k a l) 0) ((s i) 1) ((f @) 0) ((r o l) 0)))	;; unique
("coleman"	nil	(((k o l) 1) ((m @ n) 0)))	;; oul
("colemans"	nil	(((k o l) 1) ((m @ n z) 0)))	;; unique
("coleridge"	nil	(((k o) 1) ((l @) 0) ((r i jh) 0)))	;; oul
("coles"	nil	(((k o l z) 1)))	;; oul
("coleslaw"	nil	(((k o l) 1) ((s l oo) 0)))	;; oul
("coleslaws"	nil	(((k o l) 1) ((s l oo z) 0)))	;; oul
("coleus"	nil	(((k o) 1) ((l ii @ s) 0)))	;; oul
("coliform"	nil	(((k o) 1) ((l i) 0) ((f oo m) 0)))	;; oul
("colinear"	nil	(((k o) 0) ((l i) 1) ((n ii @) 0)))	;; oul
("colitis"	nil	(((k o) 0) ((l ai) 1) ((t^ @ s) 0)))	;; oul
("collaborating"	nil	(((k @ )0)((l a )1)((b @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("collapsing"	nil	(((k @ )0)((l a p s )1)((i ng )0)))	;; ing
("collaring"	nil	(((k o )1)((l @ r )0)((i ng )0)))	;; ing
("collateralizing"	nil	(((k @ )0)((l a )1)((t^ @ )0)((r @ l )0)((ai z )1)((i ng )0)))	;; ing
("collating"	nil	(((k @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("collecting"	nil	(((k @ )0)((l e k t )1)((i ng )0)))	;; ing
("collectivising"	nil	(((k @ )0)((l e k t )1)((i v )0)((ai z )1)((i ng )0)))	;; ing
("collectivizing"	nil	(((k @ )0)((l e k t )1)((i v )0)((ai z )1)((i ng )0)))	;; ing
("colliding"	nil	(((k @ )0)((l ai d )1)((i ng )0)))	;; ing
("collimating"	nil	(((k o )1)((l @ )0)((m ei t^ )1)((i ng )0)))	;; ing
("collinear"	nil	(((k o) 0) ((l i) 1) ((n ii @) 0)))	;; oul
("collinearly"	nil	(((k o) 0) ((l i) 1) ((n ii @) 0) ((l ii) 0)))	;; oul
("collinss"	nil	(((k o) 1) ((l i n z) 0) ((@ z) 0)))	;; unique
("collocating"	nil	(((k o )1)((l @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("colluding"	nil	(((k @ )0)((l uu d )1)((i ng )0)))	;; ing
("colman"	nil	(((k o l) 1) ((m @ n) 0)))	;; oul
("colombias"	nil	(((k @) 0) ((l uh m) 1) ((b ii @ z) 0)))	;; unique
("colon"	nil	(((k o) 1) ((l @ n) 0)))	;; oul
("colonic"	nil	(((k o) 0) ((l o n) 1) ((i k) 0)))	;; oul
("colonising"	nil	(((k o )1)((l @ )0)((n ai z )1)((i ng )0)))	;; ing
("colonizing"	nil	(((k o )1)((l @ )0)((n ai z )1)((i ng )0)))	;; ing
("colons"	nil	(((k o) 1) ((l @ n z) 0)))	;; oul
("colonys"	nil	(((k o) 1) ((l @) 0) ((n ii z) 0)))	;; unique
("coloring"	nil	(((k uh )1)((l @ r )0)((i ng )0)))	;; ing
("colorizing"	nil	(((k uh )1)((l @ r )0)((ai z )1)((i ng )0)))	;; ing
("colour-coding"	nil	(((k uh )1)((l @ )0)((k ou d )1)((i ng )0)))	;; ing
("colouring"	nil	(((k uh )1)((l @ r )0)((i ng )0)))	;; ing
("colson"	nil	(((k o l) 1) ((s n!) 0)))	;; oul
("colston"	nil	(((k o l) 1) ((s t @ n) 0)))	;; oul
("colt"	nil	(((k o l t) 1)))	;; oul
("coltheart"	nil	(((k o l t) 1) ((h aa t) 0)))	;; oul
("coltish"	nil	(((k o l t) 1) ((i sh) 0)))	;; oul
("colts"	nil	(((k o l t s) 1)))	;; oul
("coltsfoot"	nil	(((k o l t s) 1) ((f u t) 0)))	;; oul
("columbias"	nil	(((k @) 0) ((l uh m) 1) ((b ii @ z) 0)))	;; unique
("columbuss"	nil	(((k @) 0) ((l uh m) 1) ((b @ s) 0) ((@ z) 0)))	;; unique
("combating"	nil	(((k o m )1)((b a t^ )0)((i ng )0)))	;; ing
("combatting"	nil	(((k o m )1)((b a t^ )0)((i ng )0)))	;; ing
("combing"	nil	(((k ou m )1)((i ng )0)))	;; ing
("combining"	nil	(((k @ m )0)((b ai n )1)((i ng )0)))	;; ing
("combusting"	nil	(((k @ m )0)((b uh s t )1)((i ng )0)))	;; ing
("comforting"	nil	(((k uh m )1)((f @ t^ )0)((i ng )0)))	;; ing
("coming"	nil	(((k uh m )1)((i ng )0)))	;; ing
("commandeering"	nil	(((k o )1)((m @ n d )0)((ir r )1)((i ng )0)))	;; ing
("commanding"	nil	(((k @ )0)((m aa n d )1)((i ng )0)))	;; ing
("commemorating"	nil	(((k @ )0)((m e )1)((m @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("commencing"	nil	(((k @ )0)((m e n s )1)((i ng )0)))	;; ing
("commending"	nil	(((k @ )0)((m e n d )1)((i ng )0)))	;; ing
("commenting"	nil	(((k o )1)((m e n t )0)((i ng )0)))	;; ing
("commercialising"	nil	(((k @ )0)((m @@r )1)((sh l! )0)((ai z )1)((i ng )0)))	;; ing
("commercializing"	nil	(((k @ )0)((m @@r )1)((sh l! )0)((ai z )1)((i ng )0)))	;; ing
("commingling"	nil	(((k @ )0)((m i ng )1)((g l! )0)((i ng )0)))	;; ing
("commiserating"	nil	(((k @ )0)((m i )1)((z @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("commissioning"	nil	(((k @ )0)((m i )1)((sh n! )0)((i ng )0)))	;; ing
("committing"	nil	(((k @ )0)((m i t^ )1)((i ng )0)))	;; ing
("communicating"	nil	(((k @ )0)((m y uu )1)((n @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("communing"	nil	(((k @ )0)((m y uu n )1)((i ng )0)))	;; ing
("communitys"	nil	(((k @) 0) ((m y uu n) 1) ((@) 0) ((t^ ii z) 0)))	;; unique
("commuting"	nil	(((k @ )0)((m y uu t^ )1)((i ng )0)))	;; ing
("compacting"	nil	(((k @ m )0)((p a k t )1)((i ng )0)))	;; ing
("companys"	nil	(((k uh m) 1) ((p @) 0) ((n ii z) 0)))	;; unique
("compaqs"	nil	(((k o m) 1) ((p a k s) 0)))	;; unique
("comparing"	nil	(((k @ m )0)((p ir r )1)((i ng )0)))	;; ing
("compartmentalising"	nil	(((k o m )1)((p aa t )0)((m e n t )1)((l! )0)((ai z )1)((i ng )0)))	;; ing
("compartmentalizing"	nil	(((k o m )1)((p aa t )0)((m e n t )1)((l! )0)((ai z )1)((i ng )0)))	;; ing
("compassing"	nil	(((k uh m )1)((p @ s )0)((i ng )0)))	;; ing
("compasss"	nil	(((k uh m) 1) ((p @ s) 0) ((@ z) 0)))	;; unique
("compelling"	nil	(((k @ m )0)((p a l )1)((i ng )0)))	;; ing
("compensating"	nil	(((k o m )1)((p @ n )0)((s ei t^ )1)((i ng )0)))	;; ing
("competing"	nil	(((k @ m )0)((p ii t^ )1)((i ng )0)))	;; ing
("compiling"	nil	(((k @ m )0)((p ai l )1)((i ng )0)))	;; ing
("complaining"	nil	(((k @ m )0)((p l ei n )1)((i ng )0)))	;; ing
("complementing"	nil	(((k o m )1)((p l @ )0)((m e n t )1)((i ng )0)))	;; ing
("completing"	nil	(((k @ m )0)((p l ii t^ )1)((i ng )0)))	;; ing
("complexs"	nil	(((k o m) 1) ((p l e k s) 0) ((@ z) 0)))	;; unique
("complicating"	nil	(((k o m )1)((p l @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("complimenting"	nil	(((k o m )1)((p l @ )0)((m e n t )1)((i ng )0)))	;; ing
("complying"	nil	(((k @ m )0)((p l ai )1)((i ng )0)))	;; ing
("comporting"	nil	(((k @ m )0)((p oo t^ )1)((i ng )0)))	;; ing
("composing"	nil	(((k @ m )0)((p ou z )1)((i ng )0)))	;; ing
("compositing"	nil	(((k o m )1)((p @ z )0)((ai t^ )1)((i ng )0)))	;; ing
("composting"	nil	(((k o m )1)((p o s t )0)((i ng )0)))	;; ing
("compounding"	nil	(((k @ m )0)((p ow n d )1)((i ng )0)))	;; ing
("comprehending"	nil	(((k o m )1)((p r i )0)((h e n d )1)((i ng )0)))	;; ing
("compressing"	nil	(((k @ m )0)((p r e s )1)((i ng )0)))	;; ing
("comprising"	nil	(((k @ m )0)((p r ai z )1)((i ng )0)))	;; ing
("compromising"	nil	(((k o m )1)((p r @ )0)((m ai z )1)((i ng )0)))	;; ing
("comptroller"	nil	(((k @ n) 0) ((t r o) 1) ((l @) 0)))	;; oul
("computerising"	nil	(((k @ m )0)((p y uu t^ )1)((@ r )0)((ai z )1)((i ng )0)))	;; ing
("computerizing"	nil	(((k @ m )0)((p y uu t^ )1)((@ r )0)((ai z )1)((i ng )0)))	;; ing
("computing"	nil	(((k @ m )0)((p y uu t^ )1)((i ng )0)))	;; ing
("concatenating"	nil	(((k @ n )0)((k a )1)((t^ @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("concealing"	nil	(((k @ n )0)((s ii l )1)((i ng )0)))	;; ing
("conceding"	nil	(((k @ n )0)((s ii d )1)((i ng )0)))	;; ing
("conceiving"	nil	(((k @ n )0)((s ii v )1)((i ng )0)))	;; ing
("concentrating"	nil	(((k o n )1)((s n! )0)((t r ei t^ )1)((i ng )0)))	;; ing
("conceptualising"	nil	(((k @ n )0)((s e p )1)((ch uw @ l )0)((ai z )1)((i ng )0)))	;; ing
("conceptualizing"	nil	(((k @ n )0)((s e p )1)((ch uw @ l )0)((ai z )1)((i ng )0)))	;; ing
("concerning"	nil	(((k @ n )0)((s @@r n )1)((i ng )0)))	;; ing
("concerting"	nil	(((k @ n )0)((s @@r t^ )1)((i ng )0)))	;; ing
("conciliating"	nil	(((k @ n )0)((s i )1)((l iy )0)((ei t^ )1)((i ng )0)))	;; ing
("concluding"	nil	(((k @ n )0)((k l uu d )1)((i ng )0)))	;; ing
("concocting"	nil	(((k @ ng )0)((k o k t )1)((i ng )0)))	;; ing
("concording"	nil	(((k o ng )1)((k oo d )0)((i ng )0)))	;; ing
("concreting"	nil	(((k o ng )1)((k r ii t^ )0)((i ng )0)))	;; ing
("concurring"	nil	(((k @ ng )0)((k @@r r )1)((i ng )0)))	;; ing
("condemning"	nil	(((k @ n )0)((d e m )1)((i ng )0)))	;; ing
("condensing"	nil	(((k @ n )0)((d e n s )1)((i ng )0)))	;; ing
("condescending"	nil	(((k o n )1)((d i )0)((s e n d )1)((i ng )0)))	;; ing
("conditioning"	nil	(((k @ n )0)((d i )1)((sh n! )0)((i ng )0)))	;; ing
("condole"	nil	(((k @ n) 0) ((d o l) 1)))	;; oul
("condolement"	nil	(((k @ n) 0) ((d o l) 1) ((m @ n t) 0)))	;; oul
("condolence"	nil	(((k @ n) 0) ((d o l) 1) ((@ n s) 0)))	;; oul
("condolences"	nil	(((k @ n) 0) ((d o l) 1) ((@ n s) 0) ((@ z) 0)))	;; oul
("condoles"	nil	(((k @ n) 0) ((d o l z) 1)))	;; oul
("condoling"	nil	(((k @ ng) 0) ((d o l) 1) ((i ng) 0)))	;; oul
("condoning"	nil	(((k @ n )0)((d ou n )1)((i ng )0)))	;; ing
("conducing"	nil	(((k @ n )0)((d y uu s )1)((i ng )0)))	;; ing
("conducting"	nil	(((k @ n )0)((d uh k t )1)((i ng )0)))	;; ing
("confederating"	nil	(((k @ n )0)((f e )1)((d @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("conferencing"	nil	(((k o n )1)((f @ r )0)((@ n s )0)((i ng )0)))	;; ing
("conferring"	nil	(((k @ n )0)((f @@r r )1)((i ng )0)))	;; ing
("confessing"	nil	(((k @ n )0)((f e s )1)((i ng )0)))	;; ing
("confiding"	nil	(((k @ n )0)((f ai d )1)((i ng )0)))	;; ing
("configuring"	nil	(((k @ n )0)((f i )1)((g @ r )0)((i ng )0)))	;; ing
("confining"	nil	(((k @ n )0)((f ai n )1)((i ng )0)))	;; ing
("confirming"	nil	(((k @ n )0)((f @@r m )1)((i ng )0)))	;; ing
("confiscating"	nil	(((k o n )1)((f @ )0)((s k ei t^ )1)((i ng )0)))	;; ing
("conflating"	nil	(((k @ n )0)((f l ei t^ )1)((i ng )0)))	;; ing
("conflicting"	nil	(((k @ n )0)((f l i k t )1)((i ng )0)))	;; ing
("conforming"	nil	(((k @ n )0)((f oo m )1)((i ng )0)))	;; ing
("confounding"	nil	(((k @ n )0)((f ow n d )1)((i ng )0)))	;; ing
("confronting"	nil	(((k @ n )0)((f r uh n t )1)((i ng )0)))	;; ing
("confusing"	nil	(((k @ n )0)((f y uu z )1)((i ng )0)))	;; ing
("confuting"	nil	(((k @ n )0)((f y uu t^ )1)((i ng )0)))	;; ing
("congealing"	nil	(((k @ n )0)((jh ii l )1)((i ng )0)))	;; ing
("congesting"	nil	(((k @ n )0)((jh e s t )1)((i ng )0)))	;; ing
("congratulating"	nil	(((k @ ng )0)((g r a )1)((ch @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("congregating"	nil	(((k o ng )1)((g r @ )0)((g ei t^ )1)((i ng )0)))	;; ing
("congressmens"	nil	(((k o ng) 1) ((g r e s) 0) ((m @ n z) 0)))	;; unique
("congresss"	nil	(((k o ng) 1) ((g r e s) 0) ((@ z) 0)))	;; unique
("coning"	nil	(((k ou n )1)((i ng )0)))	;; ing
("conjecturing"	nil	(((k @ n )0)((jh e k )1)((ch @ r )0)((i ng )0)))	;; ing
("conjugating"	nil	(((k o n )1)((jh u )0)((g ei t^ )1)((i ng )0)))	;; ing
("conjuring"	nil	(((k @ n )0)((jh ur r )1)((i ng )0)))	;; ing
("conking"	nil	(((k o ng k )1)((i ng )0)))	;; ing
("connecticuts"	nil	(((k @) 0) ((n e) 1) ((t^ @) 0) ((k @ t s) 0)))	;; unique
("connecting"	nil	(((k @ )0)((n e k t )1)((i ng )0)))	;; ing
("conning"	nil	(((k o n )1)((i ng )0)))	;; ing
("conniving"	nil	(((k @ )0)((n ai v )1)((i ng )0)))	;; ing
("connollys"	nil	(((k o) 1) ((n l!) 0) ((ii z) 0)))	;; unique
("connoting"	nil	(((k @ )0)((n ou t^ )1)((i ng )0)))	;; ing
("conquering"	nil	(((k o ng )1)((k @ r )0)((i ng )0)))	;; ing
("conrads"	nil	(((k o n) 1) ((r a d z) 0)))	;; unique
("conscripting"	nil	(((k @ n )0)((s k r i p t )1)((i ng )0)))	;; ing
("consecrating"	nil	(((k o n )1)((s @ )0)((k r ei t^ )1)((i ng )0)))	;; ing
("consenting"	nil	(((k @ n )0)((s e n t )1)((i ng )0)))	;; ing
("conserving"	nil	(((k @ n )0)((s @@r v )1)((i ng )0)))	;; ing
("considering"	nil	(((k @ n )0)((s i )1)((d @ r )0)((i ng )0)))	;; ing
("consigning"	nil	(((k @ n )0)((s ai n )1)((i ng )0)))	;; ing
("consistencys"	nil	(((k @ n) 0) ((s i) 1) ((s t n!) 0) ((s ii z) 0)))	;; unique
("consisting"	nil	(((k @ n )0)((s i s t )1)((i ng )0)))	;; ing
("consolable"	nil	(((k @ n) 0) ((s o l) 1) ((@) 0) ((b l!) 0)))	;; oul
("console"	nil	(((k @ n) 0) ((s o l) 1)))	;; oul
("consoled"	nil	(((k @ n) 0) ((s o l d) 1)))	;; oul
("consoler"	nil	(((k @ n) 0) ((s o l) 1) ((@) 0)))	;; oul
("consoles"	nil	(((k o n) 1) ((s o l z) 0)))	;; oul
("consolidating"	nil	(((k @ n )0)((s o )1)((l @ d )0)((ei t^ )1)((i ng )0)))	;; ing
("consoling"	nil	(((k @ ng) 0) ((s o l) 1) ((i ng) 0)))	;; oul
("consolingly"	nil	(((k @ ng) 0) ((s o l) 1) ((i ng) 0) ((l ii) 0)))	;; oul
("consorting"	nil	(((k @ n )0)((s oo t^ )1)((i ng )0)))	;; ing
("conspiring"	nil	(((k @ n )0)((s p ai @ r )1)((i ng )0)))	;; ing
("constipating"	nil	(((k o n )1)((s t @ )0)((p ei t^ )1)((i ng )0)))	;; ing
("constituting"	nil	(((k o n )1)((s t i )0)((t y uu t^ )1)((i ng )0)))	;; ing
("constitutionalising"	nil	(((k o n )1)((s t i )0)((t y uu )1)((sh n! )0)((@ l )0)((ai z )1)((i ng )0)))	;; ing
("constitutionalizing"	nil	(((k o n )1)((s t i )0)((t y uu )1)((sh n! )0)((@ l )0)((ai z )1)((i ng )0)))	;; ing
("constraining"	nil	(((k @ n )0)((s t r ei n )1)((i ng )0)))	;; ing
("constricting"	nil	(((k @ n )0)((s t r i k t )1)((i ng )0)))	;; ing
("constructing"	nil	(((k @ n )0)((s t r uh k t )1)((i ng )0)))	;; ing
("construing"	nil	(((k @ n )0)((s t r uu )1)((i ng )0)))	;; ing
("consulting"	nil	(((k @ n )0)((s o l t )1)((i ng )0)))	;; ing
("consultings"	nil	(((k @ n) 0) ((s o l t) 1) ((i ng z) 0)))	;; unique
("consuming"	nil	(((k @ n )0)((s y uu m )1)((i ng )0)))	;; ing
("consummating"	nil	(((k o n )1)((s @ )0)((m ei t^ )1)((i ng )0)))	;; ing
("contacting"	nil	(((k o n )1)((t a k t )0)((i ng )0)))	;; ing
("containerising"	nil	(((k @ n )0)((t ei n )1)((@ r )0)((ai z )1)((i ng )0)))	;; ing
("containerizing"	nil	(((k @ n )0)((t ei n )1)((@ r )0)((ai z )1)((i ng )0)))	;; ing
("containing"	nil	(((k @ n )0)((t ei n )1)((i ng )0)))	;; ing
("contaminating"	nil	(((k @ n )0)((t a )1)((m @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("contemning"	nil	(((k @ n )0)((t e m )1)((i ng )0)))	;; ing
("contemplating"	nil	(((k o n )1)((t @ m )0)((p l ei t^ )1)((i ng )0)))	;; ing
("contending"	nil	(((k @ n )0)((t e n d )1)((i ng )0)))	;; ing
("contenting"	nil	(((k @ n )0)((t e n t )1)((i ng )0)))	;; ing
("contesting"	nil	(((k @ n )0)((t e s t )1)((i ng )0)))	;; ing
("contextualising"	nil	(((k @ n )0)((t e k s )1)((ch uw @ l )0)((ai z )1)((i ng )0)))	;; ing
("contextualizing"	nil	(((k @ n )0)((t e k s )1)((ch uw @ l )0)((ai z )1)((i ng )0)))	;; ing
("continuing"	nil	(((k @ n )0)((t i )1)((n y uw )0)((i ng )0)))	;; ing
("contorting"	nil	(((k @ n )0)((t oo t^ )1)((i ng )0)))	;; ing
("contouring"	nil	(((k o n )1)((t ur r )0)((i ng )0)))	;; ing
("contracting"	nil	(((k @ n )0)((t r a k t )1)((i ng )0)))	;; ing
("contradicting"	nil	(((k o n )1)((t r @ )0)((d i k t )1)((i ng )0)))	;; ing
("contradistinguishing"	nil	(((k o n )1)((t r @ )0)((d i )0)((s t i ng )1)((g w i sh )0)((i ng )0)))	;; ing
("contrasting"	nil	(((k @ n )0)((t r aa s t )1)((i ng )0)))	;; ing
("contravening"	nil	(((k o n )1)((t r @ )0)((v ii n )1)((i ng )0)))	;; ing
("contributing"	nil	(((k @ n )0)((t r i )1)((b y uw t^ )0)((i ng )0)))	;; ing
("contriving"	nil	(((k @ n )0)((t r ai v )1)((i ng )0)))	;; ing
("control"	nil	(((k @ n) 0) ((t r o l) 1)))	;; oul
("controlhandle"	nil	(((k @ n) 0) ((t r o l) 1) ((h a n) 1) ((d l!) 0)))	;; oul
("controlhandles"	nil	(((k @ n) 0) ((t r o l) 1) ((h a n) 1) ((d l! z) 0)))	;; oul
("controllability"	nil	(((k @ n) 0) ((t r o l) 1) ((@) 0) ((b i l) 1) ((@) 0) ((t^ ii) 0)))	;; oul
("controllable"	nil	(((k @ n) 0) ((t r o l) 1) ((@) 0) ((b l!) 0)))	;; oul
("controllably"	nil	(((k @ n) 0) ((t r o l) 1) ((@) 0) ((b l ii) 0)))	;; oul
("controlled"	nil	(((k @ n) 0) ((t r o l d) 1)))	;; oul
("controller"	nil	(((k @ n) 0) ((t r o l) 1) ((@) 0)))	;; oul
("controllers"	nil	(((k @ n) 0) ((t r o l) 1) ((@ z) 0)))	;; oul
("controllership"	nil	(((k @ n) 0) ((t r o l) 1) ((@) 0) ((sh i p) 1)))	;; oul
("controlling"	nil	(((k @ ng) 0) ((t r o l) 1) ((i ng) 0)))	;; oul
("controllingly"	nil	(((k @ ng) 0) ((t r o l) 1) ((i ng) 0) ((l ii) 0)))	;; oul
("controlmechanism"	nil	(((k @ n) 0) ((t r o l) 1) ((m e) 1) ((k @) 0) ((n i) 1) ((z m!) 0)))	;; oul
("controlmechanisms"	nil	(((k @ n) 0) ((t r o l) 1) ((m e) 1) ((k @) 0) ((n i) 1) ((z m! z) 0)))	;; oul
("controlment"	nil	(((k @ n) 0) ((t r o l) 1) ((m @ n t) 0)))	;; oul
("controls"	nil	(((k @ n) 0) ((t r o l z) 1)))	;; oul
("controverting"	nil	(((k o n )1)((t r @ )0)((v @@r t^ )1)((i ng )0)))	;; ing
("convalescing"	nil	(((k o n )1)((v @ )0)((l e s )1)((i ng )0)))	;; ing
("convecting"	nil	(((k @ n )0)((v e k t )1)((i ng )0)))	;; ing
("convening"	nil	(((k @ n )0)((v ii n )1)((i ng )0)))	;; ing
("conventionalising"	nil	(((k @ n )0)((v e n )1)((sh n! )0)((@ l )0)((ai z )1)((i ng )0)))	;; ing
("conventionalizing"	nil	(((k @ n )0)((v e n )1)((sh n! )0)((@ l )0)((ai z )1)((i ng )0)))	;; ing
("converging"	nil	(((k @ n )0)((v @@r jh )1)((i ng )0)))	;; ing
("conversing"	nil	(((k @ n )0)((v @@r s )1)((i ng )0)))	;; ing
("converting"	nil	(((k @ n )0)((v @@r t^ )1)((i ng )0)))	;; ing
("conveyancing"	nil	(((k @ n )0)((v ei @ n s )1)((i ng )0)))	;; ing
("conveying"	nil	(((k @ n )0)((v ei )1)((i ng )0)))	;; ing
("convicting"	nil	(((k @ n )0)((v i k t )1)((i ng )0)))	;; ing
("convincing"	nil	(((k @ n )0)((v i n s )1)((i ng )0)))	;; ing
("convoking"	nil	(((k @ n )0)((v ou k )1)((i ng )0)))	;; ing
("convolving"	nil	(((k @ n )0)((v o l v )1)((i ng )0)))	;; ing
("convulsing"	nil	(((k @ n )0)((v o l s )1)((i ng )0)))	;; ing
("conways"	nil	(((k o n) 1) ((w ei z) 0)))	;; unique
("cooing"	nil	(((k uu )1)((i ng )0)))	;; ing
("cooking"	nil	(((k u k )1)((i ng )0)))	;; ing
("cool"	nil	(((k u l) 1)))	;; uul
("cool-headed"	nil	(((k u l) 1) ((h e d) 1) ((@ d) 0)))	;; uul
("coolant"	nil	(((k u l) 1) ((@ n t) 0)))	;; uul
("coolants"	nil	(((k u l) 1) ((@ n t s) 0)))	;; uul
("cooled"	nil	(((k u l d) 1)))	;; uul
("cooler"	nil	(((k u l) 1) ((@) 0)))	;; uul
("coolers"	nil	(((k u l) 1) ((@ z) 0)))	;; uul
("coolest"	nil	(((k u l) 1) ((@ s t) 0)))	;; uul
("coolheaded"	nil	(((k u l) 1) ((h e d) 1) ((@ d) 0)))	;; uul
("coolidge"	nil	(((k @) 1) ((l i jh) 0)))	;; uul
("coolidges"	nil	(((k @) 1) ((l i jh) 0) ((@ z) 0)))	;; unique
("coolie"	nil	(((k @) 1) ((l ii) 0)))	;; uul
("coolies"	nil	(((k @) 1) ((l ii z) 0)))	;; uul
("cooling"	nil	(((k u l) 1) ((i ng) 0)))	;; uul
("coolish"	nil	(((k u l) 1) ((i sh) 0)))	;; uul
("coolly"	nil	(((k u l) 1) ((l ii) 0)))	;; uul
("coolness"	nil	(((k u l) 1) ((n @ s) 0)))	;; uul
("coolnesses"	nil	(((k u l) 1) ((n @ s) 0) ((@ z) 0)))	;; uul
("coolnesss"	nil	(((k u l) 1) ((n @ s) 0) ((@ z) 0)))	;; unique
("cools"	nil	(((k u l z) 1)))	;; uul
("cooperating"	nil	(((k ou )0)((o )1)((p @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("coopering"	nil	(((k uu )1)((p @ r )0)((i ng )0)))	;; ing
("cooping"	nil	(((k uu p )1)((i ng )0)))	;; ing
("coordinating"	nil	(((k ou )0)((oo )1)((d i n )0)((ei t^ )1)((i ng )0)))	;; ing
("copiloting"	nil	(((k ou )1)((p ai )1)((l @ t^ )0)((i ng )0)))	;; ing
("coping"	nil	(((k ou p )1)((i ng )0)))	;; ing
("coppering"	nil	(((k o )1)((p @ r )0)((i ng )0)))	;; ing
("coppicing"	nil	(((k o )1)((p @ s )0)((i ng )0)))	;; ing
("copping"	nil	(((k o p )1)((i ng )0)))	;; ing
("copulating"	nil	(((k o )1)((p y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("copy-typing"	nil	(((k o )1)((p iy )0)((t ai p )1)((i ng )0)))	;; ing
("copyhold"	nil	(((k o) 1) ((p ii) 0) ((h o l d) 1)))	;; oul
("copyholder"	nil	(((k o) 1) ((p ii) 0) ((h o l d) 1) ((@) 0)))	;; oul
("copyholders"	nil	(((k o) 1) ((p ii) 0) ((h o l d) 1) ((@ z) 0)))	;; oul
("copyholding"	nil	(((k o) 1) ((p ii) 0) ((h o l d) 1) ((i ng) 0)))	;; oul
("copyholds"	nil	(((k o) 1) ((p ii) 0) ((h o l d z) 1)))	;; oul
("copying"	nil	(((k o )1)((p iy )0)((i ng )0)))	;; ing
("copyrighting"	nil	(((k o )1)((p iy )0)((r ai t^ )1)((i ng )0)))	;; ing
("copys"	nil	(((k o) 1) ((p ii z) 0)))	;; unique
("copywriting"	nil	(((k o )1)((p iy )0)((r ai t^ )1)((i ng )0)))	;; ing
("cording"	nil	(((k oo d )1)((i ng )0)))	;; ing
("cordoning"	nil	(((k oo )1)((d n! )0)((i ng )0)))	;; ing
("coredumping"	nil	(((k oo )1)((d uh m p )1)((i ng )0)))	;; ing
("coring"	nil	(((k oo r )1)((i ng )0)))	;; ing
("corking"	nil	(((k oo k )1)((i ng )0)))	;; ing
("corkscrewing"	nil	(((k oo k )1)((s k r uu )1)((i ng )0)))	;; ing
("cornells"	nil	(((k oo) 0) ((n a l z) 1)))	;; unique
("cornering"	nil	(((k oo )1)((n @ r )0)((i ng )0)))	;; ing
("cornhusking"	nil	(((k oo n )1)((h uh s k )1)((i ng )0)))	;; ing
("corning"	nil	(((k oo n )1)((i ng )0)))	;; ing
("coronating"	nil	(((k o )1)((r @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("corralling"	nil	(((k @ )0)((r aa l )1)((i ng )0)))	;; ing
("correcting"	nil	(((k @ )0)((r e k t )1)((i ng )0)))	;; ing
("correlating"	nil	(((k o )1)((r @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("corresponding"	nil	(((k o )1)((r @ )0)((s p o n d )1)((i ng )0)))	;; ing
("corroborating"	nil	(((k @ )0)((r o )1)((b @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("corroding"	nil	(((k @ )0)((r ou d )1)((i ng )0)))	;; ing
("corrugating"	nil	(((k o )1)((r @ )0)((g ei t^ )1)((i ng )0)))	;; ing
("corrupting"	nil	(((k @ )0)((r uh p t )1)((i ng )0)))	;; ing
("corseting"	nil	(((k oo )1)((s @ t^ )0)((i ng )0)))	;; ing
("corticating"	nil	(((k oo )1)((t^ @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("coruscating"	nil	(((k o )1)((r @ )0)((s k ei t^ )1)((i ng )0)))	;; ing
("coshing"	nil	(((k o sh )1)((i ng )0)))	;; ing
("cosmeticising"	nil	(((k o z )0)((m e )1)((t^ @ s )0)((ai z )1)((i ng )0)))	;; ing
("cosmeticizing"	nil	(((k o z )0)((m e )1)((t^ @ s )0)((ai z )1)((i ng )0)))	;; ing
("cosponsoring"	nil	(((k ou )1)((s p o n )1)((s @ r )0)((i ng )0)))	;; ing
("cosseting"	nil	(((k o )1)((s @ t^ )0)((i ng )0)))	;; ing
("costcutting"	nil	(((k o s t )1)((k uh t^ )1)((i ng )0)))	;; ing
("costing"	nil	(((k o s t )1)((i ng )0)))	;; ing
("costuming"	nil	(((k o )0)((s t y uu m )1)((i ng )0)))	;; ing
("cotswold"	nil	(((k o t s) 1) ((w o l d) 0)))	;; oul
("cotswolds"	nil	(((k o t s) 1) ((w o l d z) 0)))	;; oul
("cotton-wool"	nil	(((k o) 1) ((t n!) 0) ((w u l) 1)))	;; uul
("cotton-wools"	nil	(((k o) 1) ((t n!) 0) ((w u l z) 1)))	;; uul
("couching"	nil	(((k ow ch )1)((i ng )0)))	;; ing
("coughing"	nil	(((k o f )1)((i ng )0)))	;; ing
("could've"	nil	(((k u d) 1) ((@ v) 0)))	;; contraction
("couldn't"	nil	(((k u d) 1) ((n! t) 0)))	;; contraction
("coumadin"	nil	(((k ou) 1) ((m @) 0) ((d i n) 1)))	;; unique
("counseling"	nil	(((k ow n )1)((s l! )0)((i ng )0)))	;; ing
("counselling"	nil	(((k ow n )1)((s l! )0)((i ng )0)))	;; ing
("countenancing"	nil	(((k ow n )1)((t i n )0)((@ n s )0)((i ng )0)))	;; ing
("counter-spying"	nil	(((k ow n )1)((t @ )0)((s p ai )1)((i ng )0)))	;; ing
("counter-weighting"	nil	(((k ow n )1)((t @ )0)((w ei t^ )1)((i ng )0)))	;; ing
("counteracting"	nil	(((k ow n )1)((t @ r )0)((a k t )1)((i ng )0)))	;; ing
("counterattacking"	nil	(((k ow n )1)((t @ r )0)((@ )0)((t a k )1)((i ng )0)))	;; ing
("counterbalancing"	nil	(((k ow n )1)((t @ )0)((b a )1)((l @ n s )0)((i ng )0)))	;; ing
("counterblasting"	nil	(((k ow n )1)((t @ )0)((b l aa s t )1)((i ng )0)))	;; ing
("countercharging"	nil	(((k ow n )1)((t @ )0)((ch aa jh )1)((i ng )0)))	;; ing
("counterchecking"	nil	(((k ow n )1)((t @ )0)((ch e k )1)((i ng )0)))	;; ing
("counterclaiming"	nil	(((k ow n )1)((t @ )0)((k l ei m )1)((i ng )0)))	;; ing
("counterfeiting"	nil	(((k ow n )1)((t @ )0)((f i t^ )1)((i ng )0)))	;; ing
("counterflowing"	nil	(((k ow n )1)((t @ )0)((f l ou )1)((i ng )0)))	;; ing
("countering"	nil	(((k ow n )1)((t @ r )0)((i ng )0)))	;; ing
("countermanding"	nil	(((k ow n )1)((t @ )0)((m aa n d )1)((i ng )0)))	;; ing
("counterplotting"	nil	(((k ow n )1)((t @ )0)((p l o t^ )1)((i ng )0)))	;; ing
("counterpointing"	nil	(((k ow n )1)((t @ )0)((p oi n t )1)((i ng )0)))	;; ing
("counterpoising"	nil	(((k ow n )1)((t @ )0)((p oi z )1)((i ng )0)))	;; ing
("countersigning"	nil	(((k ow n )1)((t @ )0)((s ai n )1)((i ng )0)))	;; ing
("countersinking"	nil	(((k ow n )1)((t @ )0)((s i ng k )1)((i ng )0)))	;; ing
("countervailing"	nil	(((k ow n )1)((t @ )0)((v ei l )1)((i ng )0)))	;; ing
("counting"	nil	(((k ow n t )1)((i ng )0)))	;; ing
("countrifying"	nil	(((k uh n )1)((t r @ )0)((f ai )1)((i ng )0)))	;; ing
("countrymans"	nil	(((k uh n) 1) ((t r ii) 0) ((m @ n z) 0)))	;; unique
("countrymens"	nil	(((k uh n) 1) ((t r ii) 0) ((m @ n z) 0)))	;; unique
("countrys"	nil	(((k uh n) 1) ((t r ii z) 0)))	;; unique
("countys"	nil	(((k ow n) 1) ((t ii z) 0)))	;; unique
("coupling"	nil	(((k uh )1)((p l! )0)((i ng )0)))	;; ing
("coursing"	nil	(((k oo s )1)((i ng )0)))	;; ing
("court-martialling"	nil	(((k oo t )1)((m aa )1)((sh l! )0)((i ng )0)))	;; ing
("courting"	nil	(((k oo t^ )1)((i ng )0)))	;; ing
("covarying"	nil	(((k ou )0)((v ir )1)((r iy )0)((i ng )0)))	;; ing
("covering"	nil	(((k uh )1)((v @ r )0)((i ng )0)))	;; ing
("coveting"	nil	(((k uh )1)((v @ t^ )0)((i ng )0)))	;; ing
("coving"	nil	(((k ou v )1)((i ng )0)))	;; ing
("cowering"	nil	(((k ow @ r )1)((i ng )0)))	;; ing
("cowing"	nil	(((k ow )1)((i ng )0)))	;; ing
("cowling"	nil	(((k ow l )1)((i ng )0)))	;; ing
("cowpers"	nil	(((k uu) 1) ((p @ z) 0)))	;; unique
("cowriting"	nil	(((k ou )1)((r ai t^ )1)((i ng )0)))	;; ing
("coxs"	nil	(((k o k s) 1) ((@ z) 0)))	;; unique
("cozening"	nil	(((k uh )1)((z n! )0)((i ng )0)))	;; ing
("cpus"	nil	(((s ii) 1) ((p ii) 0) ((y uu z) 1)))	;; unique
("cracking"	nil	(((k r a k )1)((i ng )0)))	;; ing
("crackling"	nil	(((k r a k )1)((l i ng )0)))	;; ing
("cradle-snatching"	nil	(((k r ei )1)((d l! )0)((s n a ch )1)((i ng )0)))	;; ing
("cradling"	nil	(((k r ei )1)((d l! )0)((i ng )0)))	;; ing
("crafting"	nil	(((k r aa f t )1)((i ng )0)))	;; ing
("craigs"	nil	(((k r ei g z) 1)))	;; unique
("crammers"	nil	(((k r a m) 1) ((@ z) 0)))	;; unique
("cramming"	nil	(((k r a m )1)((i ng )0)))	;; ing
("cramping"	nil	(((k r a m p )1)((i ng )0)))	;; ing
("cranes-bill"	nil	(((k r ei n z) 1) ((b i l) 0)))	;; unique
("craning"	nil	(((k r ei n )1)((i ng )0)))	;; ing
("cranking"	nil	(((k r a ng k )1)((i ng )0)))	;; ing
("crapping"	nil	(((k r a p )1)((i ng )0)))	;; ing
("crapshooting"	nil	(((k r a p )1)((sh uu t^ )1)((i ng )0)))	;; ing
("crash-diving"	nil	(((k r a sh )1)((d ai v )1)((i ng )0)))	;; ing
("crash-landing"	nil	(((k r a sh )1)((l a n d )1)((i ng )0)))	;; ing
("crashing"	nil	(((k r a sh )1)((i ng )0)))	;; ing
("cratering"	nil	(((k r ei )1)((t^ @ r )0)((i ng )0)))	;; ing
("crating"	nil	(((k r ei t^ )1)((i ng )0)))	;; ing
("craving"	nil	(((k r ei v )1)((i ng )0)))	;; ing
("crawling"	nil	(((k r oo l )1)((i ng )0)))	;; ing
("crayola"	nil	(((k r ei) 0) ((o) 1) ((l @) 0)))	;; oul
("crayoning"	nil	(((k r ei @ n )1)((i ng )0)))	;; ing
("crays"	nil	(((k r ei z) 1)))	;; unique
("crazing"	nil	(((k r ei z )1)((i ng )0)))	;; ing
("creaking"	nil	(((k r ii k )1)((i ng )0)))	;; ing
("creaming"	nil	(((k r ii m )1)((i ng )0)))	;; ing
("crease-resisting"	nil	(((k r ii s )1)((r i )0)((z i s t )1)((i ng )0)))	;; ing
("creasing"	nil	(((k r ii s )1)((i ng )0)))	;; ing
("creating"	nil	(((k r iy )0)((ei t^ )1)((i ng )0)))	;; ing
("crediting"	nil	(((k r e )1)((d @ t^ )0)((i ng )0)))	;; ing
("creeping"	nil	(((k r ii p )1)((i ng )0)))	;; ing
("cremating"	nil	(((k r i )0)((m ei t^ )1)((i ng )0)))	;; ing
("creole"	nil	(((k r ii) 1) ((o l) 0)))	;; oul
("creoles"	nil	(((k r ii) 1) ((o l z) 0)))	;; oul
("cresting"	nil	(((k r e s t )1)((i ng )0)))	;; ing
("crewing"	nil	(((k r uu )1)((i ng )0)))	;; ing
("crib-biting"	nil	(((k r i b )1)((b ai t^ )1)((i ng )0)))	;; ing
("cribbing"	nil	(((k r i b )1)((i ng )0)))	;; ing
("cricketing"	nil	(((k r i )1)((k i t^ )0)((i ng )0)))	;; ing
("crimefighting"	nil	(((k r ai m )1)((f ai t^ )1)((i ng )0)))	;; ing
("criminalising"	nil	(((k r i )1)((m @ )0)((n l! )0)((ai z )1)((i ng )0)))	;; ing
("criminalizing"	nil	(((k r i )1)((m @ )0)((n l! )0)((ai z )1)((i ng )0)))	;; ing
("crimping"	nil	(((k r i m p )1)((i ng )0)))	;; ing
("crimsoning"	nil	(((k r i m )1)((z n! )0)((i ng )0)))	;; ing
("cringing"	nil	(((k r i n jh )1)((i ng )0)))	;; ing
("crinkling"	nil	(((k r i ng )1)((k l! )0)((i ng )0)))	;; ing
("crippling"	nil	(((k r i )1)((p l! )0)((i ng )0)))	;; ing
("crisping"	nil	(((k r i s p )1)((i ng )0)))	;; ing
("crisscrossing"	nil	(((k r i )1)((s k r o s )1)((i ng )0)))	;; ing
("criterions"	nil	(((k r ai) 0) ((t ir) 1) ((r ii @ n z) 0)))	;; unique
("criticising"	nil	(((k r i )1)((t^ i s )0)((ai z )1)((i ng )0)))	;; ing
("criticizing"	nil	(((k r i )1)((t^ i s )0)((ai z )1)((i ng )0)))	;; ing
("critiqueing"	nil	(((k r i )0)((t ii k )1)((i ng )0)))	;; ing
("critiquing"	nil	(((k r i )0)((t ii k )1)((i ng )0)))	;; ing
("croaking"	nil	(((k r ou k )1)((i ng )0)))	;; ing
("crocheting"	nil	(((k r ou )1)((sh ei )0)((i ng )0)))	;; ing
("crofting"	nil	(((k r o f t )1)((i ng )0)))	;; ing
("cromwells"	nil	(((k r o m) 1) ((w a l z) 0)))	;; unique
("crooking"	nil	(((k r u k )1)((i ng )0)))	;; ing
("crooning"	nil	(((k r uu n )1)((i ng )0)))	;; ing
("cropping"	nil	(((k r o p )1)((i ng )0)))	;; ing
("cross-checking"	nil	(((k r o s )1)((ch e k )1)((i ng )0)))	;; ing
("cross-cutting"	nil	(((k r o s )1)((k uh t^ )1)((i ng )0)))	;; ing
("cross-examining"	nil	(((k r o s )1)((@ g )0)((z a )1)((m @ n )0)((i ng )0)))	;; ing
("cross-firing"	nil	(((k r o s )1)((f ai @ r )1)((i ng )0)))	;; ing
("cross-hatching"	nil	(((k r o s )1)((h a ch )1)((i ng )0)))	;; ing
("cross-posting"	nil	(((k r o s )1)((p ou s t )1)((i ng )0)))	;; ing
("cross-questioning"	nil	(((k r o s )1)((k w e s )1)((ch @ n )0)((i ng )0)))	;; ing
("cross-stitching"	nil	(((k r o s )1)((s t i ch )1)((i ng )0)))	;; ing
("crossbreeding"	nil	(((k r o s )1)((b r ii d )1)((i ng )0)))	;; ing
("crosschecking"	nil	(((k r o s )1)((ch e k )1)((i ng )0)))	;; ing
("crosscutting"	nil	(((k r o s )1)((k uh t^ )1)((i ng )0)))	;; ing
("crossexamining"	nil	(((k r o s )1)((@ g )0)((z a )1)((m i n )0)((i ng )0)))	;; ing
("crosshatching"	nil	(((k r o s )1)((h a ch )1)((i ng )0)))	;; ing
("crossing"	nil	(((k r o s )1)((i ng )0)))	;; ing
("crosslinking"	nil	(((k r o s )1)((l i ng k )1)((i ng )0)))	;; ing
("crossposting"	nil	(((k r o s )1)((p ou s t )1)((i ng )0)))	;; ing
("crossreferencing"	nil	(((k r o s )1)((r e )1)((f @ r )0)((@ n s )0)((i ng )0)))	;; ing
("crosstalking"	nil	(((k r o s )1)((t oo k )1)((i ng )0)))	;; ing
("crouching"	nil	(((k r ow ch )1)((i ng )0)))	;; ing
("crowding"	nil	(((k r ow d )1)((i ng )0)))	;; ing
("crowing"	nil	(((k r ou )1)((i ng )0)))	;; ing
("crowleys"	nil	(((k r ou) 1) ((l ii z) 0)))	;; unique
("crowning"	nil	(((k r ow n )1)((i ng )0)))	;; ing
("crows-foot"	nil	(((k r ou z) 1) ((f u t) 0)))	;; unique
("crows-nest"	nil	(((k r ou z) 1) ((n e s t) 0)))	;; unique
("crows-nests"	nil	(((k r ou z) 1) ((n e s t s) 0)))	;; unique
("crucifying"	nil	(((k r uu )1)((s @ )0)((f ai )1)((i ng )0)))	;; ing
("cruel"	nil	(((k r u l) 1)))	;; uul
("cruelest"	nil	(((k r u l) 1) ((@ s t) 0)))	;; uul
("crueller"	nil	(((k r u l) 1) ((@) 0)))	;; uul
("cruellest"	nil	(((k r u l) 1) ((@ s t) 0)))	;; uul
("cruelly"	nil	(((k r u l) 1) ((ii) 0)))	;; uul
("cruelness"	nil	(((k r u l) 1) ((n @ s) 0)))	;; uul
("cruelties"	nil	(((k r u l) 1) ((t ii z) 0)))	;; uul
("cruelty"	nil	(((k r u l) 1) ((t ii) 0)))	;; uul
("crueltys"	nil	(((k r u l) 1) ((t ii z) 0)))	;; unique
("cruising"	nil	(((k r uu z )1)((i ng )0)))	;; ing
("crumbing"	nil	(((k r uh m )1)((i ng )0)))	;; ing
("crumbling"	nil	(((k r uh m )1)((b l! )0)((i ng )0)))	;; ing
("crumpling"	nil	(((k r uh m )1)((p l! )0)((i ng )0)))	;; ing
("crunching"	nil	(((k r uh n ch )1)((i ng )0)))	;; ing
("crusading"	nil	(((k r uw )0)((s ei d )1)((i ng )0)))	;; ing
("crushing"	nil	(((k r uh sh )1)((i ng )0)))	;; ing
("cruzs"	nil	(((k r uu z) 1) ((@ z) 0)))	;; unique
("crying"	nil	(((k r ai )1)((i ng )0)))	;; ing
("crypting"	nil	(((k r i p t )1)((i ng )0)))	;; ing
("crystalizing"	nil	(((k r i )1)((s t l! )0)((ai z )1)((i ng )0)))	;; ing
("crystallising"	nil	(((k r i )1)((s t l! )0)((ai z )1)((i ng )0)))	;; ing
("crystallizing"	nil	(((k r i )1)((s t l! )0)((ai z )1)((i ng )0)))	;; ing
("cs"	nil	(((s ii z) 1)))	;; unique
("cub-hunting"	nil	(((k uh b )1)((h uh n t )1)((i ng )0)))	;; ing
("cubbing"	nil	(((k uh b )1)((i ng )0)))	;; ing
("cubbyhole"	nil	(((k uh) 1) ((b ii) 0) ((h o l) 1)))	;; oul
("cubbyholes"	nil	(((k uh) 1) ((b ii) 0) ((h o l z) 1)))	;; oul
("cubing"	nil	(((k y uu b )1)((i ng )0)))	;; ing
("cuckold"	nil	(((k uh) 1) ((k o l d) 0)))	;; oul
("cuckolded"	nil	(((k uh) 1) ((k o l d) 0) ((@ d) 0)))	;; oul
("cuckolding"	nil	(((k uh) 1) ((k o l d) 0) ((i ng) 0)))	;; oul
("cuckoldise"	nil	(((k uh) 1) ((k o l d) 0) ((ai z) 0)))	;; oul
("cuckoldize"	nil	(((k uh) 1) ((k o l d) 0) ((ai z) 0)))	;; oul
("cuckolds"	nil	(((k uh) 1) ((k o l d z) 0)))	;; oul
("cuckooing"	nil	(((k u )1)((k uw )0)((i ng )0)))	;; ing
("cuddling"	nil	(((k uh )1)((d l! )0)((i ng )0)))	;; ing
("cudgeling"	nil	(((k uh )1)((jh @ l )0)((i ng )0)))	;; ing
("cudgelling"	nil	(((k uh )1)((jh @ l )0)((i ng )0)))	;; ing
("cueing"	nil	(((k y uu )1)((i ng )0)))	;; ing
("cuffing"	nil	(((k uh f )1)((i ng )0)))	;; ing
("culling"	nil	(((k uh l )1)((i ng )0)))	;; ing
("culminating"	nil	(((k o l )1)((m @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("cultivating"	nil	(((k o l )1)((t @ )0)((v ei t^ )1)((i ng )0)))	;; ing
("culturing"	nil	(((k o l )1)((ch @ r )0)((i ng )0)))	;; ing
("cumulating"	nil	(((k y uu )1)((m y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("cunning"	nil	(((k uh )1)((n i ng )0)))	;; ing
("cupping"	nil	(((k uh p )1)((i ng )0)))	;; ing
("curating"	nil	(((k y ur )0)((r ei t^ )1)((i ng )0)))	;; ing
("curbing"	nil	(((k @@r b )1)((i ng )0)))	;; ing
("curdling"	nil	(((k @@r )1)((d l! )0)((i ng )0)))	;; ing
("curfewing"	nil	(((k @@r )1)((f y - uu )0)((i ng )0)))	;; ing
("curing"	nil	(((k y ur r )1)((i ng )0)))	;; ing
("curling"	nil	(((k @@r l )1)((i ng )0)))	;; ing
("currencys"	nil	(((k uh) 1) ((r @ n) 0) ((s ii z) 0)))	;; unique
("currying"	nil	(((k uh )1)((r iy )0)((i ng )0)))	;; ing
("cursing"	nil	(((k @@r s )1)((i ng )0)))	;; ing
("curtailing"	nil	(((k @@r )0)((t ei l )1)((i ng )0)))	;; ing
("curtaining"	nil	(((k @@r )1)((t n! )0)((i ng )0)))	;; ing
("curtseying"	nil	(((k @@r t )1)((s iy )0)((i ng )0)))	;; ing
("curtsying"	nil	(((k @@r t )1)((s iy )0)((i ng )0)))	;; ing
("curving"	nil	(((k @@r v )1)((i ng )0)))	;; ing
("cushing"	nil	(((k u )1)((sh i ng )0)))	;; ing
("cushings"	nil	(((k u) 1) ((sh i ng z) 0)))	;; unique
("cushioning"	nil	(((k u )1)((sh n! )0)((i ng )0)))	;; ing
("cussing"	nil	(((k uh s )1)((i ng )0)))	;; ing
("customising"	nil	(((k uh )1)((s t @ m )0)((ai z )1)((i ng )0)))	;; ing
("customizing"	nil	(((k uh )1)((s t @ m )0)((ai z )1)((i ng )0)))	;; ing
("cut-and-pasting"	nil	(((k uh t )1)((n! )0)((p ei s t )1)((i ng )0)))	;; ing
("cutting"	nil	(((k uh t^ )1)((i ng )0)))	;; ing
("cycling"	nil	(((s ai )1)((k l! )0)((i ng )0)))	;; ing
("cygnuss"	nil	(((s i g) 1) ((n @ s) 0) ((@ z) 0)))	;; unique
("cynthias"	nil	(((s i n) 1) ((th ii @ z) 0)))	;; unique
("cypruss"	nil	(((s ai) 1) ((p r @ s) 0) ((@ z) 0)))	;; unique
("czechoslovakias"	nil	(((ch e) 1) ((k @) 0) ((s l @) 0) ((v a) 1) ((k ii @ z) 0)))	;; unique
("dabbing"	nil	(((d a b )1)((i ng )0)))	;; ing
("dabbling"	nil	(((d a )1)((b l! )0)((i ng )0)))	;; ing
("daddys"	nil	(((d a d) 1) ((ii z) 0)))	;; unique
("daffaires"	nil	(((d a) 0) ((f ir) 1)))	;; unique
("dairying"	nil	(((d ir )1)((r iy )0)((i ng )0)))	;; ing
("dairymans"	nil	(((d ir) 1) ((r ii) 0) ((m @ n z) 0)))	;; unique
("dairys"	nil	(((d ir) 1) ((r ii z) 0)))	;; unique
("daisys"	nil	(((d ei) 1) ((z ii z) 0)))	;; unique
("dallying"	nil	(((d a )1)((l iy )0)((i ng )0)))	;; ing
("damaging"	nil	(((d a )1)((m @ jh )0)((i ng )0)))	;; ing
("damming"	nil	(((d a m )1)((i ng )0)))	;; ing
("damning"	nil	(((d a m )1)((i ng )0)))	;; ing
("damp-proofing"	nil	(((d a m p )1)((p r uu f )1)((i ng )0)))	;; ing
("dampening"	nil	(((d a m p )1)((@ n )0)((i ng )0)))	;; ing
("damping"	nil	(((d a m p )1)((i ng )0)))	;; ing
("dancing"	nil	(((d aa n s )1)((i ng )0)))	;; ing
("dandifying"	nil	(((d a n )1)((d @ )0)((f ai )1)((i ng )0)))	;; ing
("dandling"	nil	(((d a n )1)((d l! )0)((i ng )0)))	;; ing
("dangling"	nil	(((d a ng )1)((g l! )0)((i ng )0)))	;; ing
("dannys"	nil	(((d a) 1) ((n ii z) 0)))	;; unique
("daphnes"	nil	(((d a f) 1) ((n ii z) 0)))	;; unique
("dappling"	nil	(((d a )1)((p l! )0)((i ng )0)))	;; ing
("dappui"	nil	(((d a) 0) ((p w ii) 1)))	;; unique
("darent"	nil	(((d ir n t) 1)))	;; unique
("daring"	nil	(((d ir r )1)((i ng )0)))	;; ing
("darkening"	nil	(((d aa k )1)((@ n )0)((i ng )0)))	;; ing
("darkling"	nil	(((d aa k )1)((l i ng )0)))	;; ing
("darks"	nil	(((d aa k s) 1)))	;; unique
("darling"	nil	(((d aa )1)((l i ng )0)))	;; ing
("darmes"	nil	(((d aa m) 1)))	;; unique
("darning"	nil	(((d aa n )1)((i ng )0)))	;; ing
("darting"	nil	(((d aa t^ )1)((i ng )0)))	;; ing
("dartmouths"	nil	(((d aa t) 1) ((m @ th s) 0)))	;; unique
("darwins"	nil	(((d aa) 1) ((w i n z) 0)))	;; unique
("dashing"	nil	(((d a sh )1)((i ng )0)))	;; ing
("date-stamping"	nil	(((d ei t )1)((s t a m p )1)((i ng )0)))	;; ing
("dating"	nil	(((d ei t^ )1)((i ng )0)))	;; ing
("daubing"	nil	(((d oo b )1)((i ng )0)))	;; ing
("daunting"	nil	(((d oo n t )1)((i ng )0)))	;; ing
("daviss"	nil	(((d ei) 1) ((v i s) 0) ((@ z) 0)))	;; unique
("dawdling"	nil	(((d oo )1)((d l! )0)((i ng )0)))	;; ing
("dawning"	nil	(((d oo n )1)((i ng )0)))	;; ing
("day-dreaming"	nil	(((d ei )1)((d r ii m )1)((i ng )0)))	;; ing
("daydreaming"	nil	(((d ei )1)((d r ii m )1)((i ng )0)))	;; ing
("daylighting"	nil	(((d ei )1)((l ai t^ )1)((i ng )0)))	;; ing
("daytonas"	nil	(((d ei) 0) ((t ou) 1) ((n @ z) 0)))	;; unique
("dazzling"	nil	(((d a )1)((z l! )0)((i ng )0)))	;; ing
("de-escalating"	nil	(((d - ii )0)((e )1)((s k @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("deactivating"	nil	(((d - ii )0)((a k t )1)((@ v )0)((ei t^ )1)((i ng )0)))	;; ing
("deadbolt"	nil	(((d e d) 1) ((b o l t) 0)))	;; oul
("deadbolted"	nil	(((d e d) 1) ((b o l t) 1) ((@ d) 0)))	;; oul
("deadbolting"	nil	(((d e d) 1) ((b o l t) 1) ((i ng) 0)))	;; oul
("deadbolts"	nil	(((d e d) 1) ((b o l t s) 0)))	;; oul
("deadening"	nil	(((d e d )1)((n! )0)((i ng )0)))	;; ing
("deadheading"	nil	(((d e d )1)((h e d )1)((i ng )0)))	;; ing
("deadlocking"	nil	(((d e d )1)((l o k )1)((i ng )0)))	;; ing
("deafening"	nil	(((d e f )1)((n! )0)((i ng )0)))	;; ing
("dealing"	nil	(((d ii l )1)((i ng )0)))	;; ing
("deallocating"	nil	(((d - ii )0)((a )1)((l @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("dearing"	nil	(((d ir )1)((r i ng )0)))	;; ing
("deaspirating"	nil	(((d - ii )0)((a )1)((s p @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("deau"	nil	(((d ou) 1)))	;; unique
("debagging"	nil	(((d - ii )0)((b a g )1)((i ng )0)))	;; ing
("debarking"	nil	(((d - ii )0)((b aa k )1)((i ng )0)))	;; ing
("debarring"	nil	(((d i )0)((b aa r )1)((i ng )0)))	;; ing
("debasing"	nil	(((d i )0)((b ei s )1)((i ng )0)))	;; ing
("debating"	nil	(((d i )0)((b ei t^ )1)((i ng )0)))	;; ing
("debauching"	nil	(((d i )0)((b oo ch )1)((i ng )0)))	;; ing
("debilitating"	nil	(((d i )0)((b i )1)((l i )0)((t ei t^ )1)((i ng )0)))	;; ing
("debiting"	nil	(((d e )1)((b @ t^ )0)((i ng )0)))	;; ing
("deblocking"	nil	(((d - ii )0)((b l o k )1)((i ng )0)))	;; ing
("deblurring"	nil	(((d - ii )0)((b l @@r r )1)((i ng )0)))	;; ing
("debolt"	nil	(((d ii) 0) ((b o l t) 1)))	;; oul
("debolts"	nil	(((d ii) 0) ((b o l t s) 1)))	;; oul
("deboning"	nil	(((d - ii )0)((b ou n )1)((i ng )0)))	;; ing
("debriefing"	nil	(((d - ii )0)((b r ii f )1)((i ng )0)))	;; ing
("debugging"	nil	(((d - ii )0)((b uh g )1)((i ng )0)))	;; ing
("debunking"	nil	(((d - ii )0)((b uh ng k )1)((i ng )0)))	;; ing
("debuting"	nil	(((d ei )1)((b y uw )0)((i ng )0)))	;; ing
("decaffeinating"	nil	(((d - ii )0)((k a )1)((f i n )0)((ei t^ )1)((i ng )0)))	;; ing
("decalcifying"	nil	(((d - ii )0)((k a l )1)((s @ )0)((f ai )1)((i ng )0)))	;; ing
("decamping"	nil	(((d i )0)((k a m p )1)((i ng )0)))	;; ing
("decanting"	nil	(((d i )0)((k a n t )1)((i ng )0)))	;; ing
("decapitalising"	nil	(((d - ii )0)((k a )1)((p @ )0)((t l! )0)((ai z )1)((i ng )0)))	;; ing
("decapitalizing"	nil	(((d - ii )0)((k a )1)((p @ )0)((t l! )0)((ai z )1)((i ng )0)))	;; ing
("decapitating"	nil	(((d i )0)((k a )1)((p i )0)((t ei t^ )1)((i ng )0)))	;; ing
("decaying"	nil	(((d i )0)((k ei )1)((i ng )0)))	;; ing
("deceaseds"	nil	(((d i) 0) ((s ii s t s) 1)))	;; unique
("deceiving"	nil	(((d i )0)((s ii v )1)((i ng )0)))	;; ing
("decelerating"	nil	(((d ii )0)((s a )1)((l @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("decentering"	nil	(((d - ii )0)((s e n )1)((t @ r )0)((i ng )0)))	;; ing
("decentralising"	nil	(((d - ii )0)((s e n )1)((t r @ l )0)((ai z )1)((i ng )0)))	;; ing
("decentralizing"	nil	(((d - ii )0)((s e n )1)((t r @ l )0)((ai z )1)((i ng )0)))	;; ing
("decertifying"	nil	(((d - ii )0)((s @@r )1)((t^ @ )0)((f ai )1)((i ng )0)))	;; ing
("deciding"	nil	(((d i )0)((s ai d )1)((i ng )0)))	;; ing
("decimalising"	nil	(((d e )1)((s @ )0)((m l! )0)((ai z )1)((i ng )0)))	;; ing
("decimalizing"	nil	(((d e )1)((s @ )0)((m l! )0)((ai z )1)((i ng )0)))	;; ing
("decimating"	nil	(((d e )1)((s @ )0)((m ei t^ )1)((i ng )0)))	;; ing
("deciphering"	nil	(((d i )0)((s ai )1)((f @ r )0)((i ng )0)))	;; ing
("decision-making"	nil	(((d i )0)((s i )1)((zh n! )0)((m ei k )1)((i ng )0)))	;; ing
("decivilizing"	nil	(((d - ii )0)((s i )1)((v l! )0)((ai z )1)((i ng )0)))	;; ing
("decking"	nil	(((d e k )1)((i ng )0)))	;; ing
("declaiming"	nil	(((d i )0)((k l ei m )1)((i ng )0)))	;; ing
("declaring"	nil	(((d i )0)((k l ir r )1)((i ng )0)))	;; ing
("declassifying"	nil	(((d - ii )0)((k l a s )1)((@ )0)((f ai )1)((i ng )0)))	;; ing
("declining"	nil	(((d i )0)((k l ai n )1)((i ng )0)))	;; ing
("declustering"	nil	(((d - ii )0)((k l uh )1)((s t @ r )0)((i ng )0)))	;; ing
("declutching"	nil	(((d - ii )0)((k l uh ch )1)((i ng )0)))	;; ing
("decocting"	nil	(((d i )0)((k o k t )1)((i ng )0)))	;; ing
("decoding"	nil	(((d - ii )0)((k ou d )1)((i ng )0)))	;; ing
("decolonizing"	nil	(((d - ii )0)((k o )1)((l @ )0)((n ai z )1)((i ng )0)))	;; ing
("decommissioning"	nil	(((d ii )1)((k @ )0)((m i )1)((sh n! )0)((i ng )0)))	;; ing
("decompiling"	nil	(((d ii )1)((k @ m )0)((p ai l )1)((i ng )0)))	;; ing
("decomposing"	nil	(((d ii )1)((k @ m )0)((p ou z )1)((i ng )0)))	;; ing
("decompressing"	nil	(((d ii )1)((k @ m )0)((p r e s )1)((i ng )0)))	;; ing
("deconditioning"	nil	(((d ii )1)((k @ n )0)((d i )1)((sh n! )0)((i ng )0)))	;; ing
("decongesting"	nil	(((d ii )1)((k @ n )0)((jh e s t )1)((i ng )0)))	;; ing
("deconstructing"	nil	(((d ii )1)((k @ n )0)((s t r uh k t )1)((i ng )0)))	;; ing
("decontaminating"	nil	(((d ii )1)((k @ n )0)((t a )1)((m @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("decontrol"	nil	(((d ii) 1) ((k @ n) 0) ((t r o l) 1)))	;; oul
("decontrolled"	nil	(((d ii) 1) ((k @ n) 0) ((t r o l d) 1)))	;; oul
("decontrolling"	nil	(((d ii) 1) ((k @ ng) 0) ((t r o l) 1) ((i ng) 0)))	;; oul
("decorating"	nil	(((d e )1)((k @ r )0)((ei t^ )1)((i ng )0)))	;; ing
("decorticating"	nil	(((d - ii )0)((k oo )1)((t^ @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("decoupling"	nil	(((d - ii )0)((k uh )1)((p l! )0)((i ng )0)))	;; ing
("decoying"	nil	(((d i )0)((k oi )1)((i ng )0)))	;; ing
("decreasing"	nil	(((d i )0)((k r ii s )1)((i ng )0)))	;; ing
("decreeing"	nil	(((d i )0)((k r ii )1)((i ng )0)))	;; ing
("decrementing"	nil	(((d e )1)((k r @ )0)((m e n t )1)((i ng )0)))	;; ing
("decriminalizing"	nil	(((d - ii )0)((k r i )1)((m @ )0)((n l! )0)((ai z )1)((i ng )0)))	;; ing
("decrying"	nil	(((d i )0)((k r ai )1)((i ng )0)))	;; ing
("decrypting"	nil	(((d - ii )0)((k r i p t )1)((i ng )0)))	;; ing
("dedicating"	nil	(((d e )1)((d @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("deducing"	nil	(((d i )0)((d y uu s )1)((i ng )0)))	;; ing
("deducting"	nil	(((d i )0)((d uh k t )1)((i ng )0)))	;; ing
("deeming"	nil	(((d ii m )1)((i ng )0)))	;; ing
("deemphasising"	nil	(((d - ii )0)((e m )1)((f @ )0)((s ai z )1)((i ng )0)))	;; ing
("deepening"	nil	(((d ii p )1)((@ n )0)((i ng )0)))	;; ing
("deering"	nil	(((d ir )1)((r i ng )0)))	;; ing
("deers"	nil	(((d ii @ z) 1)))	;; unique
("deerstalking"	nil	(((d ii @ )1)((s t oo k )1)((i ng )0)))	;; ing
("defacing"	nil	(((d i )0)((f ei s )1)((i ng )0)))	;; ing
("defaming"	nil	(((d i )0)((f ei m )1)((i ng )0)))	;; ing
("defaulting"	nil	(((d i )0)((f oo l t )1)((i ng )0)))	;; ing
("defeating"	nil	(((d i )0)((f ii t^ )1)((i ng )0)))	;; ing
("defecating"	nil	(((d e )1)((f @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("defecting"	nil	(((d i )0)((f e k t )1)((i ng )0)))	;; ing
("defending"	nil	(((d i )0)((f e n d )1)((i ng )0)))	;; ing
("deferring"	nil	(((d i )0)((f @@r r )1)((i ng )0)))	;; ing
("defiling"	nil	(((d i )0)((f ai l )1)((i ng )0)))	;; ing
("defining"	nil	(((d i )0)((f ai n )1)((i ng )0)))	;; ing
("deflating"	nil	(((d i )0)((f l ei t^ )1)((i ng )0)))	;; ing
("deflecting"	nil	(((d i )0)((f l e k t )1)((i ng )0)))	;; ing
("deflowering"	nil	(((d - ii )0)((f l ow @ r )1)((i ng )0)))	;; ing
("defoliant"	nil	(((d i) 0) ((f o) 1) ((l ii @ n t) 0)))	;; oul
("defoliate"	nil	(((d i) 0) ((f o) 1) ((l ii) 0) ((ei t) 0)))	;; oul
("defoliated"	nil	(((d i) 0) ((f o) 1) ((l ii) 0) ((ei t^) 1) ((@ d) 0)))	;; oul
("defoliates"	nil	(((d i) 0) ((f o) 1) ((l ii) 0) ((ei t s) 0)))	;; oul
("defoliation"	nil	(((d i) 0) ((f o) 1) ((l ii) 0) ((ei) 1) ((sh n!) 0)))	;; oul
("defoliator"	nil	(((d i) 0) ((f o) 1) ((l ii) 0) ((ei t^) 1) ((@) 0)))	;; oul
("defoliators"	nil	(((d i) 0) ((f o) 1) ((l ii) 0) ((ei t^) 1) ((@ z) 0)))	;; oul
("deforesting"	nil	(((d - ii )0)((f o )1)((r @ s t )0)((i ng )0)))	;; ing
("deforming"	nil	(((d i )0)((f oo m )1)((i ng )0)))	;; ing
("defragmenting"	nil	(((d ii )1)((f r a g )0)((m e n t )1)((i ng )0)))	;; ing
("defrauding"	nil	(((d i )0)((f r oo d )1)((i ng )0)))	;; ing
("defraying"	nil	(((d i )0)((f r ei )1)((i ng )0)))	;; ing
("defreezing"	nil	(((d - ii )0)((f r ii z )1)((i ng )0)))	;; ing
("defrocking"	nil	(((d - ii )0)((f r o k )1)((i ng )0)))	;; ing
("defusing"	nil	(((d i )0)((f y uu z )1)((i ng )0)))	;; ing
("defuzzing"	nil	(((d - ii )0)((f uh z )1)((i ng )0)))	;; ing
("defying"	nil	(((d i )0)((f ai )1)((i ng )0)))	;; ing
("degassing"	nil	(((d - ii )0)((g a s )1)((i ng )0)))	;; ing
("degenerating"	nil	(((d i )0)((jh e )1)((n @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("degrading"	nil	(((d i )0)((g r ei d )1)((i ng )0)))	;; ing
("degreasing"	nil	(((d - ii )0)((g r ii s )1)((i ng )0)))	;; ing
("degumming"	nil	(((d - ii )0)((g uh m )1)((i ng )0)))	;; ing
("dehumanizing"	nil	(((d - ii )0)((h y uu )1)((m @ n )0)((ai z )1)((i ng )0)))	;; ing
("dehumidifying"	nil	(((d ii )1)((h y uw )0)((m i d )1)((@ )0)((f ai )1)((i ng )0)))	;; ing
("dehydrating"	nil	(((d ii )1)((h ai )0)((d r ei t^ )1)((i ng )0)))	;; ing
("deifying"	nil	(((d ei )1)((i )0)((f ai )1)((i ng )0)))	;; ing
("deigning"	nil	(((d ei n )1)((i ng )0)))	;; ing
("delaneys"	nil	(((d @) 0) ((l ei) 1) ((n ii z) 0)))	;; unique
("delawares"	nil	(((d a) 1) ((l @) 0) ((w ir z) 1)))	;; unique
("delaying"	nil	(((d i )0)((l ei )1)((i ng )0)))	;; ing
("delegating"	nil	(((d a )1)((l @ )0)((g ei t^ )1)((i ng )0)))	;; ing
("deleting"	nil	(((d i )0)((l ii t^ )1)((i ng )0)))	;; ing
("deliberating"	nil	(((d i )0)((l i )1)((b @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("delighting"	nil	(((d i )0)((l ai t^ )1)((i ng )0)))	;; ing
("delimitating"	nil	(((d i )0)((l i )1)((m i t )0)((ei t^ )1)((i ng )0)))	;; ing
("delimiting"	nil	(((d ii )0)((l i )1)((m @ t^ )0)((i ng )0)))	;; ing
("delineating"	nil	(((d i )0)((l i )1)((n iy )0)((ei t^ )1)((i ng )0)))	;; ing
("delinking"	nil	(((d - ii )0)((l i ng k )1)((i ng )0)))	;; ing
("delivering"	nil	(((d i )0)((l i )1)((v @ r )0)((i ng )0)))	;; ing
("delousing"	nil	(((d - ii )0)((l ow s )1)((i ng )0)))	;; ing
("delphis"	nil	(((d a l) 1) ((f ai z) 0)))	;; unique
("deluding"	nil	(((d i )0)((l uu d )1)((i ng )0)))	;; ing
("deluging"	nil	(((d a )1)((l y uw jh )0)((i ng )0)))	;; ing
("delving"	nil	(((d a l v )1)((i ng )0)))	;; ing
("demagnetising"	nil	(((d - ii )0)((m a g )1)((n @ t )0)((ai z )1)((i ng )0)))	;; ing
("demagnetizing"	nil	(((d - ii )0)((m a g )1)((n @ t )0)((ai z )1)((i ng )0)))	;; ing
("demagnifying"	nil	(((d - ii )0)((m a g )1)((n @ )0)((f ai )1)((i ng )0)))	;; ing
("demanding"	nil	(((d i )0)((m aa n d )1)((i ng )0)))	;; ing
("demangling"	nil	(((d - ii )0)((m a ng )1)((g l! )0)((i ng )0)))	;; ing
("demarcating"	nil	(((d ii )1)((m aa )0)((k ei t^ )1)((i ng )0)))	;; ing
("dematerializing"	nil	(((d ii )1)((m @ )0)((t ir )1)((r iy @ l )0)((ai z )1)((i ng )0)))	;; ing
("demeaning"	nil	(((d i )0)((m ii n )1)((i ng )0)))	;; ing
("dementing"	nil	(((d i )0)((m e n t )1)((i ng )0)))	;; ing
("demilitarizing"	nil	(((d - ii )0)((m i )1)((l i )0)((t^ @ )0)((r ai z )1)((i ng )0)))	;; ing
("demisting"	nil	(((d - ii )0)((m i s t )1)((i ng )0)))	;; ing
("demitting"	nil	(((d i )0)((m i t^ )1)((i ng )0)))	;; ing
("demobbing"	nil	(((d ii )0)((m o b )1)((i ng )0)))	;; ing
("demobilizing"	nil	(((d - ii )0)((m ou )1)((b i l )0)((ai z )1)((i ng )0)))	;; ing
("democracys"	nil	(((d i) 0) ((m o) 1) ((k r @) 0) ((s ii z) 0)))	;; unique
("democratizing"	nil	(((d i )0)((m o )1)((k r @ t )0)((ai z )1)((i ng )0)))	;; ing
("demodulating"	nil	(((d - ii )0)((m o )1)((jh @ l )0)((ei t^ )1)((i ng )0)))	;; ing
("demoing"	nil	(((d e )1)((m ou )0)((i ng )0)))	;; ing
("demolishing"	nil	(((d i )0)((m o )1)((l i sh )0)((i ng )0)))	;; ing
("demonising"	nil	(((d ii )1)((m @ n )0)((ai z )1)((i ng )0)))	;; ing
("demonizing"	nil	(((d ii )1)((m @ n )0)((ai z )1)((i ng )0)))	;; ing
("demonopolizing"	nil	(((d ii )1)((m @ )0)((n o )1)((p @ )0)((l ai z )1)((i ng )0)))	;; ing
("demonstrating"	nil	(((d e )1)((m @ n )0)((s t r ei t^ )1)((i ng )0)))	;; ing
("demoralising"	nil	(((d i )0)((m o )1)((r @ )0)((l ai z )1)((i ng )0)))	;; ing
("demoralizing"	nil	(((d i )0)((m o )1)((r @ )0)((l ai z )1)((i ng )0)))	;; ing
("demoting"	nil	(((d i )0)((m ou t^ )1)((i ng )0)))	;; ing
("demotivating"	nil	(((d - ii )0)((m ou )1)((t^ @ v )0)((ei t^ )1)((i ng )0)))	;; ing
("demultiplexing"	nil	(((d - ii )0)((m o l )1)((t iy )0)((p l e k s )1)((i ng )0)))	;; ing
("demurring"	nil	(((d i )0)((m @@r r )1)((i ng )0)))	;; ing
("demystifying"	nil	(((d - ii )0)((m i )1)((s t @ )0)((f ai )1)((i ng )0)))	;; ing
("denationalizing"	nil	(((d - ii )0)((n a sh )1)((n l! )0)((ai z )1)((i ng )0)))	;; ing
("denes"	nil	(((d ii n z) 1)))	;; unique
("dengs"	nil	(((d e ng z) 1)))	;; unique
("denigrating"	nil	(((d e )1)((n @ )0)((g r ei t^ )1)((i ng )0)))	;; ing
("denmarks"	nil	(((d e n) 1) ((m aa k s) 0)))	;; unique
("denning"	nil	(((d e )1)((n i ng )0)))	;; ing
("denominating"	nil	(((d i )0)((n o )1)((m i )0)((n ei t^ )1)((i ng )0)))	;; ing
("denoting"	nil	(((d i )0)((n ou t^ )1)((i ng )0)))	;; ing
("denouncing"	nil	(((d i )0)((n ow n s )1)((i ng )0)))	;; ing
("denting"	nil	(((d e n t )1)((i ng )0)))	;; ing
("denuclearizing"	nil	(((d - ii )0)((n y uu )1)((k l iy @ r )0)((ai z )1)((i ng )0)))	;; ing
("denuding"	nil	(((d i )0)((n y uu d )1)((i ng )0)))	;; ing
("denvers"	nil	(((d e n) 1) ((v @ z) 0)))	;; unique
("denying"	nil	(((d i )0)((n ai )1)((i ng )0)))	;; ing
("deodorising"	nil	(((d - ii )0)((ou )1)((d @ r )0)((ai z )1)((i ng )0)))	;; ing
("deodorizing"	nil	(((d - ii )0)((ou )1)((d @ r )0)((ai z )1)((i ng )0)))	;; ing
("deorbiting"	nil	(((d - ii )0)((oo )1)((b @ t^ )0)((i ng )0)))	;; ing
("deoxygenating"	nil	(((d - ii )0)((o k )1)((s i )0)((jh @ n )0)((ei t^ )1)((i ng )0)))	;; ing
("departing"	nil	(((d i )0)((p aa t^ )1)((i ng )0)))	;; ing
("departmentalising"	nil	(((d ii )1)((p aa t )0)((m e n t )1)((l! )0)((ai z )1)((i ng )0)))	;; ing
("departmentalizing"	nil	(((d ii )1)((p aa t )0)((m e n t )1)((l! )0)((ai z )1)((i ng )0)))	;; ing
("depending"	nil	(((d i )0)((p e n d )1)((i ng )0)))	;; ing
("depicting"	nil	(((d i )0)((p i k t )1)((i ng )0)))	;; ing
("deplaning"	nil	(((d - ii )0)((p l ei n )1)((i ng )0)))	;; ing
("depleting"	nil	(((d i )0)((p l ii t^ )1)((i ng )0)))	;; ing
("deploring"	nil	(((d i )0)((p l oo r )1)((i ng )0)))	;; ing
("deploying"	nil	(((d i )0)((p l oi )1)((i ng )0)))	;; ing
("depolarisation"	nil	(((d ii) 1) ((p o l) 0) ((@ r) 0) ((i z) 0) ((ei) 1) ((sh n!) 0)))	;; oul
("depolarisations"	nil	(((d ii) 1) ((p o l) 0) ((@ r) 0) ((i z) 0) ((ei) 1) ((sh n! z) 0)))	;; oul
("depolarise"	nil	(((d ii) 0) ((p o l) 1) ((@ r) 0) ((ai z) 0)))	;; oul
("depolariser"	nil	(((d ii) 0) ((p o l) 1) ((@ r) 0) ((ai z) 1) ((@) 0)))	;; oul
("depolarisers"	nil	(((d ii) 0) ((p o l) 1) ((@ r) 0) ((ai z) 1) ((@ z) 0)))	;; oul
("depolarises"	nil	(((d ii) 0) ((p o l) 1) ((@ r) 0) ((ai z) 1) ((@ z) 0)))	;; oul
("depolarization"	nil	(((d ii) 1) ((p o l) 0) ((@ r) 0) ((i z) 0) ((ei) 1) ((sh n!) 0)))	;; oul
("depolarizations"	nil	(((d ii) 1) ((p o l) 0) ((@ r) 0) ((i z) 0) ((ei) 1) ((sh n! z) 0)))	;; oul
("depolarize"	nil	(((d ii) 0) ((p o l) 1) ((@ r) 0) ((ai z) 0)))	;; oul
("depolarized"	nil	(((d ii) 0) ((p o l) 1) ((@ r) 0) ((ai z d) 0)))	;; oul
("depolarizer"	nil	(((d ii) 0) ((p o l) 1) ((@ r) 0) ((ai z) 1) ((@) 0)))	;; oul
("depolarizers"	nil	(((d ii) 0) ((p o l) 1) ((@ r) 0) ((ai z) 1) ((@ z) 0)))	;; oul
("depolarizes"	nil	(((d ii) 0) ((p o l) 1) ((@ r) 0) ((ai z) 1) ((@ z) 0)))	;; oul
("depoliticizing"	nil	(((d ii )1)((p @ )0)((l i )1)((t^ i s )0)((ai z )1)((i ng )0)))	;; ing
("depopulating"	nil	(((d - ii )0)((p o )1)((p y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("deporting"	nil	(((d i )0)((p oo t^ )1)((i ng )0)))	;; ing
("deposing"	nil	(((d i )0)((p ou z )1)((i ng )0)))	;; ing
("depositing"	nil	(((d i )0)((p o )1)((z i t^ )0)((i ng )0)))	;; ing
("depraving"	nil	(((d i )0)((p r ei v )1)((i ng )0)))	;; ing
("deprecating"	nil	(((d e )1)((p r @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("depreciating"	nil	(((d i )0)((p r ii )1)((sh iy )0)((ei t^ )1)((i ng )0)))	;; ing
("depressing"	nil	(((d i )0)((p r e s )1)((i ng )0)))	;; ing
("depressurizing"	nil	(((d - ii )0)((p r e )1)((sh r )0)((ai z )1)((i ng )0)))	;; ing
("depriving"	nil	(((d i )0)((p r ai v )1)((i ng )0)))	;; ing
("deprogramming"	nil	(((d - ii )0)((p r ou )1)((g r a m )0)((i ng )0)))	;; ing
("deputing"	nil	(((d i )0)((p y uu t^ )1)((i ng )0)))	;; ing
("deputizing"	nil	(((d e )1)((p y uw t )0)((ai z )1)((i ng )0)))	;; ing
("derailing"	nil	(((d - ii )0)((r ei l )1)((i ng )0)))	;; ing
("derecognising"	nil	(((d - ii )0)((r e )1)((k @ g )0)((n ai z )1)((i ng )0)))	;; ing
("derecognizing"	nil	(((d - ii )0)((r e )1)((k @ g )0)((n ai z )1)((i ng )0)))	;; ing
("dereferencing"	nil	(((d - ii )0)((r e )1)((f @ r )0)((@ n s )0)((i ng )0)))	;; ing
("deregistering"	nil	(((d - ii )0)((r e )1)((jh i )0)((s t @ r )0)((i ng )0)))	;; ing
("deregulating"	nil	(((d - ii )0)((r e )1)((g y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("derestricting"	nil	(((d ii )1)((r i )0)((s t r i k t )1)((i ng )0)))	;; ing
("deriding"	nil	(((d i )0)((r ai d )1)((i ng )0)))	;; ing
("deriveting"	nil	(((d - ii )0)((r i )1)((v @ t^ )0)((i ng )0)))	;; ing
("deriving"	nil	(((d i )0)((r ai v )1)((i ng )0)))	;; ing
("desalting"	nil	(((d - ii )0)((s oo l t )1)((i ng )0)))	;; ing
("descaling"	nil	(((d - ii )0)((s k ei l )1)((i ng )0)))	;; ing
("descending"	nil	(((d i )0)((s e n d )1)((i ng )0)))	;; ing
("descheduling"	nil	(((d - ii )0)((sh e )1)((jh @ l )0)((i ng )0)))	;; ing
("descrambling"	nil	(((d - ii )0)((s k r a m )1)((b l! )0)((i ng )0)))	;; ing
("describing"	nil	(((d i )0)((s k r ai b )1)((i ng )0)))	;; ing
("descrying"	nil	(((d i )0)((s k r ai )1)((i ng )0)))	;; ing
("desecrating"	nil	(((d e )1)((s @ )0)((k r ei t^ )1)((i ng )0)))	;; ing
("desegregating"	nil	(((d - ii )0)((s e )1)((g r @ )0)((g ei t^ )1)((i ng )0)))	;; ing
("deselecting"	nil	(((d ii )1)((s @ )0)((l e k t )1)((i ng )0)))	;; ing
("desensitizing"	nil	(((d - ii )0)((s e n )1)((s @ )0)((t ai z )1)((i ng )0)))	;; ing
("deserting"	nil	(((d i )0)((z @@r t^ )1)((i ng )0)))	;; ing
("deserving"	nil	(((d i )0)((z @@r v )1)((i ng )0)))	;; ing
("desexing"	nil	(((d - ii )0)((s e k s )1)((i ng )0)))	;; ing
("desiccating"	nil	(((d e )1)((s @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("designating"	nil	(((d e )1)((z i g )0)((n ei t^ )1)((i ng )0)))	;; ing
("designing"	nil	(((d i )0)((z ai n )1)((i ng )0)))	;; ing
("desilting"	nil	(((d - ii )0)((s i l t )1)((i ng )0)))	;; ing
("desiring"	nil	(((d i )0)((z ai @ r )1)((i ng )0)))	;; ing
("desisting"	nil	(((d i )0)((z i s t )1)((i ng )0)))	;; ing
("deskilling"	nil	(((d - ii )0)((s k i l )1)((i ng )0)))	;; ing
("desolating"	nil	(((d e )1)((s @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("despairing"	nil	(((d i )0)((s p ir r )1)((i ng )0)))	;; ing
("despatching"	nil	(((d i )0)((s p a ch )1)((i ng )0)))	;; ing
("despising"	nil	(((d i )0)((s p ai z )1)((i ng )0)))	;; ing
("despoiling"	nil	(((d i )0)((s p oi l )1)((i ng )0)))	;; ing
("despoliation"	nil	(((d i) 0) ((s p o l) 1) ((ii) 0) ((ei) 1) ((sh n!) 0)))	;; oul
("desponding"	nil	(((d i )0)((s p o n d )1)((i ng )0)))	;; ing
("desprit"	nil	(((d e) 0) ((s p r ii) 1)))	;; unique
("destabilising"	nil	(((d - ii )0)((s t ei )1)((b l! )0)((ai z )1)((i ng )0)))	;; ing
("destabilizing"	nil	(((d - ii )0)((s t ei )1)((b l! )0)((ai z )1)((i ng )0)))	;; ing
("destocking"	nil	(((d - ii )0)((s t o k )1)((i ng )0)))	;; ing
("destroying"	nil	(((d i )0)((s t r oi )1)((i ng )0)))	;; ing
("detaching"	nil	(((d i )0)((t a ch )1)((i ng )0)))	;; ing
("detailing"	nil	(((d ii )1)((t^ ei l )0)((i ng )0)))	;; ing
("detaining"	nil	(((d i )0)((t ei n )1)((i ng )0)))	;; ing
("detat"	nil	(((d ei) 0) ((t aa) 1)))	;; unique
("detecting"	nil	(((d i )0)((t e k t )1)((i ng )0)))	;; ing
("deteriorating"	nil	(((d i )0)((t ir )1)((r iy @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("determining"	nil	(((d i )0)((t @@r )1)((m i n )0)((i ng )0)))	;; ing
("deterring"	nil	(((d i )0)((t @@r r )1)((i ng )0)))	;; ing
("detesting"	nil	(((d i )0)((t e s t )1)((i ng )0)))	;; ing
("dethroning"	nil	(((d - ii )0)((th r ou n )1)((i ng )0)))	;; ing
("detonating"	nil	(((d e )1)((t^ @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("detouring"	nil	(((d ii )1)((t^ ur r )0)((i ng )0)))	;; ing
("detoxifying"	nil	(((d - ii )0)((t o k )1)((s @ )0)((f ai )1)((i ng )0)))	;; ing
("detracting"	nil	(((d i )0)((t r a k t )1)((i ng )0)))	;; ing
("detraining"	nil	(((d - ii )0)((t r ei n )1)((i ng )0)))	;; ing
("detroits"	nil	(((d i) 0) ((t r oi t s) 1)))	;; unique
("devaluating"	nil	(((d i )0)((v a )1)((l y uw )0)((ei t^ )1)((i ng )0)))	;; ing
("devaluing"	nil	(((d i )0)((v a )1)((l y uw )0)((i ng )0)))	;; ing
("devastating"	nil	(((d e )1)((v @ )0)((s t ei t^ )1)((i ng )0)))	;; ing
("developing"	nil	(((d i )0)((v a )1)((l @ p )0)((i ng )0)))	;; ing
("deviating"	nil	(((d ii )1)((v iy )0)((ei t^ )1)((i ng )0)))	;; ing
("devilling"	nil	(((d e )1)((v l! )0)((i ng )0)))	;; ing
("devising"	nil	(((d i )0)((v ai z )1)((i ng )0)))	;; ing
("devitalizing"	nil	(((d - ii )0)((v ai )1)((t l! )0)((ai z )1)((i ng )0)))	;; ing
("devoicing"	nil	(((d - ii )0)((v oi s )1)((i ng )0)))	;; ing
("devolving"	nil	(((d i )0)((v o l v )1)((i ng )0)))	;; ing
("devoting"	nil	(((d i )0)((v ou t^ )1)((i ng )0)))	;; ing
("devouring"	nil	(((d i )0)((v ow @ r )1)((i ng )0)))	;; ing
("dewatering"	nil	(((d - ii )0)((w oo )1)((t^ @ r )0)((i ng )0)))	;; ing
("dextran"	nil	(((d e k s) 1) ((t r a n) 0)))	;; unique
("dhonneur"	nil	(((d o) 0) ((n @@r) 1)))	;; unique
("dhorizon"	nil	(((d o) 1) ((r i) 0) ((z o n) 0)))	;; unique
("diagnosing"	nil	(((d ai @ g )0)((n ou z )1)((i ng )0)))	;; ing
("diagonalizing"	nil	(((d ai )0)((a )1)((g @ )0)((n l! )0)((ai z )1)((i ng )0)))	;; ing
("diagramming"	nil	(((d ai @ )1)((g r a m )0)((i ng )0)))	;; ing
("dialing"	nil	(((d ai @ l )1)((i ng )0)))	;; ing
("dialling"	nil	(((d ai @ l )1)((i ng )0)))	;; ing
("dianas"	nil	(((d ai) 0) ((a) 1) ((n @ z) 0)))	;; unique
("dicing"	nil	(((d ai s )1)((i ng )0)))	;; ing
("dickenss"	nil	(((d i) 1) ((k i n z) 0) ((@ z) 0)))	;; unique
("dictating"	nil	(((d i k )0)((t ei t^ )1)((i ng )0)))	;; ing
("diddling"	nil	(((d i )1)((d l! )0)((i ng )0)))	;; ing
("didn't"	nil	(((d i d) 1) ((n! t) 0)))	;; contraction
("diegos"	nil	(((d ii) 0) ((ei) 1) ((g ou z) 0)))	;; unique
("dieing"	nil	(((d ai )1)((i ng )0)))	;; ing
("dieting"	nil	(((d ai @ t^ )1)((i ng )0)))	;; ing
("differencing"	nil	(((d i )1)((f r @ n s )0)((i ng )0)))	;; ing
("differentiating"	nil	(((d i )1)((f @ r )0)((e n )1)((sh iy )0)((ei t^ )1)((i ng )0)))	;; ing
("differing"	nil	(((d i )1)((f @ r )0)((i ng )0)))	;; ing
("diffracting"	nil	(((d i )0)((f r a k t )1)((i ng )0)))	;; ing
("diffusing"	nil	(((d i )0)((f y uu z )1)((i ng )0)))	;; ing
("digesting"	nil	(((d ai )0)((jh e s t )1)((i ng )0)))	;; ing
("digging"	nil	(((d i g )1)((i ng )0)))	;; ing
("digitalising"	nil	(((d i )1)((jh i t )0)((l! )0)((ai z )1)((i ng )0)))	;; ing
("digitising"	nil	(((d i )1)((jh i t )0)((ai z )1)((i ng )0)))	;; ing
("digitizing"	nil	(((d i )1)((jh i t )0)((ai z )1)((i ng )0)))	;; ing
("dignifying"	nil	(((d i g )1)((n @ )0)((f ai )1)((i ng )0)))	;; ing
("dignitarys"	nil	(((d i g) 1) ((n @) 0) ((t r ii z) 0)))	;; unique
("digoxin"	nil	(((d ai) 1) ((jh o k) 1) ((s i n) 0)))	;; unique
("digressing"	nil	(((d ai )0)((g r e s )1)((i ng )0)))	;; ing
("dilating"	nil	(((d ai )0)((l ei t^ )1)((i ng )0)))	;; ing
("diltiazem"	nil	(((d i l) 0) ((t i) 1) ((y @) 0) ((z e m) 1)))	;; unique
("diluting"	nil	(((d ai )0)((l uu t^ )1)((i ng )0)))	;; ing
("dimensioning"	nil	(((d ai )0)((m e n )1)((sh n! )0)((i ng )0)))	;; ing
("diminishing"	nil	(((d i )0)((m i )1)((n i sh )0)((i ng )0)))	;; ing
("dimming"	nil	(((d i m )1)((i ng )0)))	;; ing
("dimpling"	nil	(((d i m )1)((p l! )0)((i ng )0)))	;; ing
("dinahs"	nil	(((d ai) 1) ((n @ z) 0)))	;; unique
("dinging"	nil	(((d i ng )1)((i ng )0)))	;; ing
("dining"	nil	(((d ai n )1)((i ng )0)))	;; ing
("dinning"	nil	(((d i n )1)((i ng )0)))	;; ing
("diphthongising"	nil	(((d i f )1)((th o ng )0)((ai z )1)((i ng )0)))	;; ing
("diphthongizing"	nil	(((d i f )1)((th o ng )0)((ai z )1)((i ng )0)))	;; ing
("dipolar"	nil	(((d ai) 0) ((p o l) 1) ((@) 0)))	;; oul
("dipole"	nil	(((d ai) 1) ((p o l) 0)))	;; oul
("dipoles"	nil	(((d ai) 1) ((p o l z) 0)))	;; oul
("dipping"	nil	(((d i p )1)((i ng )0)))	;; ing
("directing"	nil	(((d ai )0)((r e k t )1)((i ng )0)))	;; ing
("dirtying"	nil	(((d @@r t^ )1)((iy )0)((i ng )0)))	;; ing
("disabling"	nil	(((d i s )0)((ei )1)((b l! )0)((i ng )0)))	;; ing
("disabusing"	nil	(((d i s )1)((@ )0)((b y uu z )1)((i ng )0)))	;; ing
("disadvantaging"	nil	(((d i s )1)((@ d )0)((v aa n )1)((t i jh )0)((i ng )0)))	;; ing
("disaffecting"	nil	(((d i s )1)((@ )0)((f e k t )1)((i ng )0)))	;; ing
("disaggregating"	nil	(((d i s )0)((a )1)((g r i )0)((g ei t^ )1)((i ng )0)))	;; ing
("disagreeing"	nil	(((d i s )1)((@ )0)((g r ii )1)((i ng )0)))	;; ing
("disallowing"	nil	(((d i s )1)((@ )0)((l ow )1)((i ng )0)))	;; ing
("disambiguating"	nil	(((d i )1)((s a m )0)((b i )1)((g y uw )0)((ei t^ )1)((i ng )0)))	;; ing
("disappearing"	nil	(((d i s )1)((@ )0)((p ir r )1)((i ng )0)))	;; ing
("disapplying"	nil	(((d i s )1)((@ )0)((p l ai )1)((i ng )0)))	;; ing
("disappointing"	nil	(((d i )1)((s @ )0)((p oi n t )1)((i ng )0)))	;; ing
("disapproving"	nil	(((d i s )1)((@ )0)((p r uu v )1)((i ng )0)))	;; ing
("disarming"	nil	(((d i s )0)((aa m )1)((i ng )0)))	;; ing
("disarranging"	nil	(((d i s )1)((@ )0)((r ei n jh )1)((i ng )0)))	;; ing
("disassembling"	nil	(((d i s )1)((@ )0)((s e m )1)((b l! )0)((i ng )0)))	;; ing
("disassociating"	nil	(((d i s )1)((@ )0)((s ou )1)((s iy )0)((ei t^ )1)((i ng )0)))	;; ing
("disavowing"	nil	(((d i s )1)((@ )0)((v ow )1)((i ng )0)))	;; ing
("disbanding"	nil	(((d i s )0)((b a n d )1)((i ng )0)))	;; ing
("disbarring"	nil	(((d i s )0)((b aa r )1)((i ng )0)))	;; ing
("disbelieving"	nil	(((d i s )1)((b @ )0)((l ii v )1)((i ng )0)))	;; ing
("disbowelling"	nil	(((d i s )0)((b ow @ l )1)((i ng )0)))	;; ing
("disburdening"	nil	(((d i s )0)((b @@r )1)((d n! )0)((i ng )0)))	;; ing
("disbursing"	nil	(((d i s )0)((b @@r s )1)((i ng )0)))	;; ing
("discarding"	nil	(((d i )0)((s k aa d )1)((i ng )0)))	;; ing
("discerning"	nil	(((d i )0)((s @@r n )1)((i ng )0)))	;; ing
("discharging"	nil	(((d i s )0)((ch aa jh )1)((i ng )0)))	;; ing
("disciplining"	nil	(((d i )1)((s @ )0)((p l i n )1)((i ng )0)))	;; ing
("disclaiming"	nil	(((d i s )0)((k l ei m )1)((i ng )0)))	;; ing
("disclosing"	nil	(((d i )0)((s k l ou z )1)((i ng )0)))	;; ing
("discoing"	nil	(((d i )1)((s k ou )0)((i ng )0)))	;; ing
("discolouring"	nil	(((d i s )0)((k uh )1)((l @ r )0)((i ng )0)))	;; ing
("discomfiting"	nil	(((d i )0)((s k uh m )1)((f i t^ )0)((i ng )0)))	;; ing
("discomforting"	nil	(((d i s )0)((k uh m )1)((f @ t^ )0)((i ng )0)))	;; ing
("disconcerting"	nil	(((d i s )1)((k @ n )0)((s @@r t^ )1)((i ng )0)))	;; ing
("disconnecting"	nil	(((d i s )1)((k @ )0)((n e k t )1)((i ng )0)))	;; ing
("discontinuing"	nil	(((d i s )1)((k @ n )0)((t i )1)((n y uw )0)((i ng )0)))	;; ing
("discounting"	nil	(((d i s )0)((k ow n t )1)((i ng )0)))	;; ing
("discouraging"	nil	(((d i )0)((s k uh )1)((r i jh )0)((i ng )0)))	;; ing
("discoursing"	nil	(((d i )0)((s k oo s )1)((i ng )0)))	;; ing
("discovering"	nil	(((d i )0)((s k uh )1)((v @ r )0)((i ng )0)))	;; ing
("discrediting"	nil	(((d i s )0)((k r e )1)((d i t^ )0)((i ng )0)))	;; ing
("discriminating"	nil	(((d i )0)((s k r i )1)((m i )0)((n ei t^ )1)((i ng )0)))	;; ing
("discussing"	nil	(((d i )0)((s k uh s )1)((i ng )0)))	;; ing
("disdaining"	nil	(((d i s )0)((d ei n )1)((i ng )0)))	;; ing
("disembarking"	nil	(((d i s )1)((@ m )0)((b aa k )1)((i ng )0)))	;; ing
("disembodying"	nil	(((d i s )1)((@ m )0)((b o )1)((d iy )0)((i ng )0)))	;; ing
("disemboweling"	nil	(((d i s )1)((@ m )0)((b ow @ l )1)((i ng )0)))	;; ing
("disembowelling"	nil	(((d i s )1)((@ m )0)((b ow @ l )1)((i ng )0)))	;; ing
("disenabling"	nil	(((d i s )1)((n! )0)((ei )1)((b l! )0)((i ng )0)))	;; ing
("disenchanting"	nil	(((d i s )1)((n! )0)((ch aa n t )1)((i ng )0)))	;; ing
("disencumbering"	nil	(((d i s )1)((n! )0)((k uh m )1)((b @ r )0)((i ng )0)))	;; ing
("disenfranchising"	nil	(((d i s )1)((n! )0)((f r a n )1)((ch ai z )0)((i ng )0)))	;; ing
("disengaging"	nil	(((d i s )1)((n! )0)((g ei jh )1)((i ng )0)))	;; ing
("disentangling"	nil	(((d i s )1)((n! )0)((t a ng )1)((g l! )0)((i ng )0)))	;; ing
("disfavoring"	nil	(((d i s )0)((f ei )1)((v @ r )0)((i ng )0)))	;; ing
("disfavouring"	nil	(((d i s )0)((f ei )1)((v @ r )0)((i ng )0)))	;; ing
("disfiguring"	nil	(((d i s )0)((f i )1)((g @ r )0)((i ng )0)))	;; ing
("disfrocking"	nil	(((d i s )0)((f r o k )1)((i ng )0)))	;; ing
("disfurnishing"	nil	(((d i s )0)((f @@r )1)((n i sh )0)((i ng )0)))	;; ing
("disgorging"	nil	(((d i s )0)((g oo jh )1)((i ng )0)))	;; ing
("disgracing"	nil	(((d i s )0)((g r ei s )1)((i ng )0)))	;; ing
("disgruntling"	nil	(((d i s )0)((g r uh n )1)((t l! )0)((i ng )0)))	;; ing
("disguising"	nil	(((d i s )0)((g ai z )1)((i ng )0)))	;; ing
("disgusting"	nil	(((d i s )0)((g uh s t )1)((i ng )0)))	;; ing
("disheartening"	nil	(((d i s )0)((h aa t )1)((n! )0)((i ng )0)))	;; ing
("disheveling"	nil	(((d i )0)((sh e )1)((v l! )0)((i ng )0)))	;; ing
("dishevelling"	nil	(((d i )0)((sh e )1)((v l! )0)((i ng )0)))	;; ing
("dishing"	nil	(((d i sh )1)((i ng )0)))	;; ing
("dishonoring"	nil	(((d i s )0)((o )1)((n @ r )0)((i ng )0)))	;; ing
("dishonouring"	nil	(((d i s )0)((o )1)((n @ r )0)((i ng )0)))	;; ing
("dishwashing"	nil	(((d i sh )1)((w o sh )1)((i ng )0)))	;; ing
("disillusioning"	nil	(((d i s )1)((i )0)((l uu )1)((zh n! )0)((i ng )0)))	;; ing
("disincorporating"	nil	(((d i s )1)((i n )0)((k oo )1)((p @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("disinfecting"	nil	(((d i s )1)((i n )0)((f e k t )1)((i ng )0)))	;; ing
("disinfesting"	nil	(((d i s )1)((i n )0)((f e s t )1)((i ng )0)))	;; ing
("disinheriting"	nil	(((d i s )1)((i n )0)((h e )1)((r i t^ )0)((i ng )0)))	;; ing
("disintegrating"	nil	(((d i s )0)((i n )1)((t i )0)((g r ei t^ )1)((i ng )0)))	;; ing
("disintering"	nil	(((d i s )1)((i n )0)((t @@r r )1)((i ng )0)))	;; ing
("disinterring"	nil	(((d i s )1)((i n )0)((t @@r r )1)((i ng )0)))	;; ing
("disinvesting"	nil	(((d i s )1)((i n )0)((v e s t )1)((i ng )0)))	;; ing
("disjointing"	nil	(((d i s )0)((jh oi n t )1)((i ng )0)))	;; ing
("disliking"	nil	(((d i s )0)((l ai k )1)((i ng )0)))	;; ing
("dislinking"	nil	(((d i s )0)((l i ng k )1)((i ng )0)))	;; ing
("dislocating"	nil	(((d i s )1)((l @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("dislodging"	nil	(((d i s )0)((l o jh )1)((i ng )0)))	;; ing
("dismantling"	nil	(((d i s )0)((m a n )1)((t l! )0)((i ng )0)))	;; ing
("dismaying"	nil	(((d i )0)((s m ei )1)((i ng )0)))	;; ing
("dismembering"	nil	(((d i s )0)((m e m )1)((b @ r )0)((i ng )0)))	;; ing
("dismissing"	nil	(((d i )0)((s m i s )1)((i ng )0)))	;; ing
("dismounting"	nil	(((d i s )0)((m ow n t )1)((i ng )0)))	;; ing
("disneys"	nil	(((d i z) 1) ((n ii z) 0)))	;; unique
("disobeying"	nil	(((d i s )1)((@ )0)((b ei )1)((i ng )0)))	;; ing
("disobliging"	nil	(((d i s )1)((@ )0)((b l ai jh )1)((i ng )0)))	;; ing
("disorganising"	nil	(((d i s )0)((oo )1)((g @ )0)((n ai z )1)((i ng )0)))	;; ing
("disorganizing"	nil	(((d i s )0)((oo )1)((g @ )0)((n ai z )1)((i ng )0)))	;; ing
("disorientating"	nil	(((d i s )0)((oo )1)((r iy @ n t )0)((ei t^ )1)((i ng )0)))	;; ing
("disorienting"	nil	(((d i s )0)((oo )1)((r iy )0)((e n t )1)((i ng )0)))	;; ing
("disowning"	nil	(((d i s )0)((ou n )1)((i ng )0)))	;; ing
("disparaging"	nil	(((d i )0)((s p a )1)((r i jh )0)((i ng )0)))	;; ing
("dispatching"	nil	(((d i )0)((s p a ch )1)((i ng )0)))	;; ing
("dispelling"	nil	(((d i )0)((s p a l )1)((i ng )0)))	;; ing
("dispensing"	nil	(((d i )0)((s p e n s )1)((i ng )0)))	;; ing
("dispersing"	nil	(((d i )0)((s p @@r s )1)((i ng )0)))	;; ing
("dispiriting"	nil	(((d i )0)((s p i )1)((r i t^ )0)((i ng )0)))	;; ing
("displacing"	nil	(((d i s )0)((p l ei s )1)((i ng )0)))	;; ing
("displaying"	nil	(((d i )0)((s p l ei )1)((i ng )0)))	;; ing
("displeasing"	nil	(((d i s )0)((p l ii z )1)((i ng )0)))	;; ing
("disporting"	nil	(((d i )0)((s p oo t^ )1)((i ng )0)))	;; ing
("disposing"	nil	(((d i )0)((s p ou z )1)((i ng )0)))	;; ing
("dispossessing"	nil	(((d i s )1)((p @ )0)((z e s )1)((i ng )0)))	;; ing
("disproving"	nil	(((d i s )0)((p r uu v )1)((i ng )0)))	;; ing
("disputing"	nil	(((d i )0)((s p y uu t^ )1)((i ng )0)))	;; ing
("disqualifying"	nil	(((d i s )0)((k w o )1)((l i )0)((f ai )1)((i ng )0)))	;; ing
("disquieting"	nil	(((d i s )0)((k w ai @ t^ )1)((i ng )0)))	;; ing
("disregarding"	nil	(((d i s )1)((r @ )0)((g aa d )1)((i ng )0)))	;; ing
("disrobing"	nil	(((d i s )0)((r ou b )1)((i ng )0)))	;; ing
("disrupting"	nil	(((d i s )0)((r uh p t )1)((i ng )0)))	;; ing
("dissatisfying"	nil	(((d i s )0)((s a )1)((t^ i s )0)((f ai )1)((i ng )0)))	;; ing
("dissecting"	nil	(((d ai )0)((s e k t )1)((i ng )0)))	;; ing
("dissembling"	nil	(((d i )0)((s e m )1)((b l! )0)((i ng )0)))	;; ing
("disseminating"	nil	(((d i )0)((s e )1)((m i )0)((n ei t^ )1)((i ng )0)))	;; ing
("dissenting"	nil	(((d i )0)((s e n t )1)((i ng )0)))	;; ing
("dissimilating"	nil	(((d i )0)((s i )1)((m i )0)((l ei t^ )1)((i ng )0)))	;; ing
("dissimulating"	nil	(((d i )0)((s i )1)((m y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("dissing"	nil	(((d i s )1)((i ng )0)))	;; ing
("dissipating"	nil	(((d i )1)((s @ )0)((p ei t^ )1)((i ng )0)))	;; ing
("dissociating"	nil	(((d i )0)((s ou )1)((sh iy )0)((ei t^ )1)((i ng )0)))	;; ing
("dissolving"	nil	(((d i )0)((z o l v )1)((i ng )0)))	;; ing
("dissuading"	nil	(((d i )0)((s w ei d )1)((i ng )0)))	;; ing
("distancing"	nil	(((d i )1)((s t n! s )0)((i ng )0)))	;; ing
("distending"	nil	(((d i )0)((s t e n d )1)((i ng )0)))	;; ing
("distilling"	nil	(((d i )0)((s t i l )1)((i ng )0)))	;; ing
("distinguishing"	nil	(((d i )0)((s t i ng )1)((g w i sh )0)((i ng )0)))	;; ing
("distorting"	nil	(((d i )0)((s t oo t^ )1)((i ng )0)))	;; ing
("distracting"	nil	(((d i )0)((s t r a k t )1)((i ng )0)))	;; ing
("distressing"	nil	(((d i )0)((s t r e s )1)((i ng )0)))	;; ing
("distributing"	nil	(((d i )0)((s t r i )1)((b y uw t^ )0)((i ng )0)))	;; ing
("distrusting"	nil	(((d i s )0)((t r uh s t )1)((i ng )0)))	;; ing
("disturbing"	nil	(((d i )0)((s t @@r b )1)((i ng )0)))	;; ing
("disuniting"	nil	(((d i s )1)((y uw )0)((n ai t^ )1)((i ng )0)))	;; ing
("ditching"	nil	(((d i ch )1)((i ng )0)))	;; ing
("dithering"	nil	(((d i )1)((dh @ r )0)((i ng )0)))	;; ing
("dittoing"	nil	(((d i )1)((t^ ou )0)((i ng )0)))	;; ing
("dive-bombing"	nil	(((d ai v )1)((b o m )1)((i ng )0)))	;; ing
("divebombing"	nil	(((d ai v )1)((b o m )1)((i ng )0)))	;; ing
("diverging"	nil	(((d ai )0)((v @@r jh )1)((i ng )0)))	;; ing
("diversifying"	nil	(((d ai )0)((v @@r s )1)((@ )0)((f ai )1)((i ng )0)))	;; ing
("diverting"	nil	(((d ai )0)((v @@r t^ )1)((i ng )0)))	;; ing
("divesting"	nil	(((d ai )0)((v e s t )1)((i ng )0)))	;; ing
("dividing"	nil	(((d i )0)((v ai d )1)((i ng )0)))	;; ing
("diving"	nil	(((d ai v )1)((i ng )0)))	;; ing
("divining"	nil	(((d i )0)((v ai n )1)((i ng )0)))	;; ing
("divinitys"	nil	(((d i) 0) ((v i n) 1) ((@) 0) ((t^ ii z) 0)))	;; unique
("divorcing"	nil	(((d i )0)((v oo s )1)((i ng )0)))	;; ing
("divulging"	nil	(((d ai )0)((v o l jh )1)((i ng )0)))	;; ing
("divvying"	nil	(((d i )1)((v iy )0)((i ng )0)))	;; ing
("dizzying"	nil	(((d i )1)((z iy )0)((i ng )0)))	;; ing
("dobbing"	nil	(((d o b )1)((i ng )0)))	;; ing
("docketing"	nil	(((d o )1)((k @ t^ )0)((i ng )0)))	;; ing
("docking"	nil	(((d o k )1)((i ng )0)))	;; ing
("doctoring"	nil	(((d o k )1)((t @ r )0)((i ng )0)))	;; ing
("documenting"	nil	(((d o )1)((k y uw )0)((m e n t )1)((i ng )0)))	;; ing
("doddering"	nil	(((d o )1)((d @ r )0)((i ng )0)))	;; ing
("dodging"	nil	(((d o jh )1)((i ng )0)))	;; ing
("doesn't"	nil	(((d uh z) 1) ((n! t) 0))) 	;; contraction
("doeuvre"	nil	(((d @@r v) 1)))	;; unique
("doeuvres"	nil	(((d @@r v) 1)))	;; unique
("doffing"	nil	(((d o f )1)((i ng )0)))	;; ing
("dog-earing"	nil	(((d o g )1)((- ir r )0)((i ng )0)))	;; ing
("dog-paddling"	nil	(((d o g )1)((p a )1)((d l! )0)((i ng )0)))	;; ing
("dogfighting"	nil	(((d o g )1)((f ai t^ )1)((i ng )0)))	;; ing
("dogging"	nil	(((d o g )1)((i ng )0)))	;; ing
("doggy-paddling"	nil	(((d o g )1)((iy )0)((p a )1)((d l! )0)((i ng )0)))	;; ing
("dogs-body"	nil	(((d o g z) 1) ((b o) 1) ((d ii) 0)))	;; unique
("dogs-tooth"	nil	(((d o g z) 1) ((t uu th) 0)))	;; unique
("dogtrotting"	nil	(((d o g )1)((t r o t^ )1)((i ng )0)))	;; ing
("doing"	nil	(((d uu )1)((i ng )0)))	;; ing
("dolan"	nil	(((d o) 1) ((l @ n) 0)))	;; oul
("dole"	nil	(((d o l) 1)))	;; oul
("doled"	nil	(((d o l d) 1)))	;; oul
("doleful"	nil	(((d o l) 1) ((f u l) 0)))	;; oul
("dolefully"	nil	(((d o l) 1) ((f l!) 0) ((ii) 0)))	;; oul
("dolefulness"	nil	(((d o l) 1) ((f u l) 0) ((n @ s) 0)))	;; oul
("doles"	nil	(((d o l z) 1)))	;; oul
("doling"	nil	(((d o l) 1) ((i ng) 0)))	;; oul
("dolling"	nil	(((d o l )1)((i ng )0)))	;; ing
("dolloping"	nil	(((d o )1)((l @ p )0)((i ng )0)))	;; ing
("dolls-house"	nil	(((d o l z) 1) ((h ow s) 0)))	;; unique
("dolls-houses"	nil	(((d o l z) 1) ((h ow z) 1) ((@ z) 0)))	;; unique
("dolt"	nil	(((d o l t) 1)))	;; oul
("doltish"	nil	(((d o l t) 1) ((i sh) 0)))	;; oul
("doltishly"	nil	(((d o l t) 1) ((i sh) 0) ((l ii) 0)))	;; oul
("doltishness"	nil	(((d o l t) 1) ((i sh) 0) ((n @ s) 0)))	;; oul
("dolts"	nil	(((d o l t s) 1)))	;; oul
("domesticating"	nil	(((d @ )0)((m e )1)((s t i k )0)((ei t^ )1)((i ng )0)))	;; ing
("domesticising"	nil	(((d @ )0)((m e )1)((s t i s )0)((ai z )1)((i ng )0)))	;; ing
("domesticizing"	nil	(((d @ )0)((m e )1)((s t i s )0)((ai z )1)((i ng )0)))	;; ing
("dominating"	nil	(((d o )1)((m @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("domineering"	nil	(((d o )1)((m @ )0)((n ir r )1)((i ng )0)))	;; ing
("don't"	nil	(((d ou n t) 1)))	;; contraction
("donaldsons"	nil	(((d o) 1) ((n l! d) 0) ((s n! z) 0)))	;; unique
("donating"	nil	(((d ou )0)((n ei t^ )1)((i ng )0)))	;; ing
("donnellys"	nil	(((d o) 1) ((n l!) 0) ((ii z) 0)))	;; unique
("donning"	nil	(((d o n )1)((i ng )0)))	;; ing
("donts"	nil	(((d ou n t s) 1)))	;; unique
("doodling"	nil	(((d uu )1)((d l! )0)((i ng )0)))	;; ing
("dooley"	nil	(((d @) 1) ((l ii) 0)))	;; uul
("doolittle"	nil	(((d @) 1) ((l i) 0) ((t l!) 0)))	;; uul
("dooming"	nil	(((d uu m )1)((i ng )0)))	;; ing
("doomwatching"	nil	(((d uu m )1)((w o ch )1)((i ng )0)))	;; ing
("doorkeeping"	nil	(((d oo )1)((k ii p )1)((i ng )0)))	;; ing
("doorknocking"	nil	(((d oo )1)((n o k )1)((i ng )0)))	;; ing
("doorstepping"	nil	(((d oo )1)((s t e p )1)((i ng )0)))	;; ing
("doping"	nil	(((d ou p )1)((i ng )0)))	;; ing
("dorking"	nil	(((d oo )1)((k i ng )0)))	;; ing
("dorsay"	nil	(((d oo) 0) ((s ei) 1)))	;; unique
("dosing"	nil	(((d ou s )1)((i ng )0)))	;; ing
("dossing"	nil	(((d o s )1)((i ng )0)))	;; ing
("doting"	nil	(((d ou t^ )1)((i ng )0)))	;; ing
("dotting"	nil	(((d o t^ )1)((i ng )0)))	;; ing
("double-checking"	nil	(((d uh )1)((b l! )0)((ch e k )1)((i ng )0)))	;; ing
("double-dealing"	nil	(((d uh )1)((b l! )0)((d ii l )1)((i ng )0)))	;; ing
("double-glazing"	nil	(((d uh )1)((b l! )0)((g l ei z )1)((i ng )0)))	;; ing
("double-parking"	nil	(((d uh )1)((b l! )0)((p aa k )1)((i ng )0)))	;; ing
("doublechecking"	nil	(((d uh )1)((b l! )0)((ch e k )1)((i ng )0)))	;; ing
("doubleclicking"	nil	(((d uh )1)((b l! )0)((k l i k )1)((i ng )0)))	;; ing
("doubletalking"	nil	(((d uh )1)((b l! )0)((t oo k )1)((i ng )0)))	;; ing
("doubletracking"	nil	(((d uh )1)((b l! )0)((t r a k )1)((i ng )0)))	;; ing
("doubling"	nil	(((d uh )1)((b l! )0)((i ng )0)))	;; ing
("doubting"	nil	(((d ow t^ )1)((i ng )0)))	;; ing
("dougs"	nil	(((d uh g z) 1)))	;; unique
("dousing"	nil	(((d ow s )1)((i ng )0)))	;; ing
("dovetailing"	nil	(((d uh v )1)((t ei l )1)((i ng )0)))	;; ing
("doweling"	nil	(((d ow @ l )1)((i ng )0)))	;; ing
("dowelling"	nil	(((d ow @ l )1)((i ng )0)))	;; ing
("dowling"	nil	(((d ow )1)((l i ng )0)))	;; ing
("downcasting"	nil	(((d ow n )1)((k aa s t )1)((i ng )0)))	;; ing
("downflowing"	nil	(((d ow n )1)((f l ou )1)((i ng )0)))	;; ing
("downgrading"	nil	(((d ow n )1)((g r ei d )1)((i ng )0)))	;; ing
("downing"	nil	(((d ow n )1)((i ng )0)))	;; ing
("downings"	nil	(((d ow) 1) ((n i ng z) 0)))	;; unique
("downloading"	nil	(((d - ow n )0)((l ou d )1)((i ng )0)))	;; ing
("downplaying"	nil	(((d ow n )1)((p l ei )1)((i ng )0)))	;; ing
("downpouring"	nil	(((d ow n )1)((p oo r )1)((i ng )0)))	;; ing
("downrushing"	nil	(((d ow n )1)((r uh sh )1)((i ng )0)))	;; ing
("downsampling"	nil	(((d ow n )1)((s aa m )1)((p l! )0)((i ng )0)))	;; ing
("downshifting"	nil	(((d ow n )1)((sh i f t )1)((i ng )0)))	;; ing
("downsizing"	nil	(((d ow n )1)((s ai z )1)((i ng )0)))	;; ing
("downsliding"	nil	(((d ow n )1)((s l ai d )1)((i ng )0)))	;; ing
("dows"	nil	(((d ow z) 1)))	;; unique
("dowsing"	nil	(((d ow s )1)((i ng )0)))	;; ing
("doyles"	nil	(((d oi l z) 1)))	;; unique
("dozing"	nil	(((d ou z )1)((i ng )0)))	;; ing
("draft-dodging"	nil	(((d r aa f t )1)((d o jh )1)((i ng )0)))	;; ing
("drafting"	nil	(((d r aa f t )1)((i ng )0)))	;; ing
("dragging"	nil	(((d r a g )1)((i ng )0)))	;; ing
("draggling"	nil	(((d r a )1)((g l! )0)((i ng )0)))	;; ing
("dragooning"	nil	(((d r @ )0)((g uu n )1)((i ng )0)))	;; ing
("draind"	nil	(((d r ei n d) 1)))	;; unique
("draining"	nil	(((d r ei n )1)((i ng )0)))	;; ing
("dramatizing"	nil	(((d r a )1)((m @ )0)((t ai z )1)((i ng )0)))	;; ing
("dramming"	nil	(((d r a m )1)((i ng )0)))	;; ing
("draping"	nil	(((d r ei p )1)((i ng )0)))	;; ing
("draughting"	nil	(((d r aa f t )1)((i ng )0)))	;; ing
("drawing"	nil	(((d r oo )1)((i ng )0)))	;; ing
("drawling"	nil	(((d r oo l )1)((i ng )0)))	;; ing
("dreading"	nil	(((d r e d )1)((i ng )0)))	;; ing
("dreaming"	nil	(((d r ii m )1)((i ng )0)))	;; ing
("dredging"	nil	(((d r e jh )1)((i ng )0)))	;; ing
("dregging"	nil	(((d r e g )1)((i ng )0)))	;; ing
("drenching"	nil	(((d r e n ch )1)((i ng )0)))	;; ing
("dressing"	nil	(((d r e s )1)((i ng )0)))	;; ing
("dressmaking"	nil	(((d r e s )1)((m ei k )1)((i ng )0)))	;; ing
("dribbling"	nil	(((d r i )1)((b l! )0)((i ng )0)))	;; ing
("drifting"	nil	(((d r i f t )1)((i ng )0)))	;; ing
("driftnetting"	nil	(((d r i f t )1)((n e t^ )1)((i ng )0)))	;; ing
("drilling"	nil	(((d r i l )1)((i ng )0)))	;; ing
("drinking"	nil	(((d r i ng k )1)((i ng )0)))	;; ing
("dripping"	nil	(((d r i p )1)((i ng )0)))	;; ing
("driveling"	nil	(((d r i )1)((v l! )0)((i ng )0)))	;; ing
("drivelling"	nil	(((d r i )1)((v l! )0)((i ng )0)))	;; ing
("driving"	nil	(((d r ai v )1)((i ng )0)))	;; ing
("drizzling"	nil	(((d r i )1)((z l! )0)((i ng )0)))	;; ing
("droll"	nil	(((d r o l) 1)))	;; oul
("droller"	nil	(((d r o l) 1) ((@) 0)))	;; oul
("drollery"	nil	(((d r o l) 1) ((@) 0) ((r ii) 0)))	;; oul
("drollest"	nil	(((d r o l) 1) ((@ s t) 0)))	;; oul
("drolling"	nil	(((d r o l) 1) ((i ng) 0)))	;; oul
("drollness"	nil	(((d r o l) 1) ((n @ s) 0)))	;; oul
("drolly"	nil	(((d r o l) 1) ((l ii) 0)))	;; oul
("droning"	nil	(((d r ou n )1)((i ng )0)))	;; ing
("drool"	nil	(((d r u l) 1)))	;; uul
("drooled"	nil	(((d r u l d) 1)))	;; uul
("drooling"	nil	(((d r u l) 1) ((i ng) 0)))	;; uul
("droolingly"	nil	(((d r u l) 1) ((i ng) 0) ((l ii) 0)))	;; uul
("drools"	nil	(((d r u l z) 1)))	;; uul
("drooping"	nil	(((d r uu p )1)((i ng )0)))	;; ing
("dropping"	nil	(((d r o p )1)((i ng )0)))	;; ing
("droving"	nil	(((d r ou v )1)((i ng )0)))	;; ing
("drowning"	nil	(((d r ow n )1)((i ng )0)))	;; ing
("drubbing"	nil	(((d r uh b )1)((i ng )0)))	;; ing
("drudging"	nil	(((d r uh jh )1)((i ng )0)))	;; ing
("drugging"	nil	(((d r uh g )1)((i ng )0)))	;; ing
("drumming"	nil	(((d r uh m )1)((i ng )0)))	;; ing
("drycleaning"	nil	(((d r ai )1)((k l ii n )1)((i ng )0)))	;; ing
("drydens"	nil	(((d r ai) 1) ((d n! z) 0)))	;; unique
("drying"	nil	(((d r ai )1)((i ng )0)))	;; ing
("ds"	nil	(((d ii z) 1)))	;; unique
("dubbing"	nil	(((d uh b )1)((i ng )0)))	;; ing
("duchesss"	nil	(((d uh) 1) ((ch @ s) 0) ((@ z) 0)))	;; unique
("ducking"	nil	(((d uh k )1)((i ng )0)))	;; ing
("duckling"	nil	(((d uh k )1)((l i ng )0)))	;; ing
("duel"	nil	(((d y u l) 1)))	;; uul
("dueled"	nil	(((d y u l d) 1)))	;; uul
("dueling"	nil	(((d y u l) 1) ((i ng) 0)))	;; uul
("duelist"	nil	(((d y u l) 1) ((i s t) 0)))	;; uul
("duelists"	nil	(((d y u l) 1) ((i s t s) 0)))	;; uul
("dueller"	nil	(((d y u l) 1) ((@) 0)))	;; uul
("duelling"	nil	(((d y u l) 1) ((i ng) 0)))	;; uul
("duellist"	nil	(((d y u l) 1) ((i s t) 0)))	;; uul
("duellists"	nil	(((d y u l) 1) ((i s t s) 0)))	;; uul
("duels"	nil	(((d y u l z) 1)))	;; uul
("duffing"	nil	(((d uh f )1)((i ng )0)))	;; ing
("dulling"	nil	(((d uh l )1)((i ng )0)))	;; ing
("dumbfounding"	nil	(((d uh m )0)((f ow n d )1)((i ng )0)))	;; ing
("dumbing"	nil	(((d uh m )1)((i ng )0)))	;; ing
("dumping"	nil	(((d uh m p )1)((i ng )0)))	;; ing
("dumpling"	nil	(((d uh m )1)((p l i ng )0)))	;; ing
("dunbars"	nil	(((d uh n) 0) ((b aa z) 1)))	;; unique
("duncans"	nil	(((d uh ng) 1) ((k @ n z) 0)))	;; unique
("dunking"	nil	(((d uh ng k )1)((i ng )0)))	;; ing
("dunning"	nil	(((d uh )1)((n i ng )0)))	;; ing
("duping"	nil	(((d y uu p )1)((i ng )0)))	;; ing
("duplexing"	nil	(((d y uu )1)((p l e k s )0)((i ng )0)))	;; ing
("duplicating"	nil	(((d y uu )1)((p l @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("durberville"	nil	(((d @@r) 1) ((b @) 0) ((v i l) 0)))	;; unique
("durbervilles"	nil	(((d @@r) 1) ((b @) 0) ((v i l z) 0)))	;; unique
("duride"	nil	(((jh uu) 1) ((r ai d) 0)))	;; unique
("during"	nil	(((d y ur )1)((r i ng )0)))	;; ing
("dusting"	nil	(((d uh s t )1)((i ng )0)))	;; ing
("dutchmans"	nil	(((d uh ch) 1) ((m @ n z) 0)))	;; unique
("dwarfing"	nil	(((d w oo f )1)((i ng )0)))	;; ing
("dwelling"	nil	(((d w a l )1)((i ng )0)))	;; ing
("dwindling"	nil	(((d w i n )1)((d l! )0)((i ng )0)))	;; ing
("dyed-in-the-wool"	nil	(((d ai d) 1) ((i n) 0) ((dh @) 0) ((w u l) 1)))	;; uul
("dyeing"	nil	(((d ai )1)((i ng )0)))	;; ing
("dying"	nil	(((d ai )1)((i ng )0)))	;; ing
("dyings"	nil	(((d ai) 1) ((i ng z) 0)))	;; unique
("dylans"	nil	(((d i) 1) ((l @ n z) 0)))	;; unique
("dynamiting"	nil	(((d ai )1)((n @ )0)((m ai t^ )1)((i ng )0)))	;; ing
("dynamizing"	nil	(((d ai )1)((n @ )0)((m ai z )1)((i ng )0)))	;; ing
("dysons"	nil	(((d ai) 1) ((s n! z) 0)))	;; unique
("e-mailing"	nil	(((ii )1)((m ei l )1)((i ng )0)))	;; ing
("ear-piercing"	nil	(((ii @ )1)((p ir s )1)((i ng )0)))	;; ing
("ear-shattering"	nil	(((ii @ )1)((sh a )1)((t^ @ r )0)((i ng )0)))	;; ing
("early-warning"	nil	(((@@r )1)((l iy )0)((w oo n )1)((i ng )0)))	;; ing
("earmarking"	nil	(((ii @ )1)((m aa k )1)((i ng )0)))	;; ing
("earning"	nil	(((@@r n )1)((i ng )0)))	;; ing
("earsplitting"	nil	(((ii @ )1)((s p l i t^ )1)((i ng )0)))	;; ing
("earthing"	nil	(((@@r th )1)((i ng )0)))	;; ing
("earthling"	nil	(((@@r th )1)((l i ng )0)))	;; ing
("earthmoving"	nil	(((@@r th )1)((m uu v )1)((i ng )0)))	;; ing
("earthquaking"	nil	(((@@r th )1)((k w ei k )1)((i ng )0)))	;; ing
("earthshaking"	nil	(((@@r th )1)((sh ei k )1)((i ng )0)))	;; ing
("earthshattering"	nil	(((@@r th )1)((sh a )1)((t^ @ r )0)((i ng )0)))	;; ing
("earwigging"	nil	(((ii @ )1)((w i g )1)((i ng )0)))	;; ing
("easing"	nil	(((ii z )1)((i ng )0)))	;; ing
("easting"	nil	(((ii s t )1)((i ng )0)))	;; ing
("easts"	nil	(((ii s t s) 1)))	;; unique
("easy-going"	nil	(((ii z )1)((iy )0)((g ou )1)((i ng )0)))	;; ing
("easy-looking"	nil	(((ii z )1)((iy )0)((l u k )1)((i ng )0)))	;; ing
("easygoing"	nil	(((ii z )1)((iy )0)((g ou )1)((i ng )0)))	;; ing
("easyjets"	nil	(((ii z) 1) ((ii) 0) ((jh e t s) 1)))	;; unique
("eating"	nil	(((ii t^ )1)((i ng )0)))	;; ing
("eavesdropping"	nil	(((ii v z )1)((d r o p )1)((i ng )0)))	;; ing
("ebbing"	nil	(((e b )1)((i ng )0)))	;; ing
("ebola"	nil	(((ii) 0) ((b o) 1) ((l @) 0)))	;; oul
("echat"	nil	(((ii) 1) ((ch a t) 0)))	;; unique
("echoing"	nil	(((e )1)((k ou )0)((i ng )0)))	;; ing
("echoless"	nil	(((e) 1) ((k o) 0) ((l @ s) 0)))	;; oul
("eclipsing"	nil	(((i )0)((k l i p s )1)((i ng )0)))	;; ing
("ecole"	nil	(((ei) 0) ((k o l) 1)))	;; oul
("ecoles"	nil	(((ei) 0) ((k o l) 1)))	;; oul
("economising"	nil	(((i )0)((k o )1)((n @ )0)((m ai z )1)((i ng )0)))	;; ing
("economizing"	nil	(((i )0)((k o )1)((n @ )0)((m ai z )1)((i ng )0)))	;; ing
("economys"	nil	(((i) 0) ((k o) 1) ((n @) 0) ((m ii z) 0)))	;; unique
("eddying"	nil	(((e )1)((d iy )0)((i ng )0)))	;; ing
("edgars"	nil	(((e d) 1) ((g @ z) 0)))	;; unique
("edging"	nil	(((e jh )1)((i ng )0)))	;; ing
("edifying"	nil	(((e )1)((d @ )0)((f ai )1)((i ng )0)))	;; ing
("edinburghs"	nil	(((e) 1) ((d i m) 0) ((b r @ z) 0)))	;; unique
("editing"	nil	(((e )1)((d @ t^ )0)((i ng )0)))	;; ing
("editorialising"	nil	(((e )1)((d @ t )0)((oo r )1)((iy @ l )0)((ai z )1)((i ng )0)))	;; ing
("editorializing"	nil	(((e )1)((d @ t )0)((oo r )1)((iy @ l )0)((ai z )1)((i ng )0)))	;; ing
("educating"	nil	(((e )1)((jh uw )0)((k ei t^ )1)((i ng )0)))	;; ing
("edwardss"	nil	(((e d) 1) ((w @ d z) 0) ((@ z) 0)))	;; unique
("eer"	nil	(((ir) 1)))	;; unique
("effacing"	nil	(((i )0)((f ei s )1)((i ng )0)))	;; ing
("effecting"	nil	(((i )0)((f e k t )1)((i ng )0)))	;; ing
("effectuating"	nil	(((i )0)((f e k )1)((ch uw )0)((ei t^ )1)((i ng )0)))	;; ing
("effervescing"	nil	(((e )1)((f @ )0)((v e s )1)((i ng )0)))	;; ing
("efficiencys"	nil	(((i) 0) ((f i) 1) ((sh n!) 0) ((s ii z) 0)))	;; unique
("effies"	nil	(((e) 1) ((f ii z) 0)))	;; unique
("efflorescing"	nil	(((e )1)((f l @ )0)((r e s )1)((i ng )0)))	;; ing
("egging"	nil	(((e g )1)((i ng )0)))	;; ing
("egoless"	nil	(((ii) 1) ((g o) 0) ((l @ s) 0)))	;; oul
("egrepping"	nil	(((ii )1)((g r e p )1)((i ng )0)))	;; ing
("egypts"	nil	(((ii) 1) ((jh i p t s) 0)))	;; unique
("ehoa"	nil	(((e) 1) ((h oo) 0) ((@) 0)))	;; unique
("eiffels"	nil	(((ai) 1) ((f l! z) 0)))	;; unique
("eightfold"	nil	(((ei t) 1) ((f o l d) 0)))	;; oul
("ejaculating"	nil	(((i )0)((jh a )1)((k y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("ejecting"	nil	(((i )0)((jh e k t )1)((i ng )0)))	;; ing
("eketahuna"	nil	(((e) 0) ((k @) 0) ((t^ @) 0) ((h uu) 1) ((n @) 0)))	;; unique
("eking"	nil	(((ii k )1)((i ng )0)))	;; ing
("elaborating"	nil	(((i )0)((l a )1)((b @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("elapsing"	nil	(((i )0)((l a p s )1)((i ng )0)))	;; ing
("elasticating"	nil	(((i )0)((l a )1)((s t i k )0)((ei t^ )1)((i ng )0)))	;; ing
("elating"	nil	(((i )0)((l ei t^ )1)((i ng )0)))	;; ing
("elbowing"	nil	(((a l )1)((b ou )0)((i ng )0)))	;; ing
("elderlys"	nil	(((a l) 1) ((d @) 0) ((l ii z) 0)))	;; unique
("electing"	nil	(((i )0)((l e k t )1)((i ng )0)))	;; ing
("electioneering"	nil	(((i )0)((l e k )1)((sh n! )0)((ir r )1)((i ng )0)))	;; ing
("electrifying"	nil	(((i )0)((l e k )1)((t r @ )0)((f ai )1)((i ng )0)))	;; ing
("electrocuting"	nil	(((i )0)((l e k )1)((t r @ )0)((k y uu t^ )1)((i ng )0)))	;; ing
("electrolaryngography"	nil	(((i) 0) ((l e k) 1) ((t r o) 0) ((l a) 1) ((r i ng) 0) ((g o) 1) ((g r @) 0) ((f ii) 0)))	;; oul
("electroluminescence"	nil	(((i) 0) ((l e k) 1) ((t r o) 0) ((l uu) 1) ((m @) 0) ((n e s) 1) ((n! s) 0)))	;; oul
("electroplating"	nil	(((i )0)((l e k )1)((t r ou )0)((p l ei t^ )1)((i ng )0)))	;; ing
("elevating"	nil	(((a )1)((l @ )0)((v ei t^ )1)((i ng )0)))	;; ing
("eliciting"	nil	(((i )0)((l i )1)((s @ t^ )0)((i ng )0)))	;; ing
("eliding"	nil	(((i )0)((l ai d )1)((i ng )0)))	;; ing
("eliminating"	nil	(((i )0)((l i )1)((m @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("ellisons"	nil	(((a) 1) ((l i) 0) ((s n! z) 0)))	;; unique
("elongating"	nil	(((ii )1)((l o ng )0)((g ei t^ )1)((i ng )0)))	;; ing
("eloping"	nil	(((i )0)((l ou p )1)((i ng )0)))	;; ing
("elses"	nil	(((a l s) 1) ((@ z) 0)))	;; unique
("elsies"	nil	(((a l) 1) ((s ii z) 0)))	;; unique
("eltroxin"	nil	(((e l) 1) ((t r o k) 1) ((s i n) 0)))	;; unique
("elucidating"	nil	(((i )0)((l uu )1)((s i d )0)((ei t^ )1)((i ng )0)))	;; ing
("eluding"	nil	(((i )0)((l uu d )1)((i ng )0)))	;; ing
("emaciating"	nil	(((i )0)((m ei )1)((s iy )0)((ei t^ )1)((i ng )0)))	;; ing
("emailing"	nil	(((ii )1)((m ei l )1)((i ng )0)))	;; ing
("emanating"	nil	(((e )1)((m @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("emancipating"	nil	(((i )0)((m a n )1)((s @ )0)((p ei t^ )1)((i ng )0)))	;; ing
("emasculating"	nil	(((i )0)((m a )1)((s k y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("embalming"	nil	(((@ m )0)((b aa m )1)((i ng )0)))	;; ing
("embanking"	nil	(((@ m )0)((b a ng k )1)((i ng )0)))	;; ing
("embargoing"	nil	(((@ m )0)((b aa )1)((g ou )0)((i ng )0)))	;; ing
("embarking"	nil	(((@ m )0)((b aa k )1)((i ng )0)))	;; ing
("embarrassing"	nil	(((@ m )0)((b a )1)((r @ s )0)((i ng )0)))	;; ing
("embassys"	nil	(((e m) 1) ((b @) 0) ((s ii z) 0)))	;; unique
("embattling"	nil	(((@ m )0)((b a )1)((t l! )0)((i ng )0)))	;; ing
("embedding"	nil	(((@ m )0)((b e d )1)((i ng )0)))	;; ing
("embellishing"	nil	(((@ m )0)((b a )1)((l i sh )0)((i ng )0)))	;; ing
("embezzling"	nil	(((@ m )0)((b e )1)((z l! )0)((i ng )0)))	;; ing
("embittering"	nil	(((@ m )0)((b i )1)((t^ @ r )0)((i ng )0)))	;; ing
("emblazoning"	nil	(((@ m )0)((b l ei )1)((z n! )0)((i ng )0)))	;; ing
("embodying"	nil	(((@ m )0)((b o )1)((d iy )0)((i ng )0)))	;; ing
("embolden"	nil	(((@ m) 0) ((b o l d) 1) ((n!) 0)))	;; oul
("emboldened"	nil	(((@ m) 0) ((b o l d) 1) ((n! d) 0)))	;; oul
("emboldening"	nil	(((@ m) 0) ((b o l d) 1) ((n!) 0) ((i ng) 0)))	;; oul
("emboldens"	nil	(((@ m) 0) ((b o l d) 1) ((n! z) 0)))	;; oul
("embossing"	nil	(((@ m )0)((b o s )1)((i ng )0)))	;; ing
("emboweling"	nil	(((@ m )0)((b ow @ l )1)((i ng )0)))	;; ing
("embowelling"	nil	(((@ m )0)((b ow @ l )1)((i ng )0)))	;; ing
("embracing"	nil	(((@ m )0)((b r ei s )1)((i ng )0)))	;; ing
("embroidering"	nil	(((@ m )0)((b r oi )1)((d @ r )0)((i ng )0)))	;; ing
("embroiling"	nil	(((@ m )0)((b r oi l )1)((i ng )0)))	;; ing
("emceeing"	nil	(((e m )0)((s ii )1)((i ng )0)))	;; ing
("emending"	nil	(((i )0)((m e n d )1)((i ng )0)))	;; ing
("emerging"	nil	(((i )0)((m @@r jh )1)((i ng )0)))	;; ing
("emigrating"	nil	(((e )1)((m @ )0)((g r ei t^ )1)((i ng )0)))	;; ing
("emissarys"	nil	(((e) 1) ((m @) 0) ((s @) 0) ((r ii z) 0)))	;; unique
("emitting"	nil	(((i )0)((m i t^ )1)((i ng )0)))	;; ing
("emoting"	nil	(((i )0)((m ou t^ )1)((i ng )0)))	;; ing
("empaneling"	nil	(((@ m )0)((p a )1)((n l! )0)((i ng )0)))	;; ing
("empanelling"	nil	(((@ m )0)((p a )1)((n l! )0)((i ng )0)))	;; ing
("empathizing"	nil	(((e m )1)((p @ )0)((th ai z )1)((i ng )0)))	;; ing
("emphasising"	nil	(((e m )1)((f @ )0)((s ai z )1)((i ng )0)))	;; ing
("emphasizing"	nil	(((e m )1)((f @ )0)((s ai z )1)((i ng )0)))	;; ing
("emplacing"	nil	(((@ m )0)((p l ei s )1)((i ng )0)))	;; ing
("employing"	nil	(((@ m )0)((p l oi )1)((i ng )0)))	;; ing
("empowering"	nil	(((@ m )0)((p ow @ r )1)((i ng )0)))	;; ing
("emptying"	nil	(((e m p )1)((t iy )0)((i ng )0)))	;; ing
("ems"	nil	(((e m z) 1)))	;; unique
("emulating"	nil	(((e )1)((m y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("emulsifying"	nil	(((i )0)((m o l )1)((s @ )0)((f ai )1)((i ng )0)))	;; ing
("enabling"	nil	(((@ n )0)((ei )1)((b l! )0)((i ng )0)))	;; ing
("enacting"	nil	(((@ n )0)((a k t )1)((i ng )0)))	;; ing
("enameling"	nil	(((i )0)((n a )1)((m l! )0)((i ng )0)))	;; ing
("enamelling"	nil	(((i )0)((n a )1)((m l! )0)((i ng )0)))	;; ing
("enamouring"	nil	(((i )0)((n a )1)((m @ r )0)((i ng )0)))	;; ing
("encapsulating"	nil	(((@ n )0)((k a p s )1)((y @ l )0)((ei t^ )1)((i ng )0)))	;; ing
("encasing"	nil	(((@ n )0)((k ei s )1)((i ng )0)))	;; ing
("enchanting"	nil	(((@ n )0)((ch aa n t )1)((i ng )0)))	;; ing
("encircling"	nil	(((@ n )0)((s @@r )1)((k l! )0)((i ng )0)))	;; ing
("enclosing"	nil	(((@ n )0)((k l ou z )1)((i ng )0)))	;; ing
("encoding"	nil	(((@ n )0)((k ou d )1)((i ng )0)))	;; ing
("encompassing"	nil	(((@ n )0)((k uh m )1)((p @ s )0)((i ng )0)))	;; ing
("encountering"	nil	(((@ n )0)((k ow n )1)((t @ r )0)((i ng )0)))	;; ing
("encouraging"	nil	(((@ n )0)((k uh )1)((r i jh )0)((i ng )0)))	;; ing
("encroaching"	nil	(((@ n )0)((k r ou ch )1)((i ng )0)))	;; ing
("encrusting"	nil	(((@ n )0)((k r uh s t )1)((i ng )0)))	;; ing
("encrypting"	nil	(((@ n )0)((k r i p t )1)((i ng )0)))	;; ing
("encumbering"	nil	(((@ n )0)((k uh m )1)((b @ r )0)((i ng )0)))	;; ing
("endangering"	nil	(((@ n )0)((d ei n )1)((jh @ r )0)((i ng )0)))	;; ing
("endearing"	nil	(((@ n )0)((d ir r )1)((i ng )0)))	;; ing
("endeavoring"	nil	(((@ n )0)((d e )1)((v @ r )0)((i ng )0)))	;; ing
("endeavouring"	nil	(((@ n )0)((d e )1)((v @ r )0)((i ng )0)))	;; ing
("ending"	nil	(((e n d )1)((i ng )0)))	;; ing
("endorsing"	nil	(((@ n )0)((d oo s )1)((i ng )0)))	;; ing
("endowing"	nil	(((@ n )0)((d ow )1)((i ng )0)))	;; ing
("enduring"	nil	(((@ n )0)((jh ur r )1)((i ng )0)))	;; ing
("enemys"	nil	(((e) 1) ((n @) 0) ((m ii z) 0)))	;; unique
("energising"	nil	(((e )1)((n @ )0)((jh ai z )1)((i ng )0)))	;; ing
("energizing"	nil	(((e )1)((n @ )0)((jh ai z )1)((i ng )0)))	;; ing
("energys"	nil	(((e) 1) ((n @) 0) ((jh ii z) 0)))	;; unique
("enervating"	nil	(((e )1)((n @ )0)((v ei t^ )1)((i ng )0)))	;; ing
("enfeebling"	nil	(((@ n )0)((f ii )1)((b l! )0)((i ng )0)))	;; ing
("enfold"	nil	(((@ n) 0) ((f o l d) 1)))	;; oul
("enfolded"	nil	(((@ n) 0) ((f o l d) 1) ((@ d) 0)))	;; oul
("enfolding"	nil	(((@ ng) 0) ((f o l d) 1) ((i ng) 0)))	;; oul
("enfoldment"	nil	(((@ n) 0) ((f o l d) 1) ((m @ n t) 0)))	;; oul
("enfolds"	nil	(((@ n) 0) ((f o l d z) 1)))	;; oul
("enforcing"	nil	(((@ n )0)((f oo s )1)((i ng )0)))	;; ing
("enfranchising"	nil	(((@ n )0)((f r a n )1)((ch ai z )0)((i ng )0)))	;; ing
("engaging"	nil	(((@ n )0)((g ei jh )1)((i ng )0)))	;; ing
("engendering"	nil	(((@ n )0)((jh e n )1)((d @ r )0)((i ng )0)))	;; ing
("engineering"	nil	(((e n )1)((jh i n )0)((ir r )1)((i ng )0)))	;; ing
("englands"	nil	(((i ng) 1) ((g l @ n d z) 0)))	;; unique
("englishmans"	nil	(((i ng) 1) ((g l i sh) 0) ((m @ n z) 0)))	;; unique
("englishs"	nil	(((i ng) 1) ((g l i sh) 0) ((@ z) 0)))	;; unique
("engraining"	nil	(((@ n )0)((g r ei n )1)((i ng )0)))	;; ing
("engraving"	nil	(((@ n )0)((g r ei v )1)((i ng )0)))	;; ing
("engrossing"	nil	(((@ n )0)((g r ou s )1)((i ng )0)))	;; ing
("engulfing"	nil	(((@ n )0)((g o l f )1)((i ng )0)))	;; ing
("enhancing"	nil	(((@ n )0)((h aa n s )1)((i ng )0)))	;; ing
("enjoining"	nil	(((@ n )0)((jh oi n )1)((i ng )0)))	;; ing
("enjoying"	nil	(((@ n )0)((jh oi )1)((i ng )0)))	;; ing
("enkindling"	nil	(((@ n )0)((k i n )1)((d l! )0)((i ng )0)))	;; ing
("enlargening"	nil	(((@ n )0)((l aa jh )1)((@ n )0)((i ng )0)))	;; ing
("enlarging"	nil	(((@ n )0)((l aa jh )1)((i ng )0)))	;; ing
("enlightening"	nil	(((@ n )0)((l ai t )1)((n! )0)((i ng )0)))	;; ing
("enlisting"	nil	(((@ n )0)((l i s t )1)((i ng )0)))	;; ing
("enlivening"	nil	(((@ n )0)((l ai v )1)((n! )0)((i ng )0)))	;; ing
("enmeshing"	nil	(((@ n )0)((m e sh )1)((i ng )0)))	;; ing
("enquiring"	nil	(((@ n )0)((k w ai @ r )1)((i ng )0)))	;; ing
("enraging"	nil	(((@ n )0)((r ei jh )1)((i ng )0)))	;; ing
("enrichening"	nil	(((@ n )0)((r i ch )1)((@ n )0)((i ng )0)))	;; ing
("enriching"	nil	(((@ n )0)((r i ch )1)((i ng )0)))	;; ing
("enrol"	nil	(((@ n) 0) ((r o l) 1)))	;; oul
("enroll"	nil	(((@ n) 0) ((r o l) 1)))	;; oul
("enrolled"	nil	(((@ n) 0) ((r o l d) 1)))	;; oul
("enrollee"	nil	(((e n) 0) ((r o l) 1) ((ii) 1)))	;; oul
("enroller"	nil	(((@ n) 0) ((r o l) 1) ((@) 0)))	;; oul
("enrolling"	nil	(((@ ng) 0) ((r o l) 1) ((i ng) 0)))	;; oul
("enrollment"	nil	(((@ n) 0) ((r o l) 1) ((m @ n t) 0)))	;; oul
("enrollments"	nil	(((@ n) 0) ((r o l) 1) ((m @ n t s) 0)))	;; oul
("enrolls"	nil	(((@ n) 0) ((r o l z) 1)))	;; oul
("enrolment"	nil	(((@ n) 0) ((r o l) 1) ((m @ n t) 0)))	;; oul
("enrolments"	nil	(((@ n) 0) ((r o l) 1) ((m @ n t s) 0)))	;; oul
("ensconcing"	nil	(((@ n )0)((s k o n s )1)((i ng )0)))	;; ing
("enscroll"	nil	(((@ n) 0) ((s k r o l) 1)))	;; oul
("enscrolled"	nil	(((@ n) 0) ((s k r o l d) 1)))	;; oul
("enscrolls"	nil	(((@ n) 0) ((s k r o l z) 1)))	;; oul
("enshrining"	nil	(((@ n )0)((sh r ai n )1)((i ng )0)))	;; ing
("enshrouding"	nil	(((@ n )0)((sh r ow d )1)((i ng )0)))	;; ing
("enslaving"	nil	(((@ n )0)((s l ei v )1)((i ng )0)))	;; ing
("ensnaring"	nil	(((@ n )0)((s n ir r )1)((i ng )0)))	;; ing
("ensuing"	nil	(((@ n )0)((s y uu )1)((i ng )0)))	;; ing
("ensuring"	nil	(((@ n )0)((sh ur r )1)((i ng )0)))	;; ing
("entailing"	nil	(((@ n )0)((t ei l )1)((i ng )0)))	;; ing
("entangling"	nil	(((@ n )0)((t a ng )1)((g l! )0)((i ng )0)))	;; ing
("entering"	nil	(((e n )1)((t @ r )0)((i ng )0)))	;; ing
("enterprising"	nil	(((e n )1)((t @ )0)((p r ai z )1)((i ng )0)))	;; ing
("entertaining"	nil	(((e n )1)((t @ )0)((t ei n )1)((i ng )0)))	;; ing
("enthralling"	nil	(((@ n )0)((th r oo l )1)((i ng )0)))	;; ing
("enthusing"	nil	(((@ n )0)((th y uu z )1)((i ng )0)))	;; ing
("enticing"	nil	(((@ n )0)((t ai s )1)((i ng )0)))	;; ing
("entitling"	nil	(((@ n )0)((t ai )1)((t l! )0)((i ng )0)))	;; ing
("entitys"	nil	(((e n) 1) ((t @) 0) ((t^ ii z) 0)))	;; unique
("entombing"	nil	(((@ n )0)((t uu m )1)((i ng )0)))	;; ing
("entrancing"	nil	(((@ n )0)((t r aa n s )1)((i ng )0)))	;; ing
("entreating"	nil	(((@ n )0)((t r ii t^ )1)((i ng )0)))	;; ing
("entrenching"	nil	(((@ n )0)((t r e n ch )1)((i ng )0)))	;; ing
("entrusting"	nil	(((@ n )0)((t r uh s t )1)((i ng )0)))	;; ing
("entwining"	nil	(((@ n )0)((t w ai n )1)((i ng )0)))	;; ing
("enumerating"	nil	(((i )0)((n y uu )1)((m @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("enunciating"	nil	(((i )0)((n uh n )1)((s iy )0)((ei t^ )1)((i ng )0)))	;; ing
("enveloping"	nil	(((@ n )0)((v a )1)((l @ p )0)((i ng )0)))	;; ing
("environing"	nil	(((@ n )0)((v ai )1)((r @ n )0)((i ng )0)))	;; ing
("envisaging"	nil	(((@ n )0)((v i )1)((z i jh )0)((i ng )0)))	;; ing
("envisioning"	nil	(((@ n )0)((v i )1)((zh n! )0)((i ng )0)))	;; ing
("envying"	nil	(((e n )1)((v iy )0)((i ng )0)))	;; ing
("enwrapping"	nil	(((@ n )0)((r a p )1)((i ng )0)))	;; ing
("epitomising"	nil	(((i )0)((p i )1)((t^ @ )0)((m ai z )1)((i ng )0)))	;; ing
("epitomizing"	nil	(((i )0)((p i )1)((t^ @ )0)((m ai z )1)((i ng )0)))	;; ing
("epoch-making"	nil	(((ii )1)((p o k )0)((m ei k )1)((i ng )0)))	;; ing
("epping"	nil	(((e )1)((p i ng )0)))	;; ing
("equalitys"	nil	(((i) 0) ((k w o l) 1) ((@) 0) ((t^ ii z) 0)))	;; unique
("equalizing"	nil	(((ii )1)((k w @ l )0)((ai z )1)((i ng )0)))	;; ing
("equalling"	nil	(((ii )1)((k w @ l )0)((i ng )0)))	;; ing
("equating"	nil	(((i )0)((k w ei t^ )1)((i ng )0)))	;; ing
("equilibrating"	nil	(((i )0)((k w i )1)((l @ )0)((b r ei t^ )1)((i ng )0)))	;; ing
("equipping"	nil	(((i )0)((k w i p )1)((i ng )0)))	;; ing
("equivocating"	nil	(((i )0)((k w i )1)((v @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("eradicating"	nil	(((i )0)((r a )1)((d i )0)((k ei t^ )1)((i ng )0)))	;; ing
("erasing"	nil	(((i )0)((r ei z )1)((i ng )0)))	;; ing
("erecting"	nil	(((i )0)((r e k t )1)((i ng )0)))	;; ing
("ernests"	nil	(((@@r) 1) ((n @ s t s) 0)))	;; unique
("eroding"	nil	(((i )0)((r ou d )1)((i ng )0)))	;; ing
("eroticising"	nil	(((i )0)((r o )1)((t^ i s )0)((ai z )1)((i ng )0)))	;; ing
("eroticizing"	nil	(((i )0)((r o )1)((t^ i s )0)((ai z )1)((i ng )0)))	;; ing
("erring"	nil	(((@@r r )1)((i ng )0)))	;; ing
("erroring"	nil	(((e )1)((r @ r )0)((i ng )0)))	;; ing
("erupting"	nil	(((i )0)((r uh p t )1)((i ng )0)))	;; ing
("erwins"	nil	(((@@r) 1) ((w i n z) 0)))	;; unique
("es"	nil	(((ii z) 1)))	;; unique
("escalating"	nil	(((e )1)((s k @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("escaping"	nil	(((i )0)((s k ei p )1)((i ng )0)))	;; ing
("eschewing"	nil	(((i s )0)((ch uu )1)((i ng )0)))	;; ing
("escorting"	nil	(((i )0)((s k oo t^ )1)((i ng )0)))	;; ing
("espousing"	nil	(((i )0)((s p ow z )1)((i ng )0)))	;; ing
("espying"	nil	(((i )0)((s p ai )1)((i ng )0)))	;; ing
("essaying"	nil	(((e )1)((s ei )0)((i ng )0)))	;; ing
("essexs"	nil	(((e) 1) ((s i k s) 0) ((@ z) 0)))	;; unique
("establishing"	nil	(((i )0)((s t a )1)((b l i sh )0)((i ng )0)))	;; ing
("estellas"	nil	(((i) 0) ((s t a) 1) ((l @ z) 0)))	;; unique
("estimating"	nil	(((e )1)((s t @ )0)((m ei t^ )1)((i ng )0)))	;; ing
("estranging"	nil	(((i )0)((s t r ei n jh )1)((i ng )0)))	;; ing
("etching"	nil	(((e ch )1)((i ng )0)))	;; ing
("ethernetting"	nil	(((ii )1)((th @ )0)((n e t^ )1)((i ng )0)))	;; ing
("ethiopias"	nil	(((ii) 1) ((th ii) 0) ((ou) 1) ((p ii @ z) 0)))	;; unique
("ets"	nil	(((ei z) 1)))	;; unique
("eulogizing"	nil	(((y @ )1)((l @ )0)((jh ai z )1)((i ng )0)))	;; ing
("eunuchising"	nil	(((y uu )1)((n @ k )0)((ai z )1)((i ng )0)))	;; ing
("europes"	nil	(((y uu) 1) ((r @ p s) 0)))	;; unique
("evacuating"	nil	(((i )0)((v a )1)((k y uw )0)((ei t^ )1)((i ng )0)))	;; ing
("evading"	nil	(((i )0)((v ei d )1)((i ng )0)))	;; ing
("evaluating"	nil	(((i )0)((v a )1)((l y uw )0)((ei t^ )1)((i ng )0)))	;; ing
("evangelising"	nil	(((i )0)((v a n )1)((jh @ l )0)((ai z )1)((i ng )0)))	;; ing
("evangelizing"	nil	(((i )0)((v a n )1)((jh @ l )0)((ai z )1)((i ng )0)))	;; ing
("evaporating"	nil	(((i )0)((v a )1)((p @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("evas"	nil	(((ii) 1) ((v @ z) 0)))	;; unique
("evelyns"	nil	(((ii) 1) ((v @) 0) ((l i n z) 0)))	;; unique
("evening"	nil	(((ii v )1)((n i ng )0)))	;; ing
("eventing"	nil	(((i )0)((v e n t )1)((i ng )0)))	;; ing
("eventuating"	nil	(((i )0)((v e n )1)((ch uw )0)((ei t^ )1)((i ng )0)))	;; ing
("ever-changing"	nil	(((e )1)((v @ )0)((ch ei n jh )1)((i ng )0)))	;; ing
("ever-contracting"	nil	(((e )1)((v @ )0)((k @ n )0)((t r a k t )1)((i ng )0)))	;; ing
("ever-increasing"	nil	(((e )1)((v @ r )0)((i n )0)((k r ii s )1)((i ng )0)))	;; ing
("ever-lasting"	nil	(((e )1)((v @ )0)((l aa s t )1)((i ng )0)))	;; ing
("ever-loving"	nil	(((e )1)((v @ )0)((l uh v )1)((i ng )0)))	;; ing
("everchanging"	nil	(((e )1)((v @ )0)((ch ei n jh )1)((i ng )0)))	;; ing
("everetts"	nil	(((e) 1) ((v @) 0) ((r @ t s) 0)))	;; unique
("everflowing"	nil	(((e )1)((v @ )0)((f l ou )1)((i ng )0)))	;; ing
("evergrowing"	nil	(((e )1)((v @ )0)((g r ou )1)((i ng )0)))	;; ing
("everlasting"	nil	(((e )1)((v @ )0)((l aa s t )1)((i ng )0)))	;; ing
("everybodys"	nil	(((e v) 1) ((r i) 0) ((b o) 0) ((d ii z) 0)))	;; unique
("everymans"	nil	(((e v) 1) ((r ii) 0) ((m a n z) 1)))	;; unique
("evicting"	nil	(((i )0)((v i k t )1)((i ng )0)))	;; ing
("evidencing"	nil	(((e )1)((v i )0)((d @ n s )0)((i ng )0)))	;; ing
("evil-smelling"	nil	(((ii )1)((v l! )0)((s m a l )1)((i ng )0)))	;; ing
("evincing"	nil	(((i )0)((v i n s )1)((i ng )0)))	;; ing
("eviscerating"	nil	(((i )0)((v i )1)((s @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("evoking"	nil	(((i )0)((v ou k )1)((i ng )0)))	;; ing
("evolving"	nil	(((i )0)((v o l v )1)((i ng )0)))	;; ing
("ewing"	nil	(((y uu )1)((i ng )0)))	;; ing
("ewings"	nil	(((y uu) 1) ((i ng z) 0)))	;; unique
("exacerbating"	nil	(((@ g )0)((z a )1)((s @ )0)((b ei t^ )1)((i ng )0)))	;; ing
("exacting"	nil	(((@ g )0)((z a k t )1)((i ng )0)))	;; ing
("exaggerating"	nil	(((@ g )0)((z a )1)((jh @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("exalting"	nil	(((@ g )0)((z oo l t )1)((i ng )0)))	;; ing
("examining"	nil	(((@ g )0)((z a )1)((m i n )0)((i ng )0)))	;; ing
("exasperating"	nil	(((@ g )0)((z aa )1)((s p @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("excavating"	nil	(((e k )1)((s k @ )0)((v ei t^ )1)((i ng )0)))	;; ing
("exceeding"	nil	(((@ k )0)((s ii d )1)((i ng )0)))	;; ing
("excellencys"	nil	(((e k) 1) ((s @ l) 0) ((@ n s) 0) ((ii z) 0)))	;; unique
("excelling"	nil	(((@ k )0)((s a l )1)((i ng )0)))	;; ing
("excepting"	nil	(((@ k )0)((s e p t )1)((i ng )0)))	;; ing
("excerpting"	nil	(((e k )1)((s @@r p t )0)((i ng )0)))	;; ing
("exchanging"	nil	(((@ k s )0)((ch ei n jh )1)((i ng )0)))	;; ing
("excising"	nil	(((@ k )0)((s ai z )1)((i ng )0)))	;; ing
("exciting"	nil	(((@ k )0)((s ai t^ )1)((i ng )0)))	;; ing
("exclaiming"	nil	(((@ k )0)((s k l ei m )1)((i ng )0)))	;; ing
("excluding"	nil	(((@ k )0)((s k l uu d )1)((i ng )0)))	;; ing
("excommunicating"	nil	(((e k )1)((s k @ )0)((m y uu )1)((n @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("excoriating"	nil	(((@ k )0)((s k oo )1)((r iy )0)((ei t^ )1)((i ng )0)))	;; ing
("excreting"	nil	(((@ k )0)((s k r ii t^ )1)((i ng )0)))	;; ing
("excruciating"	nil	(((@ k )0)((s k r uu )1)((sh iy )0)((ei t^ )1)((i ng )0)))	;; ing
("exculpating"	nil	(((e k )1)((s k o l )0)((p ei t^ )1)((i ng )0)))	;; ing
("excusing"	nil	(((@ k )0)((s k y uu z )1)((i ng )0)))	;; ing
("executing"	nil	(((e k )1)((s @ )0)((k y uu t^ )1)((i ng )0)))	;; ing
("exemplifying"	nil	(((@ g )0)((z e m )1)((p l @ )0)((f ai )1)((i ng )0)))	;; ing
("exempting"	nil	(((@ g )0)((z e m p t )1)((i ng )0)))	;; ing
("exercising"	nil	(((e k )1)((s @ )0)((s ai z )1)((i ng )0)))	;; ing
("exerting"	nil	(((@ g )0)((z @@r t^ )1)((i ng )0)))	;; ing
("exfoliate"	nil	(((e k s) 0) ((f o) 1) ((l ii) 0) ((ei t) 0)))	;; oul
("exfoliated"	nil	(((e k s) 0) ((f o) 1) ((l ii) 0) ((ei t^) 1) ((@ d) 0)))	;; oul
("exfoliates"	nil	(((e k s) 0) ((f o) 1) ((l ii) 0) ((ei t s) 0)))	;; oul
("exfoliating"	nil	(((e k s) 0) ((f o) 1) ((l ii) 0) ((ei t^) 1) ((i ng) 0)))	;; oul
("exfoliation"	nil	(((e k s) 0) ((f o) 1) ((l ii) 0) ((ei) 1) ((sh n!) 0)))	;; oul
("exfoliative"	nil	(((e k s) 0) ((f o) 1) ((l ii @ t^) 0) ((i v) 0)))	;; oul
("exfoliator"	nil	(((e k s) 0) ((f o) 1) ((l ii) 0) ((ei t^) 1) ((@) 0)))	;; oul
("exhaling"	nil	(((e k s )0)((h ei l )1)((i ng )0)))	;; ing
("exhausting"	nil	(((@ g )0)((z oo s t )1)((i ng )0)))	;; ing
("exhibiting"	nil	(((@ g )0)((z i )1)((b @ t^ )0)((i ng )0)))	;; ing
("exhilarating"	nil	(((@ g )0)((z i )1)((l @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("exhorting"	nil	(((@ g )0)((z oo t^ )1)((i ng )0)))	;; ing
("exhuming"	nil	(((e k s )0)((h y uu m )1)((i ng )0)))	;; ing
("exiling"	nil	(((e k )1)((s ai l )0)((i ng )0)))	;; ing
("existing"	nil	(((@ g )0)((z i s t )1)((i ng )0)))	;; ing
("exiting"	nil	(((e g )1)((z i t^ )0)((i ng )0)))	;; ing
("exonerating"	nil	(((@ g )0)((z o )1)((n @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("exorcising"	nil	(((e k )1)((s oo )0)((s ai z )1)((i ng )0)))	;; ing
("exorcizing"	nil	(((e k )1)((s oo )0)((s ai z )1)((i ng )0)))	;; ing
("expanding"	nil	(((@ k )0)((s p a n d )1)((i ng )0)))	;; ing
("expecting"	nil	(((@ k )0)((s p e k t )1)((i ng )0)))	;; ing
("expectorating"	nil	(((@ k )0)((s p e k )1)((t @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("expediting"	nil	(((e k )1)((s p @ )0)((d ai t^ )1)((i ng )0)))	;; ing
("expelling"	nil	(((@ k )0)((s p a l )1)((i ng )0)))	;; ing
("expending"	nil	(((@ k )0)((s p e n d )1)((i ng )0)))	;; ing
("expensing"	nil	(((@ k )0)((s p e n s )1)((i ng )0)))	;; ing
("experiencing"	nil	(((@ k )0)((s p ir )1)((r iy @ n s )0)((i ng )0)))	;; ing
("experimenting"	nil	(((@ k )0)((s p e )1)((r @ )0)((m e n t )1)((i ng )0)))	;; ing
("expiring"	nil	(((@ k )0)((s p ai @ r )1)((i ng )0)))	;; ing
("explaining"	nil	(((@ k )0)((s p l ei n )1)((i ng )0)))	;; ing
("exploding"	nil	(((@ k )0)((s p l ou d )1)((i ng )0)))	;; ing
("exploiting"	nil	(((@ k )0)((s p l oi t^ )1)((i ng )0)))	;; ing
("exploring"	nil	(((@ k )0)((s p l oo r )1)((i ng )0)))	;; ing
("exponentiating"	nil	(((e k )1)((s p @ )0)((n e n )1)((sh iy )0)((ei t^ )1)((i ng )0)))	;; ing
("exporting"	nil	(((@ k )0)((s p oo t^ )1)((i ng )0)))	;; ing
("exposing"	nil	(((@ k )0)((s p ou z )1)((i ng )0)))	;; ing
("expostulating"	nil	(((i k s )0)((p o s )1)((ch @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("expounding"	nil	(((@ k )0)((s p ow n d )1)((i ng )0)))	;; ing
("expressing"	nil	(((@ k )0)((s p r e s )1)((i ng )0)))	;; ing
("expropriating"	nil	(((@ k )0)((s p r ou )1)((p r iy )0)((ei t^ )1)((i ng )0)))	;; ing
("expunging"	nil	(((@ k )0)((s p uh n jh )1)((i ng )0)))	;; ing
("expurgating"	nil	(((e k )1)((s p @ )0)((g ei t^ )1)((i ng )0)))	;; ing
("extemporising"	nil	(((@ k )0)((s t e m )1)((p @ )0)((r ai z )1)((i ng )0)))	;; ing
("extemporizing"	nil	(((@ k )0)((s t e m )1)((p @ )0)((r ai z )1)((i ng )0)))	;; ing
("extending"	nil	(((@ k )0)((s t e n d )1)((i ng )0)))	;; ing
("extenuating"	nil	(((@ k )0)((s t e )1)((n y uw )0)((ei t^ )1)((i ng )0)))	;; ing
("exterminating"	nil	(((@ k )0)((s t @@r )1)((m @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("externalising"	nil	(((@ k )0)((s t @@r )1)((n l! )0)((ai z )1)((i ng )0)))	;; ing
("externalizing"	nil	(((@ k )0)((s t @@r )1)((n l! )0)((ai z )1)((i ng )0)))	;; ing
("extinguishing"	nil	(((@ k )0)((s t i ng )1)((g w i sh )0)((i ng )0)))	;; ing
("extirpating"	nil	(((e k )1)((s t @ )0)((p ei t^ )1)((i ng )0)))	;; ing
("extol"	nil	(((@ k) 0) ((s t o l) 1)))	;; oul
("extolled"	nil	(((@ k) 0) ((s t o l d) 1)))	;; oul
("extoller"	nil	(((@ k) 0) ((s t o l) 1) ((@) 0)))	;; oul
("extolling"	nil	(((@ k) 0) ((s t o l) 1) ((i ng) 0)))	;; oul
("extolment"	nil	(((@ k) 0) ((s t o l) 1) ((m @ n t) 0)))	;; oul
("extols"	nil	(((@ k) 0) ((s t o l z) 1)))	;; oul
("extorting"	nil	(((@ k )0)((s t oo t^ )1)((i ng )0)))	;; ing
("extracting"	nil	(((@ k )0)((s t r a k t )1)((i ng )0)))	;; ing
("extraditing"	nil	(((e k )1)((s t r @ )0)((d ai t^ )1)((i ng )0)))	;; ing
("extrapolating"	nil	(((@ k )0)((s t r a )1)((p @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("extrasolar"	nil	(((e k) 1) ((s t r @) 0) ((s o) 1) ((l @) 0)))	;; oul
("extricating"	nil	(((e k )1)((s t r @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("extruding"	nil	(((@ k )0)((s t r uu d )1)((i ng )0)))	;; ing
("exuding"	nil	(((@ g z )0)((y uu d )1)((i ng )0)))	;; ing
("exulting"	nil	(((@ g )0)((z o l t )1)((i ng )0)))	;; ing
("exxons"	nil	(((e k) 1) ((s o n z) 0)))	;; unique
("eye-catching"	nil	(((ai )1)((k a ch )1)((i ng )0)))	;; ing
("eye-holes"	nil	(((ai) 1) ((h o l z) 0)))	;; oul
("eyeballing"	nil	(((ai )1)((b - oo l )0)((i ng )0)))	;; ing
("eyecatching"	nil	(((ai )1)((k a ch )1)((i ng )0)))	;; ing
("eyeing"	nil	(((ai )1)((i ng )0)))	;; ing
("ezekiels"	nil	(((i) 0) ((z ii) 1) ((k ii @ l z) 0)))	;; unique
("fabling"	nil	(((f ei )1)((b l! )0)((i ng )0)))	;; ing
("fabricating"	nil	(((f a )1)((b r i k )0)((ei t^ )1)((i ng )0)))	;; ing
("face-saving"	nil	(((f ei s )1)((s ei v )1)((i ng )0)))	;; ing
("facilitating"	nil	(((f @ )0)((s i )1)((l @ )0)((t ei t^ )1)((i ng )0)))	;; ing
("facilitys"	nil	(((f @) 0) ((s i) 1) ((l @) 0) ((t^ ii z) 0)))	;; unique
("facing"	nil	(((f ei s )1)((i ng )0)))	;; ing
("fact-finding"	nil	(((f a k t )1)((f ai n d )1)((i ng )0)))	;; ing
("factfinding"	nil	(((f a k t )1)((f ai n d )1)((i ng )0)))	;; ing
("factoring"	nil	(((f a k )1)((t @ r )0)((i ng )0)))	;; ing
("factorising"	nil	(((f a k )1)((t @ r )0)((ai z )1)((i ng )0)))	;; ing
("factorizing"	nil	(((f a k )1)((t @ r )0)((ai z )1)((i ng )0)))	;; ing
("fading"	nil	(((f ei d )1)((i ng )0)))	;; ing
("fagging"	nil	(((f a g )1)((i ng )0)))	;; ing
("faggoting"	nil	(((f a )1)((g @ t^ )0)((i ng )0)))	;; ing
("failing"	nil	(((f ei l )1)((i ng )0)))	;; ing
("fainting"	nil	(((f ei n t )1)((i ng )0)))	;; ing
("fair-looking"	nil	(((f ii @ )1)((l u k )1)((i ng )0)))	;; ing
("fairdealing"	nil	(((f ii @ )1)((d ii l )1)((i ng )0)))	;; ing
("fairing"	nil	(((f ir r )1)((i ng )0)))	;; ing
("faking"	nil	(((f ei k )1)((i ng )0)))	;; ing
("falling"	nil	(((f oo l )1)((i ng )0)))	;; ing
("fallowing"	nil	(((f a )1)((l ou )0)((i ng )0)))	;; ing
("falsifying"	nil	(((f oo l s )1)((@ )0)((f ai )1)((i ng )0)))	;; ing
("faltering"	nil	(((f oo l )1)((t @ r )0)((i ng )0)))	;; ing
("familiarising"	nil	(((f @ )0)((m i )1)((l y @ r )0)((ai z )1)((i ng )0)))	;; ing
("familiarizing"	nil	(((f @ )0)((m i )1)((l y @ r )0)((ai z )1)((i ng )0)))	;; ing
("familys"	nil	(((f a) 1) ((m @) 0) ((l ii z) 0)))	;; unique
("fancying"	nil	(((f a n )1)((s iy )0)((i ng )0)))	;; ing
("fanning"	nil	(((f a n )1)((i ng )0)))	;; ing
("fannys"	nil	(((f a) 1) ((n ii z) 0)))	;; unique
("fantasising"	nil	(((f a n )1)((t @ )0)((s ai z )1)((i ng )0)))	;; ing
("fantasizing"	nil	(((f a n )1)((t @ )0)((s ai z )1)((i ng )0)))	;; ing
("far-reaching"	nil	(((f - aa )0)((r ii ch )1)((i ng )0)))	;; ing
("faradays"	nil	(((f a) 1) ((r @) 0) ((d ei z) 0)))	;; unique
("faring"	nil	(((f ir r )1)((i ng )0)))	;; ing
("farming"	nil	(((f aa m )1)((i ng )0)))	;; ing
("farrowing"	nil	(((f a )1)((r ou )0)((i ng )0)))	;; ing
("farthing"	nil	(((f aa )1)((dh i ng )0)))	;; ing
("farting"	nil	(((f aa t^ )1)((i ng )0)))	;; ing
("fascinating"	nil	(((f a )1)((s i n )0)((ei t^ )1)((i ng )0)))	;; ing
("fashioning"	nil	(((f a )1)((sh n! )0)((i ng )0)))	;; ing
("fast-flowing"	nil	(((f aa s t )1)((f l ou )1)((i ng )0)))	;; ing
("fastening"	nil	(((f aa s )1)((n! )0)((i ng )0)))	;; ing
("fasting"	nil	(((f aa s t )1)((i ng )0)))	;; ing
("fastloading"	nil	(((f aa s t )1)((l ou d )1)((i ng )0)))	;; ing
("fathering"	nil	(((f aa )1)((dh @ r )0)((i ng )0)))	;; ing
("fathoming"	nil	(((f a )1)((dh m! )0)((i ng )0)))	;; ing
("fatiguing"	nil	(((f @ )0)((t ii g )1)((i ng )0)))	;; ing
("fattening"	nil	(((f a t )1)((n! )0)((i ng )0)))	;; ing
("fatting"	nil	(((f a t^ )1)((i ng )0)))	;; ing
("fault-finding"	nil	(((f oo l t )1)((f ai n d )1)((i ng )0)))	;; ing
("faultfinding"	nil	(((f oo l t )1)((f ai n d )1)((i ng )0)))	;; ing
("faulting"	nil	(((f oo l t )1)((i ng )0)))	;; ing
("favoring"	nil	(((f ei )1)((v @ r )0)((i ng )0)))	;; ing
("favouring"	nil	(((f ei )1)((v @ r )0)((i ng )0)))	;; ing
("fawning"	nil	(((f oo n )1)((i ng )0)))	;; ing
("faxing"	nil	(((f a k s )1)((i ng )0)))	;; ing
("faxs"	nil	(((f a k s) 1) ((@ z) 0)))	;; unique
("fazing"	nil	(((f ei z )1)((i ng )0)))	;; ing
("fearing"	nil	(((f ir r )1)((i ng )0)))	;; ing
("fearsome-looking"	nil	(((f ii @ )1)((s m! )0)((l u k )1)((i ng )0)))	;; ing
("feasting"	nil	(((f ii s t )1)((i ng )0)))	;; ing
("featherbedding"	nil	(((f e )1)((dh @ )0)((b e d )1)((i ng )0)))	;; ing
("feathering"	nil	(((f e )1)((dh @ r )0)((i ng )0)))	;; ing
("featherstitching"	nil	(((f e )1)((dh @ )0)((s t i ch )1)((i ng )0)))	;; ing
("featuring"	nil	(((f ii )1)((ch @ r )0)((i ng )0)))	;; ing
("federalising"	nil	(((f e )1)((d @ )0)((r @ l )0)((ai z )1)((i ng )0)))	;; ing
("federalizing"	nil	(((f e )1)((d @ )0)((r @ l )0)((ai z )1)((i ng )0)))	;; ing
("federating"	nil	(((f e )1)((d @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("feeding"	nil	(((f ii d )1)((i ng )0)))	;; ing
("feeling"	nil	(((f ii l )1)((i ng )0)))	;; ing
("feigning"	nil	(((f ei n )1)((i ng )0)))	;; ing
("feinting"	nil	(((f ei n t )1)((i ng )0)))	;; ing
("felicitating"	nil	(((f @ )0)((l i )1)((s i )0)((t ei t^ )1)((i ng )0)))	;; ing
("felling"	nil	(((f a l )1)((i ng )0)))	;; ing
("fellowing"	nil	(((f a )1)((l ou )0)((i ng )0)))	;; ing
("felodipine"	nil	(((f @) 0) ((l o) 1) ((d @) 0) ((p ii n) 1)))	;; unique
("feminising"	nil	(((f e )1)((m @ )0)((n ai z )1)((i ng )0)))	;; ing
("feminizing"	nil	(((f e )1)((m @ )0)((n ai z )1)((i ng )0)))	;; ing
("fencing"	nil	(((f e n s )1)((i ng )0)))	;; ing
("fencings"	nil	(((f e n s) 1) ((i ng z) 0)))	;; unique
("fending"	nil	(((f e n d )1)((i ng )0)))	;; ing
("fenestrating"	nil	(((f e )1)((n @ )0)((s t r ei t^ )1)((i ng )0)))	;; ing
("fergusons"	nil	(((f @@r) 1) ((g @) 0) ((s n! z) 0)))	;; unique
("fermats"	nil	(((f @) 0) ((m a t s) 1)))	;; unique
("fermenting"	nil	(((f @ )0)((m e n t )1)((i ng )0)))	;; ing
("ferocious-looking"	nil	(((f @ )0)((r ou )1)((sh @ s )0)((l u k )1)((i ng )0)))	;; ing
("ferrantis"	nil	(((f @) 0) ((r a n) 1) ((t ii z) 0)))	;; unique
("ferreting"	nil	(((f e )1)((r @ t^ )0)((i ng )0)))	;; ing
("ferro"	nil	(((f e) 1) ((r ou) 0))) 	;; drug
("ferrying"	nil	(((f e )1)((r iy )0)((i ng )0)))	;; ing
("fertilising"	nil	(((f @@r )1)((t^ i l )0)((ai z )1)((i ng )0)))	;; ing
("fertilizing"	nil	(((f @@r )1)((t^ i l )0)((ai z )1)((i ng )0)))	;; ing
("fes"	nil	(((f ei z) 1)))	;; unique
("fessing"	nil	(((f e s )1)((i ng )0)))	;; ing
("festering"	nil	(((f e )1)((s t @ r )0)((i ng )0)))	;; ing
("festooning"	nil	(((f e )0)((s t uu n )1)((i ng )0)))	;; ing
("fetching"	nil	(((f e ch )1)((i ng )0)))	;; ing
("feting"	nil	(((f ei t^ )1)((i ng )0)))	;; ing
("fetishizing"	nil	(((f e )1)((t^ i sh )0)((ai z )1)((i ng )0)))	;; ing
("fettering"	nil	(((f e )1)((t^ @ r )0)((i ng )0)))	;; ing
("feudalising"	nil	(((f y uu d )1)((l! )0)((ai z )1)((i ng )0)))	;; ing
("feudalizing"	nil	(((f y uu d )1)((l! )0)((ai z )1)((i ng )0)))	;; ing
("feuding"	nil	(((f y uu d )1)((i ng )0)))	;; ing
("fevering"	nil	(((f ii )1)((v @ r )0)((i ng )0)))	;; ing
("fgrepping"	nil	(((e f )1)((g r e p )1)((i ng )0)))	;; ing
("fibbing"	nil	(((f i b )1)((i ng )0)))	;; ing
("fibrillating"	nil	(((f ai )1)((b r @ )0)((l ei t^ )0)((i ng )0)))	;; ing
("fiddling"	nil	(((f i )1)((d l! )0)((i ng )0)))	;; ing
("fidgeting"	nil	(((f i )1)((jh @ t^ )0)((i ng )0)))	;; ing
("fielding"	nil	(((f ii l d )1)((i ng )0)))	;; ing
("fierce-looking"	nil	(((f ii @ s )1)((l u k )1)((i ng )0)))	;; ing
("fiftyfold"	nil	(((f i f) 1) ((t ii) 0) ((f o l d) 1)))	;; oul
("fighting"	nil	(((f ai t^ )1)((i ng )0)))	;; ing
("figuring"	nil	(((f i )1)((g @ r )0)((i ng )0)))	;; ing
("fijis"	nil	(((f ii) 1) ((jh ii z) 0)))	;; unique
("filching"	nil	(((f i l ch )1)((i ng )0)))	;; ing
("filibustering"	nil	(((f i )1)((l @ )0)((b uh )1)((s t @ r )0)((i ng )0)))	;; ing
("filigreeing"	nil	(((f i )1)((l @ )0)((g r ii )1)((i ng )0)))	;; ing
("filing"	nil	(((f ai l )1)((i ng )0)))	;; ing
("filleting"	nil	(((f i )1)((l i t^ )0)((i ng )0)))	;; ing
("filling"	nil	(((f i l )1)((i ng )0)))	;; ing
("filming"	nil	(((f i l m )1)((i ng )0)))	;; ing
("filmmaking"	nil	(((f i l m )1)((m ei k )1)((i ng )0)))	;; ing
("filtering"	nil	(((f i l )1)((t @ r )0)((i ng )0)))	;; ing
("filtrating"	nil	(((f i l )0)((t r ei t^ )1)((i ng )0)))	;; ing
("finagling"	nil	(((f i )0)((n ei )1)((g l! )0)((i ng )0)))	;; ing
("finalising"	nil	(((f ai )1)((n l! )0)((ai z )1)((i ng )0)))	;; ing
("finalizing"	nil	(((f ai )1)((n l! )0)((ai z )1)((i ng )0)))	;; ing
("financing"	nil	(((f ai )1)((n a n s )0)((i ng )0)))	;; ing
("finchs"	nil	(((f i n ch) 1) ((@ z) 0)))	;; unique
("finding"	nil	(((f ai n d )1)((i ng )0)))	;; ing
("finessing"	nil	(((f i )0)((n e s )1)((i ng )0)))	;; ing
("fingering"	nil	(((f i ng )1)((g @ r )0)((i ng )0)))	;; ing
("fingerprinting"	nil	(((f i ng )1)((g @ )0)((p r i n t )1)((i ng )0)))	;; ing
("finicking"	nil	(((f i )1)((n i )0)((k i ng )0)))	;; ing
("finishing"	nil	(((f i )1)((n i sh )0)((i ng )0)))	;; ing
("finlands"	nil	(((f i n) 1) ((l @ n d z) 0)))	;; unique
("finnegans"	nil	(((f i) 1) ((n i) 0) ((g @ n z) 0)))	;; unique
("fire-control"	nil	(((f ai @) 1) ((k @ n) 0) ((t r o l) 1)))	;; oul
("fire-controls"	nil	(((f ai @) 1) ((k @ n) 0) ((t r o l z) 1)))	;; oul
("fire-fighting"	nil	(((f ai @ )1)((f ai t^ )1)((i ng )0)))	;; ing
("fire-spouting"	nil	(((f ai @ )1)((s p ow t^ )1)((i ng )0)))	;; ing
("firebombing"	nil	(((f ai @ )1)((b o m )1)((i ng )0)))	;; ing
("firebreathing"	nil	(((f ai @ )1)((b r ii dh )1)((i ng )0)))	;; ing
("firefighting"	nil	(((f ai @ )1)((f ai t^ )1)((i ng )0)))	;; ing
("firemans"	nil	(((f ai @) 1) ((m @ n z) 0)))	;; unique
("firemens"	nil	(((f ai @) 1) ((m @ n z) 0)))	;; unique
("fireproofing"	nil	(((f ai @ )1)((p r uu f )1)((i ng )0)))	;; ing
("firestones"	nil	(((f ai @) 1) ((s t ou n z) 0)))	;; unique
("firewalling"	nil	(((f ai @ )1)((w oo l )1)((i ng )0)))	;; ing
("firing"	nil	(((f ai @ r )1)((i ng )0)))	;; ing
("firming"	nil	(((f @@r m )1)((i ng )0)))	;; ing
("fischers"	nil	(((f i) 1) ((sh @ z) 0)))	;; unique
("fishermans"	nil	(((f i sh) 1) ((@) 0) ((m @ n z) 0)))	;; unique
("fishermens"	nil	(((f i sh) 1) ((@) 0) ((m @ n z) 0)))	;; unique
("fishing"	nil	(((f i sh )1)((i ng )0)))	;; ing
("fishs"	nil	(((f i sh) 1) ((@ z) 0)))	;; unique
("fissioning"	nil	(((f i )1)((sh n! )0)((i ng )0)))	;; ing
("fitting"	nil	(((f i t^ )1)((i ng )0)))	;; ing
("fitzroys"	nil	(((f i t s) 1) ((r oi z) 0)))	;; unique
("five-year-old"	nil	(((f ai v) 1) ((y ir r) 0) ((o l d) 1)))	;; oul
("five-year-olds"	nil	(((f ai v) 1) ((y ir r) 0) ((o l d z) 1)))	;; oul
("fivefold"	nil	(((f ai v) 1) ((f o l d) 0)))	;; oul
("fixating"	nil	(((f i k s )0)((ei t^ )1)((i ng )0)))	;; ing
("fixing"	nil	(((f i k s )1)((i ng )0)))	;; ing
("fizzing"	nil	(((f i z )1)((i ng )0)))	;; ing
("fizzling"	nil	(((f i )1)((z l! )0)((i ng )0)))	;; ing
("flabbergasting"	nil	(((f l a )1)((b @ )0)((g aa s t )1)((i ng )0)))	;; ing
("flagellating"	nil	(((f l a )1)((jh @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("flagging"	nil	(((f l a g )1)((i ng )0)))	;; ing
("flagpole"	nil	(((f l a g) 1) ((p o l) 0)))	;; oul
("flagpoles"	nil	(((f l a g) 1) ((p o l z) 0)))	;; oul
("flailing"	nil	(((f l ei l )1)((i ng )0)))	;; ing
("flaking"	nil	(((f l ei k )1)((i ng )0)))	;; ing
("flaming"	nil	(((f l ei m )1)((i ng )0)))	;; ing
("flanging"	nil	(((f l a n jh )1)((i ng )0)))	;; ing
("flanking"	nil	(((f l a ng k )1)((i ng )0)))	;; ing
("flanneling"	nil	(((f l a )1)((n l! )0)((i ng )0)))	;; ing
("flannelling"	nil	(((f l a )1)((n l! )0)((i ng )0)))	;; ing
("flapping"	nil	(((f l a p )1)((i ng )0)))	;; ing
("flaring"	nil	(((f l ir r )1)((i ng )0)))	;; ing
("flashing"	nil	(((f l a sh )1)((i ng )0)))	;; ing
("flat-dwelling"	nil	(((f l a t )1)((d w a l )1)((i ng )0)))	;; ing
("flattening"	nil	(((f l a t )1)((n! )0)((i ng )0)))	;; ing
("flattering"	nil	(((f l a )1)((t^ @ r )0)((i ng )0)))	;; ing
("flatting"	nil	(((f l a t^ )1)((i ng )0)))	;; ing
("flaunting"	nil	(((f l oo n t )1)((i ng )0)))	;; ing
("flavoring"	nil	(((f l ei )1)((v @ r )0)((i ng )0)))	;; ing
("flavouring"	nil	(((f l ei )1)((v @ r )0)((i ng )0)))	;; ing
("flaying"	nil	(((f l ei )1)((i ng )0)))	;; ing
("flecking"	nil	(((f l e k )1)((i ng )0)))	;; ing
("fledgeling"	nil	(((f l e jh )1)((l i ng )0)))	;; ing
("fledging"	nil	(((f l e jh )1)((i ng )0)))	;; ing
("fledgling"	nil	(((f l e jh )1)((l i ng )0)))	;; ing
("fleecing"	nil	(((f l ii s )1)((i ng )0)))	;; ing
("fleeing"	nil	(((f l ii )1)((i ng )0)))	;; ing
("fleeting"	nil	(((f l ii t^ )1)((i ng )0)))	;; ing
("fleming"	nil	(((f l e )1)((m i ng )0)))	;; ing
("fleshing"	nil	(((f l e sh )1)((i ng )0)))	;; ing
("fletchers"	nil	(((f l e) 1) ((ch @ z) 0)))	;; unique
("flexing"	nil	(((f l e k s )1)((i ng )0)))	;; ing
("flickering"	nil	(((f l i )1)((k @ r )0)((i ng )0)))	;; ing
("flicking"	nil	(((f l i k )1)((i ng )0)))	;; ing
("flinching"	nil	(((f l i n ch )1)((i ng )0)))	;; ing
("flinging"	nil	(((f l i ng )1)((i ng )0)))	;; ing
("flipping"	nil	(((f l i p )1)((i ng )0)))	;; ing
("flirting"	nil	(((f l @@r t^ )1)((i ng )0)))	;; ing
("flittering"	nil	(((f l i )1)((t^ @ r )0)((i ng )0)))	;; ing
("flitting"	nil	(((f l i t^ )1)((i ng )0)))	;; ing
("floating"	nil	(((f l ou t^ )1)((i ng )0)))	;; ing
("flocking"	nil	(((f l o k )1)((i ng )0)))	;; ing
("flogging"	nil	(((f l o g )1)((i ng )0)))	;; ing
("flooding"	nil	(((f l uh d )1)((i ng )0)))	;; ing
("floodlighting"	nil	(((f l uh d )1)((l ai t^ )1)((i ng )0)))	;; ing
("flooring"	nil	(((f l oo r )1)((i ng )0)))	;; ing
("floorplanning"	nil	(((f l oo )1)((p l a n )1)((i ng )0)))	;; ing
("flopping"	nil	(((f l o p )1)((i ng )0)))	;; ing
("floridas"	nil	(((f l o) 1) ((r @) 0) ((d @ z) 0)))	;; unique
("flossing"	nil	(((f l o s )1)((i ng )0)))	;; ing
("flouncing"	nil	(((f l ow n s )1)((i ng )0)))	;; ing
("floundering"	nil	(((f l ow n )1)((d @ r )0)((i ng )0)))	;; ing
("flouring"	nil	(((f l ow @ r )1)((i ng )0)))	;; ing
("flourishing"	nil	(((f l uh )1)((r i sh )0)((i ng )0)))	;; ing
("flouting"	nil	(((f l ow t^ )1)((i ng )0)))	;; ing
("flowcharting"	nil	(((f l ou )1)((ch aa t^ )1)((i ng )0)))	;; ing
("flowering"	nil	(((f l ow @ r )1)((i ng )0)))	;; ing
("flowing"	nil	(((f l ou )1)((i ng )0)))	;; ing
("flucloxacillin"	nil	(((f l uu) 0) ((k l o k) 1) ((s @) 0) ((s i) 1) ((l i n) 0)))	;; unique
("fluctuating"	nil	(((f l uh k )1)((ch uw )0)((ei t^ )1)((i ng )0)))	;; ing
("fluffing"	nil	(((f l uh f )1)((i ng )0)))	;; ing
("flunking"	nil	(((f l uh ng k )1)((i ng )0)))	;; ing
("fluorescing"	nil	(((f l ur )0)((r e s )1)((i ng )0)))	;; ing
("fluoridizing"	nil	(((f l ur )1)((r @ d )0)((ai z )1)((i ng )0)))	;; ing
("flurrying"	nil	(((f l uh )1)((r iy )0)((i ng )0)))	;; ing
("flushing"	nil	(((f l uh sh )1)((i ng )0)))	;; ing
("flustering"	nil	(((f l uh )1)((s t @ r )0)((i ng )0)))	;; ing
("fluting"	nil	(((f l uu t^ )1)((i ng )0)))	;; ing
("fluttering"	nil	(((f l uh )1)((t^ @ r )0)((i ng )0)))	;; ing
("fly-catching"	nil	(((f l ai )1)((k a ch )1)((i ng )0)))	;; ing
("flying"	nil	(((f l ai )1)((i ng )0)))	;; ing
("flyposting"	nil	(((f l ai )1)((p ou s t )1)((i ng )0)))	;; ing
("flys"	nil	(((f l ai z) 1)))	;; unique
("foal"	nil	(((f o l) 1)))	;; oul
("foaled"	nil	(((f o l d) 1)))	;; oul
("foaling"	nil	(((f o l) 1) ((i ng) 0)))	;; oul
("foals"	nil	(((f o l z) 1)))	;; oul
("foaming"	nil	(((f ou m )1)((i ng )0)))	;; ing
("fobbing"	nil	(((f o b )1)((i ng )0)))	;; ing
("focusing"	nil	(((f ou )1)((k @ s )0)((i ng )0)))	;; ing
("focussing"	nil	(((f ou )1)((k @ s )0)((i ng )0)))	;; ing
("fogging"	nil	(((f o g )1)((i ng )0)))	;; ing
("foiling"	nil	(((f oi l )1)((i ng )0)))	;; ing
("foisting"	nil	(((f oi s t )1)((i ng )0)))	;; ing
("fold"	nil	(((f o l d) 1)))	;; oul
("fold-out"	nil	(((f o l d) 1) (( ow t) 0)))	;; oul
("fold-outs"	nil	(((f o l d) 1) (( ow t s) 0)))	;; oul
("foldable"	nil	(((f o l d) 1) ((@) 0) ((b l!) 0)))	;; oul
("foldaway"	nil	(((f o l d) 1) ((@) 0) ((w ei) 1)))	;; oul
("folded"	nil	(((f o l d) 1) ((@ d) 0)))	;; oul
("folder"	nil	(((f o l d) 1) ((@) 0)))	;; oul
("folders"	nil	(((f o l d) 1) ((@ z) 0)))	;; oul
("folding"	nil	(((f o l d) 1) ((i ng) 0)))	;; oul
("foldings"	nil	(((f o l d) 1) ((i ng z) 0)))	;; oul
("foldout"	nil	(((f o l d) 1) (( ow t) 0)))	;; oul
("foldouts"	nil	(((f o l d) 1) (( ow t s) 0)))	;; oul
("folds"	nil	(((f o l d z) 1)))	;; oul
("foley"	nil	(((f o) 1) ((l ii) 0)))	;; oul
("foleys"	nil	(((f o) 1) ((l ii z) 0)))	;; unique
("foliage"	nil	(((f o) 1) ((l ii) 0) ((i jh) 0)))	;; oul
("foliaged"	nil	(((f o) 1) ((l ii) 0) ((i jh d) 0)))	;; oul
("foliages"	nil	(((f o) 1) ((l ii) 0) ((i jh) 0) ((@ z) 0)))	;; oul
("foliate"	nil	(((f o) 1) ((l ii) 0) ((ei t) 0)))	;; oul
("foliated"	nil	(((f o) 1) ((l ii) 0) ((ei t^) 1) ((@ d) 0)))	;; oul
("foliates"	nil	(((f o) 1) ((l ii) 0) ((ei t s) 0)))	;; oul
("foliating"	nil	(((f o) 1) ((l ii) 0) ((ei t^) 1) ((i ng) 0)))	;; oul
("foliation"	nil	(((f o) 1) ((l ii) 0) ((ei) 1) ((sh n!) 0)))	;; oul
("foliations"	nil	(((f o) 1) ((l ii) 0) ((ei) 1) ((sh n! z) 0)))	;; oul
("folio"	nil	(((f o) 1) ((l ii) 0) ((ou) 0)))	;; oul
("folioed"	nil	(((f o) 1) ((l ii) 0) ((ou d) 0)))	;; oul
("foliolate"	nil	(((f o) 1) ((l ii @) 0) ((l ei t) 0)))	;; oul
("folios"	nil	(((f o) 1) ((l ii) 0) ((ou z) 0)))	;; oul
("following"	nil	(((f o )1)((l ou )0)((i ng )0)))	;; ing
("fomenting"	nil	(((f @ )0)((m e n t )1)((i ng )0)))	;; ing
("fondling"	nil	(((f o n )1)((d l! )0)((i ng )0)))	;; ing
("fool"	nil	(((f u l) 1)))	;; uul
("fooled"	nil	(((f u l d) 1)))	;; uul
("fooleries"	nil	(((f u l) 1) ((@) 0) ((r ii z) 0)))	;; uul
("foolery"	nil	(((f u l) 1) ((@) 0) ((r ii) 0)))	;; uul
("foolhardiness"	nil	(((f u l) 1) ((h aa d) 1) ((ii) 0) ((n @ s) 0)))	;; uul
("foolhardy"	nil	(((f u l) 1) ((h aa d) 1) ((ii) 0)))	;; uul
("fooling"	nil	(((f u l) 1) ((i ng) 0)))	;; uul
("foolish"	nil	(((f u l) 1) ((i sh) 0)))	;; uul
("foolisher"	nil	(((f u l) 1) ((i sh) 0) ((@) 0)))	;; uul
("foolishest"	nil	(((f u l) 1) ((i sh) 0) ((@ s t) 0)))	;; uul
("foolishly"	nil	(((f u l) 1) ((i sh) 0) ((l ii) 0)))	;; uul
("foolishness"	nil	(((f u l) 1) ((i sh) 0) ((n @ s) 0)))	;; uul
("foolproof"	nil	(((f u l) 1) ((p r uu f) 0)))	;; uul
("fools"	nil	(((f u l z) 1)))	;; uul
("foolscap"	nil	(((f u l) 1) ((s k a p) 0)))	;; uul
("foot-stool"	nil	(((f u t) 1) ((s t u l) 0)))	;; uul
("foot-stools"	nil	(((f u t) 1) ((s t u l z) 0)))	;; uul
("foothold"	nil	(((f u t) 1) ((h o l d) 0)))	;; oul
("footholds"	nil	(((f u t) 1) ((h o l d z) 0)))	;; oul
("footing"	nil	(((f u t^ )1)((i ng )0)))	;; ing
("footling"	nil	(((f uu )1)((t l! )0)((i ng )0)))	;; ing
("footmans"	nil	(((f u t) 1) ((m @ n z) 0)))	;; unique
("footnoting"	nil	(((f u t )1)((n ou t^ )1)((i ng )0)))	;; ing
("footslogging"	nil	(((f u t )1)((s l o g )1)((i ng )0)))	;; ing
("footstool"	nil	(((f u t) 1) ((s t u l) 0)))	;; uul
("footstools"	nil	(((f u t) 1) ((s t u l z) 0)))	;; uul
("foraging"	nil	(((f o )1)((r i jh )0)((i ng )0)))	;; ing
("foraying"	nil	(((f o )1)((r ei )0)((i ng )0)))	;; ing
("forbearing"	nil	(((f oo )0)((b ir r )1)((i ng )0)))	;; ing
("forbidding"	nil	(((f @ )0)((b i d )1)((i ng )0)))	;; ing
("forcing"	nil	(((f oo s )1)((i ng )0)))	;; ing
("fording"	nil	(((f oo d )1)((i ng )0)))	;; ing
("foreboding"	nil	(((f oo )0)((b ou d )1)((i ng )0)))	;; ing
("forecasting"	nil	(((f oo )1)((k aa s t )0)((i ng )0)))	;; ing
("foreclosing"	nil	(((f oo )0)((k l ou z )1)((i ng )0)))	;; ing
("foregathering"	nil	(((f oo )0)((g a )1)((dh @ r )0)((i ng )0)))	;; ing
("foregoing"	nil	(((f oo )0)((g ou )1)((i ng )0)))	;; ing
("foreign-looking"	nil	(((f o )1)((r @ n )0)((l u k )1)((i ng )0)))	;; ing
("forejudging"	nil	(((f oo )0)((jh uh jh )1)((i ng )0)))	;; ing
("foreknowing"	nil	(((f oo )0)((n ou )1)((i ng )0)))	;; ing
("foreseeing"	nil	(((f oo )0)((s ii )1)((i ng )0)))	;; ing
("foreshadowing"	nil	(((f oo )0)((sh a )1)((d ou )0)((i ng )0)))	;; ing
("foreshortening"	nil	(((f oo )0)((sh oo t )1)((n! )0)((i ng )0)))	;; ing
("forestalling"	nil	(((f oo )0)((s t oo l )1)((i ng )0)))	;; ing
("foretasting"	nil	(((f oo )1)((t ei s t )1)((i ng )0)))	;; ing
("foretelling"	nil	(((f oo )0)((t a l )1)((i ng )0)))	;; ing
("foretold"	nil	(((f oo) 0) ((t o l d) 1)))	;; oul
("forewarning"	nil	(((f oo )0)((w oo n )1)((i ng )0)))	;; ing
("forewing"	nil	(((f oo )1)((w i ng )0)))	;; ing
("forfeiting"	nil	(((f oo )1)((f @ t^ )0)((i ng )0)))	;; ing
("forfending"	nil	(((f @ )0)((f e n d )1)((i ng )0)))	;; ing
("forgathering"	nil	(((f oo )0)((g a )1)((dh @ r )0)((i ng )0)))	;; ing
("forgeing"	nil	(((f oo jh )1)((i ng )0)))	;; ing
("forgerys"	nil	(((f oo jh) 1) ((@) 0) ((r ii z) 0)))	;; unique
("forgetting"	nil	(((f @ )0)((g e t^ )1)((i ng )0)))	;; ing
("forging"	nil	(((f oo jh )1)((i ng )0)))	;; ing
("forgiving"	nil	(((f @ )0)((g i v )1)((i ng )0)))	;; ing
("forgoing"	nil	(((f oo )0)((g ou )1)((i ng )0)))	;; ing
("forking"	nil	(((f oo k )1)((i ng )0)))	;; ing
("formalising"	nil	(((f oo )1)((m l! )0)((ai z )1)((i ng )0)))	;; ing
("formalizing"	nil	(((f oo )1)((m l! )0)((ai z )1)((i ng )0)))	;; ing
("formatting"	nil	(((f oo )1)((m a t^ )0)((i ng )0)))	;; ing
("forming"	nil	(((f oo m )1)((i ng )0)))	;; ing
("formularising"	nil	(((f oo )1)((m y @ )0)((l @ r )0)((ai z )1)((i ng )0)))	;; ing
("formularizing"	nil	(((f oo )1)((m y @ )0)((l @ r )0)((ai z )1)((i ng )0)))	;; ing
("formulating"	nil	(((f oo )1)((m y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("fornicating"	nil	(((f oo )1)((n @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("forsaking"	nil	(((f @ )0)((s ei k )1)((i ng )0)))	;; ing
("forswearing"	nil	(((f oo )0)((s w ir r )1)((i ng )0)))	;; ing
("forsyths"	nil	(((f oo) 0) ((s ai th s) 1)))	;; unique
("forthcoming"	nil	(((f oo th )1)((k uh m )1)((i ng )0)))	;; ing
("forthgoing"	nil	(((f - oo th )0)((g ou )1)((i ng )0)))	;; ing
("forths"	nil	(((f oo th s) 1)))	;; unique
("fortifying"	nil	(((f oo )1)((t^ @ )0)((f ai )1)((i ng )0)))	;; ing
("forwarding"	nil	(((f oo )1)((w @ d )0)((i ng )0)))	;; ing
("forwardlooking"	nil	(((f oo )1)((w @ d )0)((l u k )1)((i ng )0)))	;; ing
("fosamax"	nil	(((f o) 1) ((s @) 0) ((m a k s) 1)))	;; unique
("fossilising"	nil	(((f o )1)((s l! )0)((ai z )1)((i ng )0)))	;; ing
("fossilizing"	nil	(((f o )1)((s l! )0)((ai z )1)((i ng )0)))	;; ing
("fostering"	nil	(((f o )1)((s t @ r )0)((i ng )0)))	;; ing
("fouling"	nil	(((f ow l )1)((i ng )0)))	;; ing
("foundering"	nil	(((f ow n )1)((d @ r )0)((i ng )0)))	;; ing
("founding"	nil	(((f ow n d )1)((i ng )0)))	;; ing
("foundling"	nil	(((f ow n d )1)((l i ng )0)))	;; ing
("four-fold"	nil	(((f oo) 1) ((f o l d) 0)))	;; oul
("four-year-old"	nil	(((f oo) 1) ((y ir r) 0) ((o l d) 1)))	;; oul
("four-year-olds"	nil	(((f oo) 1) ((y ir r) 0) ((o l d z) 1)))	;; oul
("fourfold"	nil	(((f oo) 1) ((f o l d) 0)))	;; oul
("fowlers"	nil	(((f ow) 1) ((l @ z) 0)))	;; unique
("fowling"	nil	(((f ow l )1)((i ng )0)))	;; ing
("fox-hunting"	nil	(((f o k s )1)((h uh n t )1)((i ng )0)))	;; ing
("foxhole"	nil	(((f o k s) 1) ((h o l) 0)))	;; oul
("foxholes"	nil	(((f o k s) 1) ((h o l z) 0)))	;; oul
("foxhunting"	nil	(((f o k s )1)((h uh n t )1)((i ng )0)))	;; ing
("foxing"	nil	(((f o k s )1)((i ng )0)))	;; ing
("foxs"	nil	(((f o k s) 1) ((@ z) 0)))	;; unique
("foxtrotting"	nil	(((f o k s )1)((t r o t^ )1)((i ng )0)))	;; ing
("fracturing"	nil	(((f r a k )1)((ch @ r )0)((i ng )0)))	;; ing
("fragmenting"	nil	(((f r a g )0)((m e n t )1)((i ng )0)))	;; ing
("framemaking"	nil	(((f r ei m )1)((m ei k )1)((i ng )0)))	;; ing
("frameworking"	nil	(((f r ei m )1)((w - @@r k )0)((i ng )0)))	;; ing
("framing"	nil	(((f r ei m )1)((i ng )0)))	;; ing
("francess"	nil	(((f r aa n) 1) ((s i s) 0) ((@ z) 0)))	;; unique
("franchising"	nil	(((f r a n )1)((ch ai z )0)((i ng )0)))	;; ing
("franciscos"	nil	(((f r @ n) 0) ((s i) 1) ((s k ou z) 0)))	;; unique
("franking"	nil	(((f r a ng k )1)((i ng )0)))	;; ing
("franklins"	nil	(((f r a ng) 1) ((k l i n z) 0)))	;; unique
("frasers"	nil	(((f r ei) 1) ((z @ z) 0)))	;; unique
("fraternising"	nil	(((f r a )1)((t^ @ )0)((n ai z )1)((i ng )0)))	;; ing
("fraternizing"	nil	(((f r a )1)((t^ @ )0)((n ai z )1)((i ng )0)))	;; ing
("frauding"	nil	(((f r oo d )1)((i ng )0)))	;; ing
("fraunhofers"	nil	(((f r ow n) 1) ((h ou) 0) ((f @ z) 0)))	;; unique
("fraying"	nil	(((f r ei )1)((i ng )0)))	;; ing
("frazzling"	nil	(((f r a )1)((z l! )0)((i ng )0)))	;; ing
("freaking"	nil	(((f r ii k )1)((i ng )0)))	;; ing
("freckling"	nil	(((f r e )1)((k l! )0)((i ng )0)))	;; ing
("freddys"	nil	(((f r e) 1) ((d ii z) 0)))	;; unique
("freds"	nil	(((f r e d z) 1)))	;; unique
("free-standing"	nil	(((f r ii )1)((s t a n d )1)((i ng )0)))	;; ing
("free-thinking"	nil	(((f r ii )1)((th i ng k )1)((i ng )0)))	;; ing
("free-wheeling"	nil	(((f r ii )1)((w ii l )1)((i ng )0)))	;; ing
("freebooting"	nil	(((f r ii )1)((b uu t^ )1)((i ng )0)))	;; ing
("freehold"	nil	(((f r ii) 1) ((h o l d) 0)))	;; oul
("freeholder"	nil	(((f r ii) 1) ((h o l d) 1) ((@) 0)))	;; oul
("freeholders"	nil	(((f r ii) 1) ((h o l d) 1) ((@ z) 0)))	;; oul
("freeholding"	nil	(((f r ii) 1) ((h o l d) 1) ((i ng) 0)))	;; oul
("freeholds"	nil	(((f r ii) 1) ((h o l d z) 0)))	;; oul
("freeing"	nil	(((f r ii )1)((i ng )0)))	;; ing
("freelancing"	nil	(((f r ii )1)((l aa n s )1)((i ng )0)))	;; ing
("freeloading"	nil	(((f r ii )1)((l ou d )1)((i ng )0)))	;; ing
("freestanding"	nil	(((f r ii )1)((s t a n d )1)((i ng )0)))	;; ing
("freethinking"	nil	(((f r ii )1)((th i ng k )1)((i ng )0)))	;; ing
("freewheeling"	nil	(((f r - ii )0)((w ii l )1)((i ng )0)))	;; ing
("freezing"	nil	(((f r ii z )1)((i ng )0)))	;; ing
("freighting"	nil	(((f r ei t^ )1)((i ng )0)))	;; ing
("frenchmans"	nil	(((f r e n ch) 1) ((m @ n z) 0)))	;; unique
("frenchs"	nil	(((f r e n ch) 1) ((@ z) 0)))	;; unique
("frenchspeaking"	nil	(((f r e n ch )1)((s p ii k )1)((i ng )0)))	;; ing
("frequenting"	nil	(((f r i )0)((k w e n t )1)((i ng )0)))	;; ing
("freshening"	nil	(((f r e sh )1)((n! )0)((i ng )0)))	;; ing
("fretsawing"	nil	(((f r e t )1)((s oo )1)((i ng )0)))	;; ing
("fretting"	nil	(((f r e t^ )1)((i ng )0)))	;; ing
("freuds"	nil	(((f r oi d z) 1)))	;; unique
("friedmans"	nil	(((f r ii d) 1) ((m @ n z) 0)))	;; unique
("friending"	nil	(((f r e n d )1)((i ng )0)))	;; ing
("frigging"	nil	(((f r i g )1)((i ng )0)))	;; ing
("frightening"	nil	(((f r ai t )1)((n! )0)((i ng )0)))	;; ing
("frilling"	nil	(((f r i l )1)((i ng )0)))	;; ing
("fringing"	nil	(((f r i n jh )1)((i ng )0)))	;; ing
("frisking"	nil	(((f r i s k )1)((i ng )0)))	;; ing
("frittering"	nil	(((f r i )1)((t^ @ r )0)((i ng )0)))	;; ing
("frivoling"	nil	(((f r i )1)((v l! )0)((i ng )0)))	;; ing
("frivolling"	nil	(((f r i )1)((v l! )0)((i ng )0)))	;; ing
("frizzing"	nil	(((f r i z )1)((i ng )0)))	;; ing
("frizzling"	nil	(((f r i )1)((z l! )0)((i ng )0)))	;; ing
("frocking"	nil	(((f r o k )1)((i ng )0)))	;; ing
("frogging"	nil	(((f r o g )1)((i ng )0)))	;; ing
("frogmarching"	nil	(((f r o g )1)((m aa ch )1)((i ng )0)))	;; ing
("frolicking"	nil	(((f r o )1)((l i k )0)((i ng )0)))	;; ing
("fronting"	nil	(((f r uh n t )1)((i ng )0)))	;; ing
("frontrunning"	nil	(((f r uh n t )1)((r uh n )1)((i ng )0)))	;; ing
("frostbiting"	nil	(((f r o s t )1)((b ai t^ )1)((i ng )0)))	;; ing
("frosting"	nil	(((f r o s t )1)((i ng )0)))	;; ing
("frothing"	nil	(((f r o th )1)((i ng )0)))	;; ing
("frowning"	nil	(((f r ow n )1)((i ng )0)))	;; ing
("fructifying"	nil	(((f r uh k )1)((t @ )0)((f ai )1)((i ng )0)))	;; ing
("fruiting"	nil	(((f r uu t^ )1)((i ng )0)))	;; ing
("frustrating"	nil	(((f r uh )0)((s t r ei t^ )1)((i ng )0)))	;; ing
("frying"	nil	(((f r ai )1)((i ng )0)))	;; ing
("frys"	nil	(((f r ai z) 1)))	;; unique
("fs"	nil	(((e f s) 1)))	;; unique
("fucking"	nil	(((f uh k )1)((i ng )0)))	;; ing
("fuddling"	nil	(((f uh )1)((d l! )0)((i ng )0)))	;; ing
("fudds"	nil	(((f uh d z) 1)))	;; unique
("fudging"	nil	(((f uh jh )1)((i ng )0)))	;; ing
("fuel"	nil	(((f y u l) 1)))	;; uul
("fueled"	nil	(((f y u l d) 1)))	;; uul
("fueling"	nil	(((f y u l) 1) ((i ng) 0)))	;; uul
("fuelled"	nil	(((f y u l d) 1)))	;; uul
("fuelling"	nil	(((f y u l) 1) ((i ng) 0)))	;; uul
("fuels"	nil	(((f y u l z) 1)))	;; uul
("fujitsus"	nil	(((f uw) 0) ((jh i t) 1) ((s uu z) 0)))	;; unique
("fulfilling"	nil	(((f u l )0)((f i l )1)((i ng )0)))	;; ing
("fulminating"	nil	(((f o l )1)((m @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("fultons"	nil	(((f u l) 1) ((t @ n z) 0)))	;; unique
("fumbling"	nil	(((f uh m )1)((b l! )0)((i ng )0)))	;; ing
("fumigating"	nil	(((f y uu )1)((m @ )0)((g ei t^ )1)((i ng )0)))	;; ing
("fuming"	nil	(((f y uu m )1)((i ng )0)))	;; ing
("functionarys"	nil	(((f uh ng k) 1) ((sh n!) 0) ((@) 0) ((r ii z) 0)))	;; unique
("functioning"	nil	(((f uh ng k )1)((sh n! )0)((i ng )0)))	;; ing
("fundholder"	nil	(((f uh n d) 1) ((h o l d) 1) ((@) 0)))	;; oul
("fundholders"	nil	(((f uh n d) 1) ((h o l d) 1) ((@ z) 0)))	;; oul
("funding"	nil	(((f uh n d )1)((i ng )0)))	;; ing
("fundraising"	nil	(((f uh n d )1)((r ei z )1)((i ng )0)))	;; ing
("funking"	nil	(((f uh ng k )1)((i ng )0)))	;; ing
("funneling"	nil	(((f uh )1)((n l! )0)((i ng )0)))	;; ing
("funnelling"	nil	(((f uh )1)((n l! )0)((i ng )0)))	;; ing
("funning"	nil	(((f uh n )1)((i ng )0)))	;; ing
("fur-bearing"	nil	(((f @@r )1)((b ir r )1)((i ng )0)))	;; ing
("furbishing"	nil	(((f @@r )1)((b i sh )0)((i ng )0)))	;; ing
("furling"	nil	(((f @@r l )1)((i ng )0)))	;; ing
("furloughing"	nil	(((f @@r )1)((l ou )0)((i ng )0)))	;; ing
("furnishing"	nil	(((f @@r )1)((n i sh )0)((i ng )0)))	;; ing
("furosemide"	nil	(((f y uu) 0) ((r o) 1) ((s @) 0) ((m ai d) 1)))	;; unique
("furring"	nil	(((f @@r r )1)((i ng )0)))	;; ing
("furrowing"	nil	(((f uh )1)((r ou )0)((i ng )0)))	;; ing
("furthering"	nil	(((f @@r )1)((dh @ r )0)((i ng )0)))	;; ing
("furys"	nil	(((f y uu) 1) ((r ii z) 0)))	;; unique
("fus"	nil	(((f uu z) 1)))	;; unique
("fusing"	nil	(((f y uu z )1)((i ng )0)))	;; ing
("fusions"	nil	(((f y uu) 1) ((zh n! z) 0)))	;; unique
("fussing"	nil	(((f uh s )1)((i ng )0)))	;; ing
("fuzzing"	nil	(((f uh z )1)((i ng )0)))	;; ing
("gabbing"	nil	(((g a b )1)((i ng )0)))	;; ing
("gabbling"	nil	(((g a )1)((b l! )0)((i ng )0)))	;; ing
("gadding"	nil	(((g a d )1)((i ng )0)))	;; ing
("gaffing"	nil	(((g a f )1)((i ng )0)))	;; ing
("gagarins"	nil	(((g @) 0) ((g aa) 1) ((r i n z) 0)))	;; unique
("gagging"	nil	(((g a g )1)((i ng )0)))	;; ing
("gails"	nil	(((g ei l z) 1)))	;; unique
("gaining"	nil	(((g ei n )1)((i ng )0)))	;; ing
("galaxys"	nil	(((g a) 1) ((l @ k) 0) ((s ii z) 0)))	;; unique
("galileos"	nil	(((g a) 1) ((l i) 0) ((l ei) 1) ((ou z) 0)))	;; unique
("gallanting"	nil	(((g a )1)((l @ n t )0)((i ng )0)))	;; ing
("gallerys"	nil	(((g a) 1) ((l @) 0) ((r ii z) 0)))	;; unique
("galling"	nil	(((g oo l )1)((i ng )0)))	;; ing
("gallivanting"	nil	(((g a )1)((l @ )0)((v a n t )1)((i ng )0)))	;; ing
("galloping"	nil	(((g a )1)((l @ p )0)((i ng )0)))	;; ing
("galumphing"	nil	(((g @ )0)((l uh m f )1)((i ng )0)))	;; ing
("galvanising"	nil	(((g a l )1)((v @ )0)((n ai z )1)((i ng )0)))	;; ing
("galvanizing"	nil	(((g a l )1)((v @ )0)((n ai z )1)((i ng )0)))	;; ing
("gambling"	nil	(((g a m )1)((b l! )0)((i ng )0)))	;; ing
("gamboling"	nil	(((g a m )1)((b l! )0)((i ng )0)))	;; ing
("gambolling"	nil	(((g a m )1)((b l! )0)((i ng )0)))	;; ing
("gaming"	nil	(((g ei m )1)((i ng )0)))	;; ing
("ganging"	nil	(((g a ng )1)((i ng )0)))	;; ing
("gangling"	nil	(((g a ng )1)((g l i ng )0)))	;; ing
("gaoling"	nil	(((jh ei l )1)((i ng )0)))	;; ing
("gaping"	nil	(((g ei p )1)((i ng )0)))	;; ing
("garaging"	nil	(((g a )1)((r aa jh )0)((i ng )0)))	;; ing
("garbling"	nil	(((g aa )1)((b l! )0)((i ng )0)))	;; ing
("garcias"	nil	(((g aa) 0) ((s ii @ z) 1)))	;; unique
("gardening"	nil	(((g aa )1)((d n! )0)((i ng )0)))	;; ing
("gargling"	nil	(((g aa )1)((g l! )0)((i ng )0)))	;; ing
("garlanding"	nil	(((g aa )1)((l @ n d )0)((i ng )0)))	;; ing
("garnering"	nil	(((g aa )1)((n @ r )0)((i ng )0)))	;; ing
("garnishing"	nil	(((g aa )1)((n i sh )0)((i ng )0)))	;; ing
("garotting"	nil	(((g @ )0)((r o t^ )1)((i ng )0)))	;; ing
("garrisoning"	nil	(((g a )1)((r i )0)((s n! )0)((i ng )0)))	;; ing
("garroting"	nil	(((g @ )0)((r o t^ )1)((i ng )0)))	;; ing
("garrotting"	nil	(((g @ )0)((r o t^ )1)((i ng )0)))	;; ing
("garths"	nil	(((g aa th s) 1)))	;; unique
("garys"	nil	(((g a) 1) ((r ii z) 0)))	;; unique
("gashing"	nil	(((g a sh )1)((i ng )0)))	;; ing
("gasifying"	nil	(((g a s )1)((@ )0)((f ai )1)((i ng )0)))	;; ing
("gaslighting"	nil	(((g a s )1)((l ai t^ )1)((i ng )0)))	;; ing
("gasping"	nil	(((g aa s p )1)((i ng )0)))	;; ing
("gass"	nil	(((g a s) 1) ((@ z) 0)))	;; unique
("gassing"	nil	(((g a s )1)((i ng )0)))	;; ing
("gatecrashing"	nil	(((g ei t )1)((k r a sh )1)((i ng )0)))	;; ing
("gatefold"	nil	(((g ei t) 1) ((f o l d) 0)))	;; oul
("gatekeeping"	nil	(((g ei t )1)((k ii p )1)((i ng )0)))	;; ing
("gatess"	nil	(((g ei t s) 1) ((@ z) 0)))	;; unique
("gatewaying"	nil	(((g ei t )1)((w ei )1)((i ng )0)))	;; ing
("gathering"	nil	(((g a )1)((dh @ r )0)((i ng )0)))	;; ing
("gating"	nil	(((g ei t^ )1)((i ng )0)))	;; ing
("gatting"	nil	(((g a )1)((t^ i ng )0)))	;; ing
("gatts"	nil	(((g a t s) 1)))	;; unique
("gauging"	nil	(((g ei jh )1)((i ng )0)))	;; ing
("gawking"	nil	(((g oo k )1)((i ng )0)))	;; ing
("gawping"	nil	(((g oo p )1)((i ng )0)))	;; ing
("gaylords"	nil	(((g ei) 1) ((l oo d z) 0)))	;; unique
("gazas"	nil	(((g aa) 1) ((z @ z) 0)))	;; unique
("gazing"	nil	(((g ei z )1)((i ng )0)))	;; ing
("gazumping"	nil	(((g @ )0)((z uh m p )1)((i ng )0)))	;; ing
("gearchanging"	nil	(((g ii @ )1)((ch ei n jh )1)((i ng )0)))	;; ing
("gearing"	nil	(((g ir r )1)((i ng )0)))	;; ing
("geeing"	nil	(((jh ii )1)((i ng )0)))	;; ing
("gelding"	nil	(((g a l d )1)((i ng )0)))	;; ing
("gelling"	nil	(((jh a l )1)((i ng )0)))	;; ing
("geminating"	nil	(((jh e )1)((m @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("generalising"	nil	(((jh e n )1)((r @ l )0)((ai z )1)((i ng )0)))	;; ing
("generalizing"	nil	(((jh e n )1)((r @ l )0)((ai z )1)((i ng )0)))	;; ing
("generating"	nil	(((jh e )1)((n @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("generositys"	nil	(((jh e) 1) ((n @) 0) ((r o s) 1) ((@) 0) ((t^ ii z) 0)))	;; unique
("genevas"	nil	(((jh @) 0) ((n ii) 1) ((v @ z) 0)))	;; unique
("genoas"	nil	(((jh e) 1) ((n ou @ z) 0)))	;; unique
("genting"	nil	(((jh e n t )1)((i ng )0)))	;; ing
("gentlemans"	nil	(((jh e n) 1) ((t l!) 0) ((m @ n z) 0)))	;; unique
("gentlemens"	nil	(((jh e n) 1) ((t l!) 0) ((m @ n z) 0)))	;; unique
("gentlewomans"	nil	(((jh e n) 1) ((t l!) 0) ((w u) 1) ((m @ n z) 0)))	;; unique
("gentrifying"	nil	(((jh e n )1)((t r @ )0)((f ai )1)((i ng )0)))	;; ing
("genuflecting"	nil	(((jh e )1)((n y uw )0)((f l e k t )1)((i ng )0)))	;; ing
("germinating"	nil	(((jh @@r )1)((m @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("gerrymandering"	nil	(((jh e )1)((r iy )0)((m a n )1)((d @ r )0)((i ng )0)))	;; ing
("gestating"	nil	(((jh e )0)((s t ei t^ )1)((i ng )0)))	;; ing
("gesticulating"	nil	(((jh e )0)((s t i )1)((k y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("gesturing"	nil	(((jh e s )1)((ch @ r )0)((i ng )0)))	;; ing
("getting"	nil	(((g e t^ )1)((i ng )0)))	;; ing
("ghanas"	nil	(((g aa) 1) ((n @ z) 0)))	;; unique
("ghettoising"	nil	(((g e )1)((t^ ou )0)((ai z )1)((i ng )0)))	;; ing
("ghettoizing"	nil	(((g e )1)((t^ ou )0)((ai z )1)((i ng )0)))	;; ing
("ghosting"	nil	(((g ou s t )1)((i ng )0)))	;; ing
("ghoul"	nil	(((g u l) 1)))	;; uul
("ghoulish"	nil	(((g u l) 1) ((i sh) 0)))	;; uul
("ghoulishly"	nil	(((g u l) 1) ((i sh) 0) ((l ii) 0)))	;; uul
("ghoulishness"	nil	(((g u l) 1) ((i sh) 0) ((n @ s) 0)))	;; uul
("ghouls"	nil	(((g u l z) 1)))	;; uul
("gibbering"	nil	(((jh i )1)((b @ r )0)((i ng )0)))	;; ing
("gibraltars"	nil	(((jh i) 0) ((b r oo l) 1) ((t @ z) 0)))	;; unique
("gibsons"	nil	(((g i b) 1) ((s n! z) 0)))	;; unique
("gidding"	nil	(((g i )1)((d i ng )0)))	;; ing
("giddying"	nil	(((g i )1)((d iy )0)((i ng )0)))	;; ing
("gifting"	nil	(((g i f t )1)((i ng )0)))	;; ing
("gigavolt"	nil	(((g i) 1) ((g @) 0) ((v o l t) 1)))	;; oul
("gigavolts"	nil	(((g i) 1) ((g @) 0) ((v o l t s) 1)))	;; oul
("gigging"	nil	(((g i g )1)((i ng )0)))	;; ing
("giggling"	nil	(((g i )1)((g l! )0)((i ng )0)))	;; ing
("gilchrists"	nil	(((g i l) 1) ((k r i s t s) 0)))	;; unique
("gilding"	nil	(((g i l d )1)((i ng )0)))	;; ing
("giless"	nil	(((jh ai l z) 1) ((@ z) 0)))	;; unique
("gilling"	nil	(((g i )1)((l i ng )0)))	;; ing
("giottos"	nil	(((jh o) 1) ((t^ ou z) 0)))	;; unique
("gipsys"	nil	(((jh i p) 1) ((s ii z) 0)))	;; unique
("girding"	nil	(((g @@r d )1)((i ng )0)))	;; ing
("girdling"	nil	(((g @@r )1)((d l! )0)((i ng )0)))	;; ing
("girning"	nil	(((g @@r n )1)((i ng )0)))	;; ing
("giving"	nil	(((g i v )1)((i ng )0)))	;; ing
("gladdening"	nil	(((g l a d )1)((n! )0)((i ng )0)))	;; ing
("gladioli"	nil	(((g l a) 1) ((d ii) 0) ((o) 1) ((l ai) 0)))	;; oul
("gladiolus"	nil	(((g l a) 1) ((d ii) 0) ((o) 1) ((l @ s) 0)))	;; oul
("glamorizing"	nil	(((g l a )1)((m @ r )0)((ai z )1)((i ng )0)))	;; ing
("glamourising"	nil	(((g l a )1)((m @ r )0)((ai z )1)((i ng )0)))	;; ing
("glamourizing"	nil	(((g l a )1)((m @ r )0)((ai z )1)((i ng )0)))	;; ing
("glamours"	nil	(((g l a) 1) ((m @ z) 0)))	;; unique
("glancing"	nil	(((g l aa n s )1)((i ng )0)))	;; ing
("glaring"	nil	(((g l ir r )1)((i ng )0)))	;; ing
("glass-blowing"	nil	(((g l aa s )1)((b l ou )1)((i ng )0)))	;; ing
("glassblowing"	nil	(((g l aa s )1)((b l ou )1)((i ng )0)))	;; ing
("glassmaking"	nil	(((g l aa s )1)((m ei k )1)((i ng )0)))	;; ing
("glazing"	nil	(((g l ei z )1)((i ng )0)))	;; ing
("gleaming"	nil	(((g l ii m )1)((i ng )0)))	;; ing
("gleaning"	nil	(((g l ii n )1)((i ng )0)))	;; ing
("glendinning"	nil	(((g l e n )0)((d i )1)((n i ng )0)))	;; ing
("gliding"	nil	(((g l ai d )1)((i ng )0)))	;; ing
("glimmering"	nil	(((g l i )1)((m @ r )0)((i ng )0)))	;; ing
("glinting"	nil	(((g l i n t )1)((i ng )0)))	;; ing
("glistening"	nil	(((g l i )1)((s n! )0)((i ng )0)))	;; ing
("glistering"	nil	(((g l i )1)((s t @ r )0)((i ng )0)))	;; ing
("glitching"	nil	(((g l i ch )1)((i ng )0)))	;; ing
("glittering"	nil	(((g l i )1)((t^ @ r )0)((i ng )0)))	;; ing
("gloating"	nil	(((g l ou t^ )1)((i ng )0)))	;; ing
("globalising"	nil	(((g l ou b )1)((l! )0)((ai z )1)((i ng )0)))	;; ing
("globalizing"	nil	(((g l ou b )1)((l! )0)((ai z )1)((i ng )0)))	;; ing
("globbing"	nil	(((g l o b )1)((i ng )0)))	;; ing
("globetrotting"	nil	(((g l ou b )1)((t r o t^ )1)((i ng )0)))	;; ing
("glooming"	nil	(((g l uu m )1)((i ng )0)))	;; ing
("glorifying"	nil	(((g l oo )1)((r @ )0)((f ai )1)((i ng )0)))	;; ing
("glorying"	nil	(((g l oo )1)((r iy )0)((i ng )0)))	;; ing
("glossarys"	nil	(((g l o) 1) ((s @) 0) ((r ii z) 0)))	;; unique
("glossing"	nil	(((g l o s )1)((i ng )0)))	;; ing
("glossolalia"	nil	(((g l o) 1) ((s o) 0) ((l ei) 1) ((l ii @) 0)))	;; oul
("gloving"	nil	(((g l uh v )1)((i ng )0)))	;; ing
("glowering"	nil	(((g l ow @ r )1)((i ng )0)))	;; ing
("glowing"	nil	(((g l ou )1)((i ng )0)))	;; ing
("glucks"	nil	(((g l u k s) 1)))	;; unique
("glucosamine"	nil	(((g l uu) 0) ((k ou) 1) ((s @) 0) ((m ii n) 2)))	;; unique
("glueing"	nil	(((g l uu )1)((i ng )0)))	;; ing
("glugging"	nil	(((g l uh g )1)((i ng )0)))	;; ing
("gluing"	nil	(((g l uu )1)((i ng )0)))	;; ing
("glutting"	nil	(((g l uh t^ )1)((i ng )0)))	;; ing
("glyceryl"	nil	(((g l i) 1) ((s @) 0) ((r i l) 1)))	;; unique
("gnashing"	nil	(((n a sh )1)((i ng )0)))	;; ing
("gnawing"	nil	(((n oo )1)((i ng )0)))	;; ing
("goading"	nil	(((g ou d )1)((i ng )0)))	;; ing
("goal"	nil	(((g o l) 1)))	;; oul
("goalie"	nil	(((g o l) 1) ((ii) 0)))	;; oul
("goalies"	nil	(((g o l) 1) ((ii z) 0)))	;; oul
("goalkeeper"	nil	(((g o l) 1) ((k ii p) 1) ((@) 0)))	;; oul
("goalkeepers"	nil	(((g o l) 1) ((k ii p) 1) ((@ z) 0)))	;; oul
("goalkeeping"	nil	(((g o l) 1) ((k ii p) 1) ((i ng) 0)))	;; oul
("goalless"	nil	(((g o l) 1) ((l @ s) 0)))	;; oul
("goalmouth"	nil	(((g o l) 1) ((m ow th) 0)))	;; oul
("goalmouths"	nil	(((g o l) 1) ((m ow dh z) 0)))	;; oul
("goalpost"	nil	(((g o l) 1) ((p ou s t) 0)))	;; oul
("goalposts"	nil	(((g o l) 1) ((p ou s t s) 0)))	;; oul
("goals"	nil	(((g o l z) 1)))	;; oul
("gobbing"	nil	(((g o b )1)((i ng )0)))	;; ing
("gobbling"	nil	(((g o )1)((b l! )0)((i ng )0)))	;; ing
("goddards"	nil	(((g o) 1) ((d aa d z) 0)))	;; unique
("godfearing"	nil	(((g o d )1)((f ir r )1)((i ng )0)))	;; ing
("godwins"	nil	(((g o d) 1) ((w i n z) 0)))	;; unique
("goggling"	nil	(((g o )1)((g l! )0)((i ng )0)))	;; ing
("going"	nil	(((g ou )1)((i ng )0)))	;; ing
("golan"	nil	(((g o) 1) ((l @ n) 0)))	;; oul
("gold"	nil	(((g o l d) 1)))	;; oul
("gold-leaf"	nil	(((g o l d) 0) ((l ii f) 1)))	;; oul
("gold-mines"	nil	(((g o l d) 1) ((m ai n z) 0)))	;; oul
("gold-plated"	nil	(((g o l d) 1) ((p l ei t^) 1) ((@ d) 0)))	;; oul
("goldberg"	nil	(((g o l d) 1) ((b @@r g) 0)))	;; oul
("goldbergs"	nil	(((g o l d) 1) ((b @@r g z) 0)))	;; unique
("goldbloom"	nil	(((g o l d) 1) ((b l uu m) 0)))	;; oul
("goldbug"	nil	(((g o l d) 1) ((b uh g) 0)))	;; oul
("goldbugs"	nil	(((g o l d) 1) ((b uh g z) 0)))	;; oul
("golded"	nil	(((g o l d) 1) ((@ d) 0)))	;; oul
("golden"	nil	(((g o l d) 1) ((n!) 0)))	;; oul
("goldenest"	nil	(((g o l d) 1) ((n!) 0) ((@ s t) 0)))	;; oul
("goldeneye"	nil	(((g o l d) 1) ((n!) 0) ((ai) 1)))	;; oul
("goldenrod"	nil	(((g o l d) 1) ((n!) 0) ((r o d) 1)))	;; oul
("goldenrods"	nil	(((g o l d) 1) ((n!) 0) ((r o d z) 1)))	;; oul
("goldenson"	nil	(((g o l) 1) ((d n!) 0) ((s n!) 0)))	;; oul
("goldfield"	nil	(((g o l d) 1) ((f ii l d) 0)))	;; oul
("goldfinch"	nil	(((g o l d) 1) ((f i n ch) 0)))	;; oul
("goldfinches"	nil	(((g o l d) 1) ((f i n ch) 1) ((@ z) 0)))	;; oul
("goldfish"	nil	(((g o l d) 1) ((f i sh) 0)))	;; oul
("goldfishes"	nil	(((g o l d) 1) ((f i sh) 1) ((@ z) 0)))	;; oul
("goldie"	nil	(((g o l d) 1) ((ii) 0)))	;; oul
("goldilocks"	nil	(((g o l) 1) ((d ii) 0) ((l o k s) 1)))	;; oul
("golding"	nil	(((g o l d) 1) ((i ng) 0)))	;; oul
("goldish"	nil	(((g o l d) 1) ((i sh) 0)))	;; oul
("goldless"	nil	(((g o l d) 1) ((l @ s) 0)))	;; oul
("goldman"	nil	(((g o l d) 1) ((m @ n) 0)))	;; oul
("goldmann"	nil	(((g o l d) 1) ((m @ n) 0)))	;; oul
("goldmans"	nil	(((g o l d) 1) ((m @ n z) 0)))	;; unique
("goldmine"	nil	(((g o l d) 1) ((m ai n) 0)))	;; oul
("goldmines"	nil	(((g o l d) 1) ((m ai n z) 0)))	;; oul
("golds"	nil	(((g o l d z) 1)))	;; oul
("goldschmidt"	nil	(((g o l d) 1) ((sh m i t) 0)))	;; oul
("goldsmith"	nil	(((g o l d) 1) ((s m i th) 0)))	;; oul
("goldsmiths"	nil	(((g o l d) 1) ((s m i th s) 0)))	;; oul
("goldstein"	nil	(((g o l d) 1) ((s t ai n) 0)))	;; oul
("goldsteinism"	nil	(((g o l d) 1) ((s t ai n) 0) ((i) 1) ((z m!) 0)))	;; oul
("goldsteins"	nil	(((g o l d) 1) ((s t ai n z) 0)))	;; unique
("goldsworthy"	nil	(((g o l d z) 1) ((w @@r) 1) ((dh ii) 0)))	;; oul
("goldwater"	nil	(((g o l d) 1) ((w oo) 1) ((t^ @) 0)))	;; oul
("goldwyn"	nil	(((g o l d) 1) ((w i n) 0)))	;; oul
("golfing"	nil	(((g o l f )1)((i ng )0)))	;; ing
("good-for-nothing"	nil	(((g u d )1)((f @ )0)((n uh )1)((th i ng )0)))	;; ing
("good-looking"	nil	(((g u d )1)((l u k )1)((i ng )0)))	;; ing
("good-morning"	nil	(((g u d )0)((m oo )1)((n i ng )0)))	;; ing
("goodlooking"	nil	(((g u d )1)((l u k )1)((i ng )0)))	;; ing
("goodmans"	nil	(((g u d) 1) ((m @ n z) 0)))	;; unique
("goofing"	nil	(((g uu f )1)((i ng )0)))	;; ing
("gophering"	nil	(((g ou )1)((f @ r )0)((i ng )0)))	;; ing
("gorbachevs"	nil	(((g oo) 1) ((b @) 0) ((ch o v z) 0)))	;; unique
("gordons"	nil	(((g oo) 1) ((d n! z) 0)))	;; unique
("gorging"	nil	(((g oo jh )1)((i ng )0)))	;; ing
("gorgonzola"	nil	(((g oo) 1) ((g @ n) 0) ((z o) 1) ((l @) 0)))	;; oul
("goring"	nil	(((g oo r )1)((i ng )0)))	;; ing
("gormandising"	nil	(((g oo )1)((m @ n d )0)((ai z )1)((i ng )0)))	;; ing
("gormandizing"	nil	(((g oo )1)((m @ n d )0)((ai z )1)((i ng )0)))	;; ing
("gosling"	nil	(((g o z )1)((l i ng )0)))	;; ing
("gossiping"	nil	(((g o )1)((s @ p )0)((i ng )0)))	;; ing
("gouging"	nil	(((g ow jh )1)((i ng )0)))	;; ing
("goulash"	nil	(((g u) 1) ((l a sh) 0)))	;; uul
("goulashes"	nil	(((g u) 1) ((l a sh) 0) ((@ z) 0)))	;; uul
("goulding"	nil	(((g @ l )1)((d i ng )0)))	;; ing
("governing"	nil	(((g uh )1)((v n! )0)((i ng )0)))	;; ing
("grabbing"	nil	(((g r a b )1)((i ng )0)))	;; ing
("gracing"	nil	(((g r ei s )1)((i ng )0)))	;; ing
("gradating"	nil	(((g r @ d )0)((ei t^ )1)((i ng )0)))	;; ing
("grading"	nil	(((g r ei d )1)((i ng )0)))	;; ing
("graduating"	nil	(((g r a )1)((jh uw )0)((ei t^ )1)((i ng )0)))	;; ing
("gradys"	nil	(((g r ei) 1) ((d ii z) 0)))	;; unique
("grafting"	nil	(((g r aa f t )1)((i ng )0)))	;; ing
("graining"	nil	(((g r ei n )1)((i ng )0)))	;; ing
("grammar-school"	nil	(((g r a) 1) ((m @) 0) ((s k u l) 1)))	;; uul
("grammar-schools"	nil	(((g r a) 1) ((m @) 0) ((s k u l z) 1)))	;; uul
("gramming"	nil	(((g r a m )1)((i ng )0)))	;; ing
("grandfathering"	nil	(((g r a n d )1)((f aa )1)((dh @ r )0)((i ng )0)))	;; ing
("granola"	nil	(((g r @) 0) ((n o) 1) ((l @) 0)))	;; oul
("grant-holder"	nil	(((g r aa n t) 1) ((h o l d) 1) ((@) 0)))	;; oul
("granting"	nil	(((g r aa n t )1)((i ng )0)))	;; ing
("granvilles"	nil	(((g r a n) 1) ((v i l z) 0)))	;; unique
("graphing"	nil	(((g r aa f )1)((i ng )0)))	;; ing
("grappling"	nil	(((g r a )1)((p l! )0)((i ng )0)))	;; ing
("grasping"	nil	(((g r aa s p )1)((i ng )0)))	;; ing
("grassing"	nil	(((g r aa s )1)((i ng )0)))	;; ing
("grasss"	nil	(((g r aa s) 1) ((@ z) 0)))	;; unique
("gratifying"	nil	(((g r a )1)((t^ @ )0)((f ai )1)((i ng )0)))	;; ing
("grating"	nil	(((g r ei t^ )1)((i ng )0)))	;; ing
("gravelling"	nil	(((g r a )1)((v l! )0)((i ng )0)))	;; ing
("gravess"	nil	(((g r ei v z) 1) ((@ z) 0)))	;; unique
("gravitating"	nil	(((g r a )1)((v @ )0)((t ei t^ )1)((i ng )0)))	;; ing
("gravitys"	nil	(((g r a) 1) ((v @) 0) ((t^ ii z) 0)))	;; unique
("gray-looking"	nil	(((g r ei )1)((l u k )1)((i ng )0)))	;; ing
("graying"	nil	(((g r ei )1)((i ng )0)))	;; ing
("grazing"	nil	(((g r ei z )1)((i ng )0)))	;; ing
("greasing"	nil	(((g r ii s )1)((i ng )0)))	;; ing
("greeces"	nil	(((g r ii s) 1) ((@ z) 0)))	;; unique
("greening"	nil	(((g r ii n )1)((i ng )0)))	;; ing
("greenlands"	nil	(((g r ii n) 1) ((l @ n d z) 0)))	;; unique
("greenpeaces"	nil	(((g r ii n) 1) ((p ii s) 1) ((@ z) 0)))	;; unique
("greenwoods"	nil	(((g r ii n) 1) ((w u d z) 0)))	;; unique
("greeting"	nil	(((g r ii t^ )1)((i ng )0)))	;; ing
("gregorys"	nil	(((g r e) 1) ((g @) 0) ((r ii z) 0)))	;; unique
("gregs"	nil	(((g r e g z) 1)))	;; unique
("gregsons"	nil	(((g r e g) 1) ((s n! z) 0)))	;; unique
("grepping"	nil	(((g r e p )1)((i ng )0)))	;; ing
("greying"	nil	(((g r ei )1)((i ng )0)))	;; ing
("gridding"	nil	(((g r i d )1)((i ng )0)))	;; ing
("griddling"	nil	(((g r i )1)((d l! )0)((i ng )0)))	;; ing
("gridlocking"	nil	(((g r i d )1)((l - o k )0)((i ng )0)))	;; ing
("grieving"	nil	(((g r ii v )1)((i ng )0)))	;; ing
("grilling"	nil	(((g r i l )1)((i ng )0)))	;; ing
("grim-looking"	nil	(((g r i m )1)((l u k )1)((i ng )0)))	;; ing
("grimacing"	nil	(((g r i )1)((m @ s )0)((i ng )0)))	;; ing
("grimsons"	nil	(((g r i m) 1) ((s n! z) 0)))	;; unique
("grinding"	nil	(((g r ai n d )1)((i ng )0)))	;; ing
("grinning"	nil	(((g r i n )1)((i ng )0)))	;; ing
("griping"	nil	(((g r ai p )1)((i ng )0)))	;; ing
("gripping"	nil	(((g r i p )1)((i ng )0)))	;; ing
("griswold"	nil	(((g r i z) 1) ((w o l d) 0)))	;; oul
("gritting"	nil	(((g r i t^ )1)((i ng )0)))	;; ing
("grizzling"	nil	(((g r i )1)((z l! )0)((i ng )0)))	;; ing
("groaning"	nil	(((g r ou n )1)((i ng )0)))	;; ing
("grooming"	nil	(((g r uu m )1)((i ng )0)))	;; ing
("grooving"	nil	(((g r uu v )1)((i ng )0)))	;; ing
("groping"	nil	(((g r ou p )1)((i ng )0)))	;; ing
("grossing"	nil	(((g r ou s )1)((i ng )0)))	;; ing
("grotesquely"	nil	(((g r ou) 0) ((t e s k) 1) ((l ii) 0)))	;; uul
("grouching"	nil	(((g r ow ch )1)((i ng )0)))	;; ing
("ground-breaking"	nil	(((g r ow n d )1)((b r ei k )1)((i ng )0)))	;; ing
("groundbreaking"	nil	(((g r ow n d )1)((b r ei k )1)((i ng )0)))	;; ing
("grounding"	nil	(((g r ow n d )1)((i ng )0)))	;; ing
("grouping"	nil	(((g r uu p )1)((i ng )0)))	;; ing
("grouse-shooting"	nil	(((g r ow s )1)((sh uu t^ )1)((i ng )0)))	;; ing
("grousing"	nil	(((g r ow s )1)((i ng )0)))	;; ing
("grouting"	nil	(((g r ow t^ )1)((i ng )0)))	;; ing
("groveling"	nil	(((g r o )1)((v l! )0)((i ng )0)))	;; ing
("grovelling"	nil	(((g r o )1)((v l! )0)((i ng )0)))	;; ing
("growing"	nil	(((g r ou )1)((i ng )0)))	;; ing
("growling"	nil	(((g r ow l )1)((i ng )0)))	;; ing
("grubbing"	nil	(((g r uh b )1)((i ng )0)))	;; ing
("grudging"	nil	(((g r uh jh )1)((i ng )0)))	;; ing
("gruel"	nil	(((g r u l) 1)))	;; uul
("grueling"	nil	(((g r u l) 1) ((i ng) 0)))	;; uul
("gruelling"	nil	(((g r u l) 1) ((i ng) 0)))	;; uul
("gruels"	nil	(((g r u l z) 1)))	;; uul
("grumbling"	nil	(((g r uh m )1)((b l! )0)((i ng )0)))	;; ing
("grumping"	nil	(((g r uh m p )1)((i ng )0)))	;; ing
("grunting"	nil	(((g r uh n t )1)((i ng )0)))	;; ing
("gs"	nil	(((jh ii z) 1)))	;; unique
("guacamole"	nil	(((g w a) 1) ((k @) 0) ((m o) 1) ((l ii) 0)))	;; oul
("guams"	nil	(((g w aa m z) 1)))	;; unique
("guaranteeing"	nil	(((g a )1)((r @ n )0)((t ii )1)((i ng )0)))	;; ing
("guarding"	nil	(((g aa d )1)((i ng )0)))	;; ing
("guatemalas"	nil	(((g w a) 1) ((t^ @) 0) ((m aa) 1) ((l @ z) 0)))	;; unique
("guessing"	nil	(((g e s )1)((i ng )0)))	;; ing
("guffawing"	nil	(((g uh )0)((f oo )1)((i ng )0)))	;; ing
("guiding"	nil	(((g ai d )1)((i ng )0)))	;; ing
("guillotining"	nil	(((g i )1)((l @ )0)((t ii n )1)((i ng )0)))	;; ing
("gulling"	nil	(((g uh l )1)((i ng )0)))	;; ing
("gullivers"	nil	(((g uh) 1) ((l i) 0) ((v @ z) 0)))	;; unique
("gulping"	nil	(((g o l p )1)((i ng )0)))	;; ing
("gumming"	nil	(((g uh m )1)((i ng )0)))	;; ing
("gun-loving"	nil	(((g uh n )1)((l uh v )1)((i ng )0)))	;; ing
("gunning"	nil	(((g uh n )1)((i ng )0)))	;; ing
("gunrunning"	nil	(((g uh n )1)((r uh n )1)((i ng )0)))	;; ing
("gunslinging"	nil	(((g uh n )1)((s l i ng )1)((i ng )0)))	;; ing
("gurgling"	nil	(((g @@r )1)((g l! )0)((i ng )0)))	;; ing
("gurning"	nil	(((g @@r n )1)((i ng )0)))	;; ing
("gushing"	nil	(((g uh sh )1)((i ng )0)))	;; ing
("gusting"	nil	(((g uh s t )1)((i ng )0)))	;; ing
("guttering"	nil	(((g uh )1)((t^ @ r )0)((i ng )0)))	;; ing
("gutting"	nil	(((g uh t^ )1)((i ng )0)))	;; ing
("gutturalising"	nil	(((g uh )1)((t^ @ )0)((r @ l )0)((ai z )1)((i ng )0)))	;; ing
("gutturalizing"	nil	(((g uh )1)((t^ @ )0)((r @ l )0)((ai z )1)((i ng )0)))	;; ing
("guyanas"	nil	(((g ai) 0) ((a) 1) ((n @ z) 0)))	;; unique
("guying"	nil	(((g ai )1)((i ng )0)))	;; ing
("guzzling"	nil	(((g uh )1)((z l! )0)((i ng )0)))	;; ing
("gwyns"	nil	(((g w i n z) 1)))	;; unique
("gyrating"	nil	(((jh ai )0)((r ei t^ )1)((i ng )0)))	;; ing
("habituating"	nil	(((h @ )0)((b i )1)((ch uw )0)((ei t^ )1)((i ng )0)))	;; ing
("hacking"	nil	(((h a k )1)((i ng )0)))	;; ing
("hadleys"	nil	(((h a d) 1) ((l ii z) 0)))	;; unique
("hadn't"	nil	(((h a d) 1) ((n! t) 0)))	;; contraction
("haemorrhaging"	nil	(((h e )1)((m @ )0)((r i jh )0)((i ng )0)))	;; ing
("haere"	nil	(((h ai) 1) ((r ei) 0)))	;; unique
("haerenga"	nil	(((h aa) 0) ((e) 0) ((r e ng) 1) ((@) 0)))	;; unique
("haggling"	nil	(((h a )1)((g l! )0)((i ng )0)))	;; ing
("hahunga"	nil	(((h aa) 1) ((h uu ng) 0) ((@) 0)))	;; unique
("hailing"	nil	(((h ei l )1)((i ng )0)))	;; ing
("hair-drying"	nil	(((h ii @ )1)((d r ai )1)((i ng )0)))	;; ing
("hair-raising"	nil	(((h ii @ )1)((r ei z )1)((i ng )0)))	;; ing
("haircutting"	nil	(((h ii @ )1)((k uh t^ )1)((i ng )0)))	;; ing
("hairdressing"	nil	(((h ii @ )1)((d r e s )1)((i ng )0)))	;; ing
("hairsplitting"	nil	(((h ii @ )1)((s p l i t^ )1)((i ng )0)))	;; ing
("hairstyling"	nil	(((h ii @ )1)((s t ai l )1)((i ng )0)))	;; ing
("haitis"	nil	(((h ei) 1) ((t^ ii z) 0)))	;; unique
("haka"	nil	(((h aa) 1) ((k @) 0)))	;; unique
("hakari"	nil	(((h aa) 1) ((k aa) 0) ((r ii) 0)))	;; unique
("hakatere"	nil	(((h aa) 1) ((k aa) 0) ((t e) 0) ((r ei) 0)))	;; unique
("hakeke"	nil	(((h aa) 1) ((k e) 0) ((k i) 0)))	;; unique
("hakihaki"	nil	(((h aa) 1) ((k ii) 0) ((h aa) 0) ((k ii) 0)))	;; unique
("hakoakoa"	nil	(((h aa) 0) ((k oo) 1) ((aa) 0) ((k oo) 0) ((@) 0)))	;; unique
("haku"	nil	(((h aa) 1) ((k uu) 0)))	;; unique
("hakuwai"	nil	(((h aa) 1) ((k @) 0) ((w ai) 0)))	;; unique
("half-inching"	nil	(((h - aa f )0)((i n ch )1)((i ng )0)))	;; ing
("half-opening"	nil	(((h aa f )1)((ou )1)((p @ n )0)((i ng )0)))	;; ing
("half-smiling"	nil	(((h aa f )1)((s m ai l )1)((i ng )0)))	;; ing
("half-turning"	nil	(((h - aa f )0)((t @@r n )1)((i ng )0)))	;; ing
("half-whispering"	nil	(((h aa f )1)((w i )1)((s p @ r )0)((i ng )0)))	;; ing
("half-wondering"	nil	(((h aa f )1)((w uh n )1)((d @ r )0)((i ng )0)))	;; ing
("halftoning"	nil	(((h aa f )1)((t ou n )1)((i ng )0)))	;; ing
("halles"	nil	(((h a) 1) ((l ei z) 0)))	;; unique
("hallidays"	nil	(((h a) 1) ((l @) 0) ((d ei z) 0)))	;; unique
("hallmarking"	nil	(((h oo l )1)((m aa k )1)((i ng )0)))	;; ing
("hallooing"	nil	(((h @ )0)((l uu )1)((i ng )0)))	;; ing
("hallowing"	nil	(((h a )1)((l ou )0)((i ng )0)))	;; ing
("hallucinating"	nil	(((h @ )0)((l uu )1)((s @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("hals"	nil	(((h a l z) 1)))	;; unique
("halsteads"	nil	(((h a l) 1) ((s t e d z) 0)))	;; unique
("halting"	nil	(((h oo l t )1)((i ng )0)))	;; ing
("halving"	nil	(((h aa v )1)((i ng )0)))	;; ing
("hamiltons"	nil	(((h a) 1) ((m l!) 0) ((t @ n z) 0)))	;; unique
("hammering"	nil	(((h a )1)((m @ r )0)((i ng )0)))	;; ing
("hamming"	nil	(((h a m )1)((i ng )0)))	;; ing
("hampering"	nil	(((h a m )1)((p @ r )0)((i ng )0)))	;; ing
("hampshires"	nil	(((h a m p) 1) ((sh @ z) 0)))	;; unique
("hamstringing"	nil	(((h a m )1)((s t r i ng )1)((i ng )0)))	;; ing
("hamutana"	nil	(((h aa) 1) ((m uu) 0) ((t aa) 0) ((n @) 0)))	;; unique
("hand-shaking"	nil	(((h a n d )1)((sh ei k )1)((i ng )0)))	;; ing
("hand-writing"	nil	(((h a n d )1)((r ai t^ )1)((i ng )0)))	;; ing
("handcrafting"	nil	(((h a n d )1)((k r aa f t )1)((i ng )0)))	;; ing
("handcuffing"	nil	(((h a n d )1)((k uh f )1)((i ng )0)))	;; ing
("handhold"	nil	(((h a n d) 1) ((h o l d) 0)))	;; oul
("handholding"	nil	(((h a n d) 1) ((h o l d) 1) ((i ng) 0)))	;; oul
("handholds"	nil	(((h a n d) 1) ((h o l d z) 0)))	;; oul
("handicapping"	nil	(((h a n )1)((d iy )0)((k a p )1)((i ng )0)))	;; ing
("handing"	nil	(((h a n d )1)((i ng )0)))	;; ing
("handling"	nil	(((h a n )1)((d l! )0)((i ng )0)))	;; ing
("handprinting"	nil	(((h a n d )1)((p r i n t )1)((i ng )0)))	;; ing
("hands-breadth"	nil	(((h a n d z) 1) ((b r e t th) 0)))	;; unique
("handsetting"	nil	(((h a n d )1)((s e t^ )1)((i ng )0)))	;; ing
("handshaking"	nil	(((h a n d )1)((sh ei k )1)((i ng )0)))	;; ing
("handtool"	nil	(((h a n d) 1) ((t u l) 0)))	;; uul
("handtools"	nil	(((h a n d) 1) ((t u l z) 0)))	;; uul
("handwashing"	nil	(((h a n d )1)((w o sh )1)((i ng )0)))	;; ing
("handwaving"	nil	(((h a n d )1)((w ei v )1)((i ng )0)))	;; ing
("handwriting"	nil	(((h a n d )1)((r ai t^ )1)((i ng )0)))	;; ing
("hangehange"	nil	(((h uh ng) 1) ((e) 0) ((h uh ng) 0) ((ei) 0)))	;; unique
("hangi"	nil	(((h uh ng) 1) ((ii) 0)))	;; unique
("hanging"	nil	(((h a ng )1)((i ng )0)))	;; ing
("hani"	nil	(((h a) 1) ((n ii) 0)))	;; unique
("hankering"	nil	(((h a ng )1)((k @ r )0)((i ng )0)))	;; ing
("hanlons"	nil	(((h a n) 1) ((l @ n z) 0)))	;; unique
("hannibals"	nil	(((h a) 1) ((n @) 0) ((b l! z) 0)))	;; unique
("hanois"	nil	(((h a) 0) ((n oi z) 1)))	;; unique
("hapene"	nil	(((h aa) 1) ((p e) 0) ((n ei) 0)))	;; unique
("hapennies"	nil	(((h ei) 1) ((p @) 0) ((n ii z) 0)))	;; unique
("hapenny"	nil	(((h ei) 1) ((p @) 0) ((n ii) 0)))	;; unique
("haporth"	nil	(((h ei) 1) ((p @ th) 0)))	;; unique
("happening"	nil	(((h a )1)((p @ n )0)((i ng )0)))	;; ing
("hapu"	nil	(((h aa) 1) ((p uu) 0)))	;; unique
("hapua"	nil	(((h aa) 1) ((p uu) 0) ((@) 0)))	;; unique
("hapuku"	nil	(((h aa) 1) ((p uu) 0) ((k uu) 0)))	;; unique
("harakeke"	nil	(((h aa) 1) ((r aa) 0) ((k e) 0) ((k ei) 0)))	;; unique
("harassing"	nil	(((h @ )0)((r aa s )1)((i ng )0)))	;; ing
("harboring"	nil	(((h aa )1)((b @ r )0)((i ng )0)))	;; ing
("harbouring"	nil	(((h aa )1)((b @ r )0)((i ng )0)))	;; ing
("hard-coding"	nil	(((h aa d )1)((k ou d )1)((i ng )0)))	;; ing
("hard-living"	nil	(((h aa d )1)((l i v )1)((i ng )0)))	;; ing
("hard-working"	nil	(((h aa d )1)((w @@r k )1)((i ng )0)))	;; ing
("hardening"	nil	(((h aa d )1)((n! )0)((i ng )0)))	;; ing
("harding"	nil	(((h aa )1)((d i ng )0)))	;; ing
("hardings"	nil	(((h aa) 1) ((d i ng z) 0)))	;; unique
("hardworking"	nil	(((h aa d )1)((w @@r k )1)((i ng )0)))	;; ing
("haring"	nil	(((h ir r )1)((i ng )0)))	;; ing
("harkening"	nil	(((h aa k )1)((@ n )0)((i ng )0)))	;; ing
("harking"	nil	(((h aa k )1)((i ng )0)))	;; ing
("harmans"	nil	(((h aa) 1) ((m @ n z) 0)))	;; unique
("harmdoing"	nil	(((h aa m )1)((d uu )1)((i ng )0)))	;; ing
("harming"	nil	(((h aa m )1)((i ng )0)))	;; ing
("harmonising"	nil	(((h aa )1)((m @ )0)((n ai z )1)((i ng )0)))	;; ing
("harmonizing"	nil	(((h aa )1)((m @ )0)((n ai z )1)((i ng )0)))	;; ing
("harnessing"	nil	(((h aa )1)((n @ s )0)((i ng )0)))	;; ing
("harolds"	nil	(((h a) 1) ((r @ l d z) 0)))	;; unique
("harore"	nil	(((h aa) 1) ((r ou) 0) ((r ei) 0)))	;; unique
("harping"	nil	(((h aa p )1)((i ng )0)))	;; ing
("harpooning"	nil	(((h aa )0)((p uu n )1)((i ng )0)))	;; ing
("harriss"	nil	(((h a) 1) ((r i s) 0) ((@ z) 0)))	;; unique
("harrowing"	nil	(((h a )1)((r ou )0)((i ng )0)))	;; ing
("harrying"	nil	(((h a )1)((r iy )0)((i ng )0)))	;; ing
("harrys"	nil	(((h a) 1) ((r ii z) 0)))	;; unique
("hartlepool"	nil	(((h aa t) 1) ((l i) 0) ((p u l) 0)))	;; uul
("hartlepools"	nil	(((h aa t) 1) ((l i) 0) ((p u l z) 0)))	;; uul
("harvards"	nil	(((h aa) 1) ((v @ d z) 0)))	;; unique
("harvesting"	nil	(((h aa )1)((v @ s t )0)((i ng )0)))	;; ing
("hashing"	nil	(((h a sh )1)((i ng )0)))	;; ing
("hasn't"	nil	(((h a z) 1) ((n! t) 0)))	;; contraction
("hassans"	nil	(((h @) 0) ((s a n z) 1)))	;; unique
("hassling"	nil	(((h a )1)((s l! )0)((i ng )0)))	;; ing
("hastening"	nil	(((h ei s )1)((n! )0)((i ng )0)))	;; ing
("hatching"	nil	(((h a ch )1)((i ng )0)))	;; ing
("hatchling"	nil	(((h a ch )1)((l i ng )0)))	;; ing
("hatemongering"	nil	(((h ei t )1)((m uh ng )1)((g @ r )0)((i ng )0)))	;; ing
("hating"	nil	(((h ei t^ )1)((i ng )0)))	;; ing
("hatmaking"	nil	(((h a t )1)((m ei k )1)((i ng )0)))	;; ing
("hauama"	nil	(((h ow) 1) ((aa) 0) ((m @) 0)))	;; unique
("hauhau"	nil	(((h ow) 1) ((h ow) 0)))	;; unique
("hauling"	nil	(((h oo l )1)((i ng )0)))	;; ing
("haumakoroa"	nil	(((h ow) 1) ((m aa) 0) ((k oo) 0) ((r ou) 0) ((@) 0)))	;; unique
("haumata"	nil	(((h ow) 1) ((m aa) 0) ((t^ @) 0)))	;; unique
("haunting"	nil	(((h oo n t )1)((i ng )0)))	;; ing
("hauraki"	nil	(((h ow) 1) ((r a) 0) ((k ii) 0)))	;; unique
("haurangi"	nil	(((h ow) 1) ((r uh ng) 0) ((ii) 0)))	;; unique
("hauture"	nil	(((h aa) 1) ((t uu) 0) ((r ei) 0)))	;; unique
("haven't"	nil	(((h a v) 1) ((n! t) 0)))	;; contraction
("having"	nil	(((h a v )1)((i ng )0)))	;; ing
("hawaiis"	nil	(((h @) 0) ((w ai) 1) ((ii z) 0)))	;; unique
("hawaiki"	nil	(((h aa) 0) ((w ai) 1) ((y ii) 0) ((k ii) 0)))	;; unique
("hawing"	nil	(((h oo )1)((i ng )0)))	;; ing
("hawking"	nil	(((h oo k )1)((i ng )0)))	;; ing
("hayess"	nil	(((h ei z) 1) ((@ z) 0)))	;; unique
("haymaking"	nil	(((h ei )1)((m ei k )1)((i ng )0)))	;; ing
("hazarding"	nil	(((h a )1)((z @ d )0)((i ng )0)))	;; ing
("he'd"	nil	(((h ii d) 1)))	;; contraction
("he'll"	nil	(((h ii l) 1)))	;; contraction
("he's"	nil	(((h ii z) 1)))	;; contraction
("headhunting"	nil	(((h e d )1)((h uh n t )1)((i ng )0)))	;; ing
("heading"	nil	(((h e d )1)((i ng )0)))	;; ing
("headlining"	nil	(((h e d )1)((l ai n )1)((i ng )0)))	;; ing
("headquartering"	nil	(((h e d )1)((k w oo )1)((t^ @ r )0)((i ng )0)))	;; ing
("headshaking"	nil	(((h e d )1)((sh ei k )1)((i ng )0)))	;; ing
("healing"	nil	(((h ii l )1)((i ng )0)))	;; ing
("health-giving"	nil	(((h a l th )1)((g i v )1)((i ng )0)))	;; ing
("healthy-looking"	nil	(((h a l th )1)((iy )0)((l u k )1)((i ng )0)))	;; ing
("heaping"	nil	(((h ii p )1)((i ng )0)))	;; ing
("hearing"	nil	(((h ir r )1)((i ng )0)))	;; ing
("hearkening"	nil	(((h aa )1)((k @ n )0)((i ng )0)))	;; ing
("heart-breaking"	nil	(((h aa t )1)((b r ei k )1)((i ng )0)))	;; ing
("heart-piercing"	nil	(((h aa t )1)((p ir s )1)((i ng )0)))	;; ing
("heart-rending"	nil	(((h aa t )1)((r e n d )1)((i ng )0)))	;; ing
("heartbreaking"	nil	(((h aa t )1)((b r ei k )1)((i ng )0)))	;; ing
("heartburning"	nil	(((h aa t )1)((b @@r n )1)((i ng )0)))	;; ing
("heartening"	nil	(((h aa t )1)((n! )0)((i ng )0)))	;; ing
("heartsease"	nil	(((h aa t s) 1) (( ii z) 0)))	;; unique
("heartwarming"	nil	(((h aa t )1)((w oo m )1)((i ng )0)))	;; ing
("heat-trapping"	nil	(((h ii t )1)((t r a p )1)((i ng )0)))	;; ing
("heating"	nil	(((h ii t^ )1)((i ng )0)))	;; ing
("heaving"	nil	(((h ii v )1)((i ng )0)))	;; ing
("heckling"	nil	(((h e )1)((k l! )0)((i ng )0)))	;; ing
("hectoring"	nil	(((h e k )1)((t @ r )0)((i ng )0)))	;; ing
("hedgehopping"	nil	(((h e jh )1)((h o p )1)((i ng )0)))	;; ing
("hedging"	nil	(((h e jh )1)((i ng )0)))	;; ing
("heeding"	nil	(((h ii d )1)((i ng )0)))	;; ing
("heeling"	nil	(((h ii l )1)((i ng )0)))	;; ing
("hegels"	nil	(((h ei) 1) ((g l! s) 0)))	;; unique
("hei"	nil	(((h e) 1) ((ii) 0)))	;; unique
("heidis"	nil	(((h ai) 1) ((d ii z) 0)))	;; unique
("heightening"	nil	(((h ai t )1)((n! )0)((i ng )0)))	;; ing
("heke"	nil	(((h e) 1) ((k ei) 0)))	;; unique
("heketara"	nil	(((h e) 1) ((k e) 0) ((t aa) 0) ((r @) 0)))	;; unique
("helenas"	nil	(((h a) 1) ((l @) 0) ((n @ z) 0)))	;; unique
("hellers"	nil	(((h a) 1) ((l @ z) 0)))	;; unique
("hellhole"	nil	(((h a l) 1) ((h o l) 0)))	;; oul
("hellholes"	nil	(((h a l) 1) ((h o l z) 0)))	;; oul
("helping"	nil	(((h a l p )1)((i ng )0)))	;; ing
("hemming"	nil	(((h e )1)((m i ng )0)))	;; ing
("hemorrhaging"	nil	(((h e )1)((m @ )0)((r i jh )0)((i ng )0)))	;; ing
("henare"	nil	(((h e) 1) ((n aa) 0) ((r ei) 0)))	;; unique
("hendersons"	nil	(((h e n) 1) ((d @) 0) ((s n! z) 0)))	;; unique
("henleys"	nil	(((h e n) 1) ((l ii z) 0)))	;; unique
("hennaing"	nil	(((h e )1)((n @ )0)((i ng )0)))	;; ing
("henning"	nil	(((h e )1)((n i ng )0)))	;; ing
("henpecking"	nil	(((h e n )1)((p e k )1)((i ng )0)))	;; ing
("heralding"	nil	(((h e )1)((r @ l d )0)((i ng )0)))	;; ing
("herberts"	nil	(((h @@r) 1) ((b @ t s) 0)))	;; unique
("herding"	nil	(((h @@r d )1)((i ng )0)))	;; ing
("hermanns"	nil	(((h @@r) 1) ((m @ n z) 0)))	;; unique
("hermans"	nil	(((h @@r) 1) ((m @ n z) 0)))	;; unique
("herring"	nil	(((h e )1)((r i ng )0)))	;; ing
("heruheru"	nil	(((h e) 1) ((r uu) 0) ((h e) 0) ((r uu) 0)))	;; unique
("hesitating"	nil	(((h e )1)((z @ )0)((t ei t^ )1)((i ng )0)))	;; ing
("hesss"	nil	(((h e s) 1) ((@ z) 0)))	;; unique
("hewing"	nil	(((h y uu )1)((i ng )0)))	;; ing
("hexing"	nil	(((h e k s )1)((i ng )0)))	;; ing
("hibernating"	nil	(((h ai )1)((b @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("hiccoughing"	nil	(((h i )1)((k uh p )0)((i ng )0)))	;; ing
("hiccuping"	nil	(((h i )1)((k uh p )0)((i ng )0)))	;; ing
("hiccupping"	nil	(((h i )1)((k uh p )0)((i ng )0)))	;; ing
("hidey-hole"	nil	(((h ai) 1) ((d ii) 0) ((h o l) 1)))	;; oul
("hiding"	nil	(((h ai d )1)((i ng )0)))	;; ing
("hidy-hole"	nil	(((h ai) 1) ((d ii) 0) ((h o l) 1)))	;; oul
("hierarchys"	nil	(((h ai) 1) ((r aa) 1) ((k ii z) 0)))	;; unique
("higginss"	nil	(((h i) 1) ((g i n z) 0) ((@ z) 0)))	;; unique
("high-breeding"	nil	(((h ai )1)((b r ii d )1)((i ng )0)))	;; ing
("high-earning"	nil	(((h ai )1)((@@r n )1)((i ng )0)))	;; ing
("high-flying"	nil	(((h ai )1)((f l ai )1)((i ng )0)))	;; ing
("high-ranking"	nil	(((h - ai )0)((r a ng k )1)((i ng )0)))	;; ing
("high-sounding"	nil	(((h ai )1)((s ow n d )1)((i ng )0)))	;; ing
("high-stepping"	nil	(((h ai )1)((s t e p )1)((i ng )0)))	;; ing
("high-voltage"	nil	(((h ai) 1) ((v o l t) 1) ((i jh) 0)))	;; oul
("highballing"	nil	(((h ai )1)((b oo l )1)((i ng )0)))	;; ing
("highlighting"	nil	(((h ai )1)((l - ai t^ )0)((i ng )0)))	;; ing
("highnesss"	nil	(((h ai) 1) ((n @ s) 0) ((@ z) 0)))	;; unique
("highschool"	nil	(((h ai) 1) ((s k u l) 0)))	;; uul
("highschools"	nil	(((h ai) 1) ((s k u l z) 0)))	;; uul
("hightailing"	nil	(((h ai )1)((t ei l )1)((i ng )0)))	;; ing
("highwaymans"	nil	(((h ai) 1) ((w ei) 0) ((m @ n z) 0)))	;; unique
("hihi"	nil	(((h ii) 1) ((h ii) 0)))	;; unique
("hijacking"	nil	(((h ai )1)((jh a k )0)((i ng )0)))	;; ing
("hiki"	nil	(((h ii) 1) ((k ii) 0)))	;; unique
("hiking"	nil	(((h ai k )1)((i ng )0)))	;; ing
("hikoi"	nil	(((h ii) 1) ((k oo) 0) ((ii) 0)))	;; unique
("hiku"	nil	(((h ii) 1) ((k uu) 0)))	;; unique
("hilberts"	nil	(((h i l) 1) ((b @ t s) 0)))	;; unique
("hillclimbing"	nil	(((h i l )1)((k l ai m )1)((i ng )0)))	;; ing
("hinahina"	nil	(((h ii) 1) ((n aa) 0) ((h ii) 0) ((n @) 0)))	;; unique
("hinaki"	nil	(((h ii) 1) ((n aa) 0) ((k ii) 0)))	;; unique
("hinau"	nil	(((h ii) 1) ((n ow) 0)))	;; unique
("hindering"	nil	(((h i n )1)((d @ r )0)((i ng )0)))	;; ing
("hinging"	nil	(((h i n jh )1)((i ng )0)))	;; ing
("hinting"	nil	(((h i n t )1)((i ng )0)))	;; ing
("hinu"	nil	(((h ii) 1) ((n uu) 0)))	;; unique
("hioi"	nil	(((h ii) 1) ((oo) 0) ((ii) 0)))	;; unique
("hipi"	nil	(((h ii) 1) ((p ii) 0)))	;; unique
("hireling"	nil	(((h ai @ )1)((l i ng )0)))	;; ing
("hiring"	nil	(((h ai @ r )1)((i ng )0)))	;; ing
("hissing"	nil	(((h i s )1)((i ng )0)))	;; ing
("historys"	nil	(((h i) 1) ((s t @) 0) ((r ii z) 0)))	;; unique
("hitachis"	nil	(((h i) 0) ((t aa) 1) ((ch ii z) 0)))	;; unique
("hitchhiking"	nil	(((h i ch )1)((h ai k )1)((i ng )0)))	;; ing
("hitching"	nil	(((h i ch )1)((i ng )0)))	;; ing
("hitting"	nil	(((h i t^ )1)((i ng )0)))	;; ing
("hiving"	nil	(((h ai v )1)((i ng )0)))	;; ing
("hiwi"	nil	(((h ii) 1) ((w ii) 0)))	;; unique
("hiwihiwi"	nil	(((h ii) 1) ((w ii) 0) ((h ii) 0) ((w ii) 0)))	;; unique
("hoa"	nil	(((h ou) 1) ((@) 0)))	;; unique
("hoarding"	nil	(((h oo d )1)((i ng )0)))	;; ing
("hoarsening"	nil	(((h oo s )1)((n! )0)((i ng )0)))	;; ing
("hoaxing"	nil	(((h ou k s )1)((i ng )0)))	;; ing
("hobbing"	nil	(((h o b )1)((i ng )0)))	;; ing
("hobbling"	nil	(((h o )1)((b l! )0)((i ng )0)))	;; ing
("hobnobbing"	nil	(((h o b )1)((n o b )1)((i ng )0)))	;; ing
("hocking"	nil	(((h o k )1)((i ng )0)))	;; ing
("hodgkins"	nil	(((h o jh) 1) ((k i n z) 0)))	;; unique
("hoeing"	nil	(((h ou )1)((i ng )0)))	;; ing
("hoffmans"	nil	(((h o f) 1) ((m @ n z) 0)))	;; unique
("hogging"	nil	(((h o g )1)((i ng )0)))	;; ing
("hoha"	nil	(((h ou) 1) ((h aa) 0)))	;; unique
("hoiho"	nil	(((h oo) 1) ((ii) 0) ((h oo) 0)))	;; unique
("hoisting"	nil	(((h oi s t )1)((i ng )0)))	;; ing
("hoka"	nil	(((h oo) 1) ((k @) 0)))	;; unique
("hokarari"	nil	(((h oo) 1) ((k aa) 0) ((r aa) 0) ((r ii) 0)))	;; unique
("hoki"	nil	(((h ou) 1) ((k ii) 0)))	;; unique
("hokianga"	nil	(((h ou) 1) ((k ii) 0) ((uh ng) 0) ((@) 0)))	;; unique
("hokioi"	nil	(((h oo) 1) ((k ii) 0) ((oo) 0) ((ii) 0)))	;; unique
("hokitika"	nil	(((h o) 0) ((k @) 0) ((t i) 1) ((k @) 0)))	;; unique
("hokonui"	nil	(((h o) 1) ((k @) 0) ((n uu) 0) ((ii) 0)))	;; unique
("hold"	nil	(((h o l d) 1)))	;; oul
("hold-up"	nil	(((h o l d) 1) (( uh p) 0)))	;; oul
("holden"	nil	(((h o l) 1) ((d n!) 0)))	;; oul
("holder"	nil	(((h o l d) 1) ((@) 0)))	;; oul
("holders"	nil	(((h o l d) 1) ((@ z) 0)))	;; oul
("holding"	nil	(((h o l d) 1) ((i ng) 0)))	;; oul
("holdings"	nil	(((h o l d) 1) ((i ng z) 0)))	;; oul
("holdouts"	nil	(((h o l d) 1) (( ow t s) 0)))	;; oul
("holdover"	nil	(((h o l d) 1) ((ou) 1) ((v @) 0)))	;; oul
("holdovers"	nil	(((h o l d) 1) ((ou) 1) ((v @ z) 0)))	;; oul
("holds"	nil	(((h o l d z) 1)))	;; oul
("holdup"	nil	(((h o l d) 1) (( uh p) 0)))	;; oul
("holdups"	nil	(((h o l d) 1) (( uh p s) 0)))	;; oul
("hole"	nil	(((h o l) 1)))	;; oul
("hole-picking"	nil	(((h o l) 1) ((p i k) 1) ((i ng) 0)))	;; oul
("holeable"	nil	(((h o l) 1) ((@) 0) ((b l!) 0)))	;; oul
("holed"	nil	(((h o l d) 1)))	;; oul
("holeless"	nil	(((h o l) 1) ((l @ s) 0)))	;; oul
("holes"	nil	(((h o l z) 1)))	;; oul
("holey"	nil	(((h o l) 1) ((ii) 0)))	;; oul
("holidaying"	nil	(((h o )1)((l @ )0)((d ei )1)((i ng )0)))	;; ing
("holier"	nil	(((h o) 1) ((l ii @) 0)))	;; oul
("holies"	nil	(((h o) 1) ((l ii z) 0)))	;; oul
("holiest"	nil	(((h o) 1) ((l ii @ s t) 0)))	;; oul
("holiests"	nil	(((h o) 1) ((l ii @ s t s) 0)))	;; oul
("holily"	nil	(((h o) 1) ((l @) 0) ((l ii) 0)))	;; oul
("holiness"	nil	(((h o) 1) ((l ii) 0) ((n @ s) 0)))	;; oul
("holing"	nil	(((h o l) 1) ((i ng) 0)))	;; oul
("holism"	nil	(((h o l) 1) ((i) 0) ((z m!) 0)))	;; oul
("holistic"	nil	(((h o l) 0) ((i) 1) ((s t i k) 0)))	;; oul
("hollands"	nil	(((h o) 1) ((l @ n d z) 0)))	;; unique
("hollering"	nil	(((h o )1)((l @ r )0)((i ng )0)))	;; ing
("hollowing"	nil	(((h o )1)((l ou )0)((i ng )0)))	;; ing
("holman"	nil	(((h o l) 1) ((m @ n) 0)))	;; oul
("holmess"	nil	(((h ou m z) 1) ((@ z) 0)))	;; unique
("holmium"	nil	(((h o l) 1) ((m ii @ m) 0)))	;; oul
("holst"	nil	(((h o l s t) 1)))	;; oul
("holster"	nil	(((h o l) 1) ((s t @) 0)))	;; oul
("holstered"	nil	(((h o l) 1) ((s t @ d) 0)))	;; oul
("holsters"	nil	(((h o l) 1) ((s t @ z) 0)))	;; oul
("holt"	nil	(((h o l t) 1)))	;; oul
("holy"	nil	(((h o) 1) ((l ii) 0)))	;; oul
("holyoke"	nil	(((h o) 1) ((l ii) 0) ((ou k) 0)))	;; oul
("holystone"	nil	(((h o) 1) ((l ii) 0) ((s t ou n) 1)))	;; oul
("homai"	nil	(((h ou) 1) ((m ai) 0)))	;; unique
("home-coming"	nil	(((h ou m )1)((k uh m )1)((i ng )0)))	;; ing
("homebuilding"	nil	(((h ou m )1)((b i l d )1)((i ng )0)))	;; ing
("homecoming"	nil	(((h ou m )1)((k uh m )1)((i ng )0)))	;; ing
("homemaking"	nil	(((h ou m )1)((m ei k )1)((i ng )0)))	;; ing
("homeschooling"	nil	(((h ou m) 1) ((s k u l) 1) ((i ng) 0)))	;; uul
("homing"	nil	(((h ou m )1)((i ng )0)))	;; ing
("homogenizing"	nil	(((h @ )0)((m o )1)((jh @ )0)((n ai z )1)((i ng )0)))	;; ing
("honeying"	nil	(((h uh )1)((n iy )0)((i ng )0)))	;; ing
("honeymooning"	nil	(((h uh )1)((n iy )0)((m uu n )1)((i ng )0)))	;; ing
("hongi"	nil	(((h o ng) 1) ((ii) 0)))	;; unique
("honing"	nil	(((h ou n )1)((i ng )0)))	;; ing
("honking"	nil	(((h o ng k )1)((i ng )0)))	;; ing
("honoring"	nil	(((o )1)((n @ r )0)((i ng )0)))	;; ing
("honourd"	nil	(((o) 1) ((n @ d) 0)))	;; unique
("honouring"	nil	(((o )1)((n @ r )0)((i ng )0)))	;; ing
("hooding"	nil	(((h u d )1)((i ng )0)))	;; ing
("hoodwinking"	nil	(((h u d )1)((w - i ng k )0)((i ng )0)))	;; ing
("hooking"	nil	(((h u k )1)((i ng )0)))	;; ing
("hooligan"	nil	(((h @) 1) ((l i) 0) ((g @ n) 0)))	;; uul
("hooliganise"	nil	(((h @) 1) ((l i) 0) ((g @ n) 0) ((ai z) 0)))	;; uul
("hooliganism"	nil	(((h @) 1) ((l i) 0) ((g @ n) 0) ((i) 1) ((z m!) 0)))	;; uul
("hooliganize"	nil	(((h @) 1) ((l i) 0) ((g @ n) 0) ((ai z) 0)))	;; uul
("hooligans"	nil	(((h @) 1) ((l i) 0) ((g @ n z) 0)))	;; uul
("hooting"	nil	(((h uu t^ )1)((i ng )0)))	;; ing
("hoovering"	nil	(((h uu )1)((v @ r )0)((i ng )0)))	;; ing
("hoping"	nil	(((h ou p )1)((i ng )0)))	;; ing
("hopkinss"	nil	(((h o p) 1) ((k i n z) 0) ((@ z) 0)))	;; unique
("hopping"	nil	(((h o p )1)((i ng )0)))	;; ing
("hori"	nil	(((h o) 1) ((r ii) 0)))	;; unique
("horners"	nil	(((h oo) 1) ((n @ z) 0)))	;; unique
("horning"	nil	(((h oo n )1)((i ng )0)))	;; ing
("horoeka"	nil	(((h oo) 1) ((r ou) 0) ((e) 0) ((k @) 0)))	;; unique
("horokaka"	nil	(((h oo) 1) ((r ou) 0) ((k aa) 0) ((k @) 0)))	;; unique
("horopito"	nil	(((h oo) 1) ((r ou) 0) ((p ii) 0) ((t^ ou) 0)))	;; unique
("horrifying"	nil	(((h o )1)((r @ )0)((f ai )1)((i ng )0)))	;; ing
("horse-shoeing"	nil	(((h oo s )1)((sh uu )1)((i ng )0)))	;; ing
("horsemens"	nil	(((h oo s) 1) ((m @ n z) 0)))	;; unique
("horseracing"	nil	(((h oo s )1)((r ei s )1)((i ng )0)))	;; ing
("horseriding"	nil	(((h oo s )1)((r ai d )1)((i ng )0)))	;; ing
("horseshoeing"	nil	(((h oo s )1)((sh uu )1)((i ng )0)))	;; ing
("horsewhipping"	nil	(((h oo s )1)((w i p )1)((i ng )0)))	;; ing
("horsing"	nil	(((h oo s )1)((i ng )0)))	;; ing
("hosing"	nil	(((h ou z )1)((i ng )0)))	;; ing
("hosking"	nil	(((h o )1)((s k i ng )0)))	;; ing
("hospitalising"	nil	(((h o )1)((s p i )0)((t l! )0)((ai z )1)((i ng )0)))	;; ing
("hospitalizing"	nil	(((h o )1)((s p i )0)((t l! )0)((ai z )1)((i ng )0)))	;; ing
("hostage-taking"	nil	(((h o )1)((s t i jh )0)((t ei k )1)((i ng )0)))	;; ing
("hosteling"	nil	(((h o )1)((s t l! )0)((i ng )0)))	;; ing
("hostelling"	nil	(((h o )1)((s t l! )0)((i ng )0)))	;; ing
("hosting"	nil	(((h ou s t )1)((i ng )0)))	;; ing
("hotete"	nil	(((h ou) 1) ((t e) 0) ((t^ ei) 0)))	;; unique
("hotfooting"	nil	(((h o t )1)((f u t^ )1)((i ng )0)))	;; ing
("hotkeying"	nil	(((h o t )1)((k ii )1)((i ng )0)))	;; ing
("hotrodding"	nil	(((h o t )1)((r o d )1)((i ng )0)))	;; ing
("hotting"	nil	(((h o t^ )1)((i ng )0)))	;; ing
("houhere"	nil	(((h ou) 1) ((h e) 0) ((r ei) 0)))	;; unique
("houi"	nil	(((h ou) 1) ((ii) 0)))	;; unique
("hounding"	nil	(((h ow n d )1)((i ng )0)))	;; ing
("houpara"	nil	(((h ou) 1) ((p aa) 0) ((r @) 0)))	;; unique
("house-building"	nil	(((h ow s )1)((b i l d )1)((i ng )0)))	;; ing
("housebreaking"	nil	(((h ow s )1)((b r ei k )1)((i ng )0)))	;; ing
("housebuilding"	nil	(((h ow s )1)((b i l d )1)((i ng )0)))	;; ing
("housecleaning"	nil	(((h ow s )1)((k l ii n )1)((i ng )0)))	;; ing
("household"	nil	(((h ow s) 1) ((h o l d) 0)))	;; oul
("householder"	nil	(((h ow s) 1) ((h o l d) 1) ((@) 0)))	;; oul
("householders"	nil	(((h ow s) 1) ((h o l d) 1) ((@ z) 0)))	;; oul
("households"	nil	(((h ow s) 1) ((h o l d z) 0)))	;; oul
("housekeeping"	nil	(((h ow s )1)((k ii p )1)((i ng )0)))	;; ing
("housewarming"	nil	(((h ow s )1)((w oo m )1)((i ng )0)))	;; ing
("housing"	nil	(((h ow z )1)((i ng )0)))	;; ing
("houstons"	nil	(((h y uu) 1) ((s t @ n z) 0)))	;; unique
("hovering"	nil	(((h o )1)((v @ r )0)((i ng )0)))	;; ing
("how-dye-do"	nil	(((h ow) 1) ((jh @) 0) ((d uu) 1)))	;; unique
("howd"	nil	(((h ow d) 1)))	;; unique
("howling"	nil	(((h ow l )1)((i ng )0)))	;; ing
("hows"	nil	(((h ow z) 1)))	;; unique
("hs"	nil	(((ei ch) 1) ((@ z) 0)))	;; unique
("huahua"	nil	(((h uu) 1) ((aa) 0) ((h uu) 0) ((@) 0)))	;; unique
("huakaroro"	nil	(((h uu) 1) ((aa) 0) ((k aa) 0) ((r ou) 1) ((r ou) 0)))	;; unique
("hubbards"	nil	(((h uh) 1) ((b @ d z) 0)))	;; unique
("hubbles"	nil	(((h uh) 1) ((b l! z) 0)))	;; unique
("huckstering"	nil	(((h uh k )1)((s t @ r )0)((i ng )0)))	;; ing
("huddling"	nil	(((h uh )1)((d l! )0)((i ng )0)))	;; ing
("huffing"	nil	(((h uh f )1)((i ng )0)))	;; ing
("hugging"	nil	(((h uh g )1)((i ng )0)))	;; ing
("hughs"	nil	(((h y uu z) 1)))	;; unique
("huhu"	nil	(((h uu) 1) ((h uu) 0)))	;; unique
("hui"	nil	(((h uu) 1) ((ii) 0)))	;; unique
("huia"	nil	(((h uu) 1) ((i) 0) ((@) 0)))	;; unique
("huihuinga"	nil	(((h uu) 1) ((ii) 0) ((h uu) 1) ((ii ng) 0) ((@) 0)))	;; unique
("hulking"	nil	(((h o l k )1)((i ng )0)))	;; ing
("hulling"	nil	(((h uh l )1)((i ng )0)))	;; ing
("humanising"	nil	(((h y uu )1)((m @ n )0)((ai z )1)((i ng )0)))	;; ing
("humanitys"	nil	(((h y uw) 0) ((m a n) 1) ((@) 0) ((t^ ii z) 0)))	;; unique
("humanizing"	nil	(((h y uu )1)((m @ n )0)((ai z )1)((i ng )0)))	;; ing
("humankinds"	nil	(((h y uu) 1) ((m @ n) 0) ((k ai n d z) 1)))	;; unique
("humbling"	nil	(((h uh m )1)((b l! )0)((i ng )0)))	;; ing
("humboldt"	nil	(((h uh m) 1) ((b o l t) 0)))	;; oul
("humidifying"	nil	(((h y uw )0)((m i d )1)((@ )0)((f ai )1)((i ng )0)))	;; ing
("humiliating"	nil	(((h y uw )0)((m i )1)((l iy )0)((ei t^ )1)((i ng )0)))	;; ing
("humming"	nil	(((h uh m )1)((i ng )0)))	;; ing
("humoring"	nil	(((h y uu )1)((m @ r )0)((i ng )0)))	;; ing
("humouring"	nil	(((h y uu )1)((m @ r )0)((i ng )0)))	;; ing
("humping"	nil	(((h uh m p )1)((i ng )0)))	;; ing
("hunching"	nil	(((h uh n ch )1)((i ng )0)))	;; ing
("hundredfold"	nil	(((h uh n) 1) ((d r @ d) 0) ((f o l d) 1)))	;; oul
("hune"	nil	(((h uu) 1) ((n ei) 0)))	;; unique
("hungarys"	nil	(((h uh ng) 1) ((g @) 0) ((r ii z) 0)))	;; unique
("hungering"	nil	(((h uh ng )1)((g @ r )0)((i ng )0)))	;; ing
("hungerstriking"	nil	(((h uh ng )1)((g @ )0)((s t r ai k )1)((i ng )0)))	;; ing
("hunkering"	nil	(((h uh ng )1)((k @ r )0)((i ng )0)))	;; ing
("hunting"	nil	(((h uh n t )1)((i ng )0)))	;; ing
("huperei"	nil	(((h uu) 1) ((p e) 0) ((r e) 0) ((ii) 0)))	;; unique
("hupiro"	nil	(((h uu) 1) ((p ii) 0) ((r ou) 0)))	;; unique
("hurdling"	nil	(((h @@r )1)((d l! )0)((i ng )0)))	;; ing
("hurling"	nil	(((h @@r l )1)((i ng )0)))	;; ing
("hurrying"	nil	(((h uh )1)((r iy )0)((i ng )0)))	;; ing
("hurting"	nil	(((h @@r t^ )1)((i ng )0)))	;; ing
("hurtling"	nil	(((h @@r )1)((t l! )0)((i ng )0)))	;; ing
("husbanding"	nil	(((h uh z )1)((b @ n d )0)((i ng )0)))	;; ing
("hushing"	nil	(((h uh sh )1)((i ng )0)))	;; ing
("husking"	nil	(((h uh s k )1)((i ng )0)))	;; ing
("husseins"	nil	(((h @) 0) ((s ei n z) 1)))	;; unique
("hustling"	nil	(((h uh )1)((s l! )0)((i ng )0)))	;; ing
("hutiwai"	nil	(((h uu) 1) ((t^ i) 0) ((w ai) 0)))	;; unique
("hutu"	nil	(((h uu) 1) ((t uu) 0)))	;; unique
("huxleys"	nil	(((h uh k) 1) ((s l ii z) 0)))	;; unique
("huxtables"	nil	(((h uh k) 1) ((s t @) 0) ((b l! z) 0)))	;; unique
("hydrating"	nil	(((h ai )0)((d r ei t^ )1)((i ng )0)))	;; ing
("hydrogenating"	nil	(((h ai )0)((d r o )1)((jh @ n )0)((ei t^ )1)((i ng )0)))	;; ing
("hymans"	nil	(((h ai) 1) ((m @ n z) 0)))	;; unique
("hymning"	nil	(((h i m )1)((i ng )0)))	;; ing
("hyperbolising"	nil	(((h ai )0)((p @@r )1)((b @ )0)((l ai z )1)((i ng )0)))	;; ing
("hyperbolizing"	nil	(((h ai )0)((p @@r )1)((b @ )0)((l ai z )1)((i ng )0)))	;; ing
("hyperions"	nil	(((h ai) 0) ((p ir) 1) ((r ii @ n z) 0)))	;; unique
("hyperlinking"	nil	(((h ai )1)((p @ )0)((l i ng k )1)((i ng )0)))	;; ing
("hypersensitizing"	nil	(((h ai )1)((p @ )0)((s e n )1)((s @ )0)((t ai z )1)((i ng )0)))	;; ing
("hyperventilating"	nil	(((h ai )1)((p @ )0)((v e n )1)((t i l )0)((ei t^ )1)((i ng )0)))	;; ing
("hyphenating"	nil	(((h ai )1)((f n! )0)((ei t^ )1)((i ng )0)))	;; ing
("hyphening"	nil	(((h ai )1)((f n! )0)((i ng )0)))	;; ing
("hyping"	nil	(((h ai p )1)((i ng )0)))	;; ing
("hypnotizing"	nil	(((h i p )1)((n @ )0)((t ai z )1)((i ng )0)))	;; ing
("hypothesising"	nil	(((h ai )0)((p o )1)((th @ )0)((s ai z )1)((i ng )0)))	;; ing
("hypothesizing"	nil	(((h ai )0)((p o )1)((th @ )0)((s ai z )1)((i ng )0)))	;; ing
("hypromellose"	nil	(((h ai) 0) ((p r o) 1) ((m @) 0) ((l ou z) 2)))	;; unique
("i'd"	nil	(((ai d) 1)))	;; contraction
("i'll"	nil	(((ai l) 1)))	;; contraction
("i'm"	nil	(((ai m) 1)))	;; contraction
("i've"	nil	(((ai v) 1)))	;; contraction
("iccs"	nil	(((ai) 1) ((s ii) 0) ((s ii z) 1)))	;; unique
("ice-cold"	nil	((( ai s) 0) ((k o l d) 1)))	;; oul
("icebreaking"	nil	(((ai s )1)((b r ei k )1)((i ng )0)))	;; ing
("icelands"	nil	(((ai s) 1) ((l @ n d z) 0)))	;; unique
("iceskating"	nil	(((ai s )1)((s k ei t^ )1)((i ng )0)))	;; ing
("icing"	nil	(((ai s )1)((i ng )0)))	;; ing
("idealising"	nil	(((ai )0)((d ii @ l )1)((ai z )0)((i ng )0)))	;; ing
("idealizing"	nil	(((ai )0)((d ii @ l )1)((ai z )1)((i ng )0)))	;; ing
("identifying"	nil	(((ai )0)((d e n )1)((t @ )0)((f ai )1)((i ng )0)))	;; ing
("idling"	nil	(((ai )1)((d l! )0)((i ng )0)))	;; ing
("idolising"	nil	(((ai )1)((d l! )0)((ai z )1)((i ng )0)))	;; ing
("idolizing"	nil	(((ai )1)((d l! )0)((ai z )1)((i ng )0)))	;; ing
("igniting"	nil	(((i g )0)((n ai t^ )1)((i ng )0)))	;; ing
("ignoring"	nil	(((i g )0)((n oo r )1)((i ng )0)))	;; ing
("ihe"	nil	(((ii) 1) ((h ei) 0)))	;; unique
("ihi"	nil	(((ii) 1) ((h ii) 0)))	;; unique
("iho"	nil	(((ii) 1) ((h ou) 0)))	;; unique
("ihupuku"	nil	(((ii) 0) ((h uu) 1) ((p uu) 0) ((k uu) 0)))	;; unique
("ika"	nil	(((ii) 1) ((k @) 0)))	;; unique
("ill-treating"	nil	(((i l )1)((t r ii t^ )1)((i ng )0)))	;; ing
("illuminating"	nil	(((i )0)((l uu )1)((m @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("illustrating"	nil	(((i )1)((l @ )0)((s t r ei t^ )1)((i ng )0)))	;; ing
("imaging"	nil	(((i )1)((m i jh )0)((i ng )0)))	;; ing
("imagining"	nil	(((i )0)((m a )1)((jh @ n )0)((i ng )0)))	;; ing
("imbibing"	nil	(((i m )0)((b ai b )1)((i ng )0)))	;; ing
("imbroglio"	nil	(((i m) 0) ((b r o) 1) ((l y ou) 0)))	;; oul
("imbroglios"	nil	(((i m) 0) ((b r o) 1) ((l y ou z) 0)))	;; oul
("imbrueing"	nil	(((i m )0)((b r uu )1)((i ng )0)))	;; ing
("imbruing"	nil	(((i m )0)((b r uu )1)((i ng )0)))	;; ing
("imbueing"	nil	(((i m )0)((b y uu )1)((i ng )0)))	;; ing
("imitating"	nil	(((i )1)((m i )0)((t ei t^ )1)((i ng )0)))	;; ing
("immersing"	nil	(((i )0)((m @@r s )1)((i ng )0)))	;; ing
("immigrating"	nil	(((i )1)((m @ )0)((g r ei t^ )1)((i ng )0)))	;; ing
("immobilising"	nil	(((i )0)((m ou )1)((b i l )0)((ai z )1)((i ng )0)))	;; ing
("immobilizing"	nil	(((i )0)((m ou )1)((b i l )0)((ai z )1)((i ng )0)))	;; ing
("immolating"	nil	(((i )1)((m @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("immortalising"	nil	(((i )0)((m oo )1)((t l! )0)((ai z )1)((i ng )0)))	;; ing
("immortalizing"	nil	(((i )0)((m oo )1)((t l! )0)((ai z )1)((i ng )0)))	;; ing
("immunising"	nil	(((i )1)((m y uw n )0)((ai z )1)((i ng )0)))	;; ing
("immunizing"	nil	(((i )1)((m y uw n )0)((ai z )1)((i ng )0)))	;; ing
("immuring"	nil	(((i )0)((m y ur r )1)((i ng )0)))	;; ing
("impacting"	nil	(((i m )0)((p a k t )1)((i ng )0)))	;; ing
("impairing"	nil	(((i m )0)((p ir r )1)((i ng )0)))	;; ing
("impaling"	nil	(((i m )0)((p ei l )1)((i ng )0)))	;; ing
("impaneling"	nil	(((i m )0)((p a )1)((n l! )0)((i ng )0)))	;; ing
("impanelling"	nil	(((i m )0)((p a )1)((n l! )0)((i ng )0)))	;; ing
("imparting"	nil	(((i m )0)((p aa t^ )1)((i ng )0)))	;; ing
("impeaching"	nil	(((i m )0)((p ii ch )1)((i ng )0)))	;; ing
("impeding"	nil	(((i m )0)((p ii d )1)((i ng )0)))	;; ing
("impelling"	nil	(((i m )0)((p a l )1)((i ng )0)))	;; ing
("impending"	nil	(((i m )0)((p e n d )1)((i ng )0)))	;; ing
("imperialisms"	nil	(((i m) 0) ((p ir) 1) ((r ii @ l) 0) ((i) 1) ((z m! z) 0)))	;; unique
("imperiling"	nil	(((i m )0)((p e )1)((r @ l )0)((i ng )0)))	;; ing
("imperilling"	nil	(((i m )0)((p e )1)((r @ l )0)((i ng )0)))	;; ing
("impersonating"	nil	(((i m )0)((p @@r )1)((s n! )0)((ei t^ )1)((i ng )0)))	;; ing
("impinging"	nil	(((i m )0)((p i n jh )1)((i ng )0)))	;; ing
("implanting"	nil	(((i m )0)((p l aa n t )1)((i ng )0)))	;; ing
("implementing"	nil	(((i m )1)((p l @ )0)((m e n t )1)((i ng )0)))	;; ing
("implicating"	nil	(((i m )1)((p l @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("imploding"	nil	(((i m )0)((p l ou d )1)((i ng )0)))	;; ing
("imploring"	nil	(((i m )0)((p l oo r )1)((i ng )0)))	;; ing
("implying"	nil	(((i m )0)((p l ai )1)((i ng )0)))	;; ing
("importing"	nil	(((i m )0)((p oo t^ )1)((i ng )0)))	;; ing
("importuning"	nil	(((i m )1)((p @ )0)((t y uu n )1)((i ng )0)))	;; ing
("imposing"	nil	(((i m )0)((p ou z )1)((i ng )0)))	;; ing
("impounding"	nil	(((i m )0)((p ow n d )1)((i ng )0)))	;; ing
("impoverishing"	nil	(((i m )0)((p o )1)((v @ )0)((r i sh )0)((i ng )0)))	;; ing
("imprecating"	nil	(((i m )1)((p r @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("impregnating"	nil	(((i m )1)((p r e g )0)((n ei t^ )1)((i ng )0)))	;; ing
("impressing"	nil	(((i m )0)((p r e s )1)((i ng )0)))	;; ing
("imprinting"	nil	(((i m )0)((p r i n t )1)((i ng )0)))	;; ing
("imprisoning"	nil	(((i m )0)((p r i )1)((z n! )0)((i ng )0)))	;; ing
("improving"	nil	(((i m )0)((p r uu v )1)((i ng )0)))	;; ing
("improvising"	nil	(((i m )1)((p r @ )0)((v ai z )1)((i ng )0)))	;; ing
("impugning"	nil	(((i m )0)((p y uu n )1)((i ng )0)))	;; ing
("impurpling"	nil	(((i m )0)((p @@r )1)((p l! )0)((i ng )0)))	;; ing
("imputing"	nil	(((i m )0)((p y uu t^ )1)((i ng )0)))	;; ing
("in-fighting"	nil	(((i n )1)((f ai t^ )1)((i ng )0)))	;; ing
("inanga"	nil	(((i) 0) ((n uh ng) 1) ((@) 0)))	;; unique
("inaugurating"	nil	(((i )0)((n oo )1)((g y uw )0)((r ei t^ )1)((i ng )0)))	;; ing
("inbreeding"	nil	(((i n )1)((b r - ii d )0)((i ng )0)))	;; ing
("incapacitating"	nil	(((i n )1)((k @ )0)((p a )1)((s @ )0)((t ei t^ )1)((i ng )0)))	;; ing
("incarcerating"	nil	(((i n )0)((k aa )1)((s @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("inching"	nil	(((i n ch )1)((i ng )0)))	;; ing
("incinerating"	nil	(((i n )0)((s i )1)((n @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("incising"	nil	(((i n )0)((s ai z )1)((i ng )0)))	;; ing
("inciting"	nil	(((i n )0)((s ai t^ )1)((i ng )0)))	;; ing
("inclining"	nil	(((i n )0)((k l ai n )1)((i ng )0)))	;; ing
("inclosing"	nil	(((i n )0)((k l ou z )1)((i ng )0)))	;; ing
("including"	nil	(((i n )0)((k l uu d )1)((i ng )0)))	;; ing
("incoming"	nil	(((i n )1)((k uh m )1)((i ng )0)))	;; ing
("incommoding"	nil	(((i n )1)((k @ )0)((m ou d )1)((i ng )0)))	;; ing
("inconsolable"	nil	(((i n) 1) ((k @ n) 0) ((s o l) 1) ((@) 0) ((b l!) 0)))	;; oul
("inconsolableness"	nil	(((i n) 1) ((k @ n) 0) ((s o l) 1) ((@) 0) ((b l!) 0) ((n @ s) 0)))	;; oul
("inconsolably"	nil	(((i n) 1) ((k @ n) 0) ((s o l) 1) ((@) 0) ((b l ii) 0)))	;; oul
("incontrollable"	nil	(((i n) 1) ((k @ n) 0) ((t r o l) 1) ((@) 0) ((b l!) 0)))	;; oul
("incontrollably"	nil	(((i n) 1) ((k @ n) 0) ((t r o l) 1) ((@) 0) ((b l ii) 0)))	;; oul
("inconveniencing"	nil	(((i n )1)((k @ n )0)((v ii )1)((n y @ n s )0)((i ng )0)))	;; ing
("incorporating"	nil	(((i n )0)((k oo )1)((p @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("increasing"	nil	(((i n )0)((k r ii s )1)((i ng )0)))	;; ing
("incrementing"	nil	(((i n )1)((k r @ )0)((m e n t )1)((i ng )0)))	;; ing
("incriminating"	nil	(((i n )0)((k r i )1)((m @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("incubating"	nil	(((i ng )1)((k y uw )0)((b ei t^ )1)((i ng )0)))	;; ing
("inculcating"	nil	(((i ng )1)((k o l )0)((k ei t^ )1)((i ng )0)))	;; ing
("incurring"	nil	(((i ng )0)((k @@r r )1)((i ng )0)))	;; ing
("indemnifying"	nil	(((i n )0)((d e m )1)((n @ )0)((f ai )1)((i ng )0)))	;; ing
("indenting"	nil	(((i n )0)((d e n t )1)((i ng )0)))	;; ing
("indexing"	nil	(((i n )1)((d e k s )0)((i ng )0)))	;; ing
("indexs"	nil	(((i n) 1) ((d e k s) 0) ((@ z) 0)))	;; unique
("indicating"	nil	(((i n )1)((d @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("indicting"	nil	(((i n )0)((d ai t^ )1)((i ng )0)))	;; ing
("indiscriminating"	nil	(((i n )1)((d i )0)((s k r i )1)((m i )0)((n ei t^ )0)((i ng )0)))	;; ing
("inditing"	nil	(((i n )0)((d ai t^ )1)((i ng )0)))	;; ing
("individualising"	nil	(((i n )1)((d @ )0)((v i )1)((jh uw @ l )0)((ai z )1)((i ng )0)))	;; ing
("individualizing"	nil	(((i n )1)((d @ )0)((v i )1)((jh uw @ l )0)((ai z )1)((i ng )0)))	;; ing
("individuating"	nil	(((i n )1)((d @ )0)((v i )1)((jh uw )0)((ei t^ )1)((i ng )0)))	;; ing
("indoctrinating"	nil	(((i n )0)((d o k )1)((t r @ n )0)((ei t^ )1)((i ng )0)))	;; ing
("indonesias"	nil	(((i n) 1) ((d @) 0) ((n ii) 1) ((z ii @ z) 0)))	;; unique
("indrawing"	nil	(((i n )1)((d r - oo )0)((i ng )0)))	;; ing
("inducing"	nil	(((i n )0)((d y uu s )1)((i ng )0)))	;; ing
("indulging"	nil	(((i n )0)((d o l jh )1)((i ng )0)))	;; ing
("industrialising"	nil	(((i n )0)((d uh )1)((s t r iy @ l )0)((ai z )1)((i ng )0)))	;; ing
("industrializing"	nil	(((i n )0)((d uh )1)((s t r iy @ l )0)((ai z )1)((i ng )0)))	;; ing
("industrys"	nil	(((i n) 1) ((d @) 0) ((s t r ii z) 0)))	;; unique
("indwelling"	nil	(((i n )1)((d w a l )1)((i ng )0)))	;; ing
("inebriating"	nil	(((i )0)((n ii )1)((b r iy )0)((ei t^ )1)((i ng )0)))	;; ing
("infatuating"	nil	(((i n )0)((f a )1)((ch uw )0)((ei t^ )1)((i ng )0)))	;; ing
("infecting"	nil	(((i n )0)((f e k t )1)((i ng )0)))	;; ing
("inferencing"	nil	(((i n )1)((f @ r )0)((@ n s )0)((i ng )0)))	;; ing
("inferring"	nil	(((i n )0)((f @@r r )1)((i ng )0)))	;; ing
("infesting"	nil	(((i n )0)((f e s t )1)((i ng )0)))	;; ing
("infighting"	nil	(((i n )1)((f ai t^ )1)((i ng )0)))	;; ing
("infilling"	nil	(((i n )1)((f i l )1)((i ng )0)))	;; ing
("infiltrating"	nil	(((i n )1)((f i l )0)((t r ei t^ )1)((i ng )0)))	;; ing
("infixing"	nil	(((i n )1)((f i k s )1)((i ng )0)))	;; ing
("inflaming"	nil	(((i n )0)((f l ei m )1)((i ng )0)))	;; ing
("inflating"	nil	(((i n )0)((f l ei t^ )1)((i ng )0)))	;; ing
("inflecting"	nil	(((i n )0)((f l e k t )1)((i ng )0)))	;; ing
("inflicting"	nil	(((i n )0)((f l i k t )1)((i ng )0)))	;; ing
("influencing"	nil	(((i n )1)((f l uw @ n s )0)((i ng )0)))	;; ing
("information-gathering"	nil	(((i n )1)((f @ m )0)((ei )1)((sh n! )0)((g a )1)((dh @ r )0)((i ng )0)))	;; ing
("informing"	nil	(((i n )0)((f oo m )1)((i ng )0)))	;; ing
("infringing"	nil	(((i n )0)((f r i n jh )1)((i ng )0)))	;; ing
("infuriating"	nil	(((i n )0)((f y ur )1)((r iy )0)((ei t^ )1)((i ng )0)))	;; ing
("infusing"	nil	(((i n )0)((f y uu z )1)((i ng )0)))	;; ing
("ingathering"	nil	(((i n )1)((g a )1)((dh @ r )0)((i ng )0)))	;; ing
("ingersolls"	nil	(((i n) 1) ((g @) 0) ((s o l z) 0)))	;; unique
("ingesting"	nil	(((i n )0)((jh e s t )1)((i ng )0)))	;; ing
("ingoing"	nil	(((i n )1)((g - ou )0)((i ng )0)))	;; ing
("ingratiating"	nil	(((i ng )0)((g r ei )1)((sh iy )0)((ei t^ )1)((i ng )0)))	;; ing
("ingrowing"	nil	(((i n )1)((g r ou )1)((i ng )0)))	;; ing
("inhabiting"	nil	(((i n )0)((h a )1)((b @ t^ )0)((i ng )0)))	;; ing
("inhaling"	nil	(((i n )0)((h ei l )1)((i ng )0)))	;; ing
("inheriting"	nil	(((i n )0)((h e )1)((r @ t^ )0)((i ng )0)))	;; ing
("inhibiting"	nil	(((i n )0)((h i )1)((b @ t^ )0)((i ng )0)))	;; ing
("inholding"	nil	(((i ng) 1) ((h o l d) 0) ((i ng) 0)))	;; oul
("initialing"	nil	(((i )0)((n i )1)((sh l! )0)((i ng )0)))	;; ing
("initialising"	nil	(((i )0)((n i )1)((sh l! )0)((ai z )1)((i ng )0)))	;; ing
("initializing"	nil	(((i )0)((n i )1)((sh l! )0)((ai z )1)((i ng )0)))	;; ing
("initialling"	nil	(((i )0)((n i )1)((sh l! )0)((i ng )0)))	;; ing
("initiating"	nil	(((i )0)((n i )1)((sh iy )0)((ei t^ )1)((i ng )0)))	;; ing
("injecting"	nil	(((i n )0)((jh e k t )1)((i ng )0)))	;; ing
("injuring"	nil	(((i n )1)((jh @ r )0)((i ng )0)))	;; ing
("inkholder"	nil	(((i ng k) 1) ((h o l d) 1) ((@) 0)))	;; oul
("inking"	nil	(((i ng k )1)((i ng )0)))	;; ing
("inkling"	nil	(((i ng )1)((k l i ng )0)))	;; ing
("inlaying"	nil	(((i n )0)((l ei )1)((i ng )0)))	;; ing
("inning"	nil	(((i n )1)((i ng )0)))	;; ing
("innkeeping"	nil	(((i n )1)((k ii p )1)((i ng )0)))	;; ing
("innocent-looking"	nil	(((i )1)((n @ )0)((s n! t )0)((l u k )1)((i ng )0)))	;; ing
("innovating"	nil	(((i )1)((n @ )0)((v ei t^ )1)((i ng )0)))	;; ing
("inoculating"	nil	(((i )0)((n o )1)((k y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("inpouring"	nil	(((i n )1)((p oo r )1)((i ng )0)))	;; ing
("inputting"	nil	(((i n )1)((p u t^ )1)((i ng )0)))	;; ing
("inquiring"	nil	(((i n )0)((k w ai @ r )1)((i ng )0)))	;; ing
("inquirys"	nil	(((i n) 0) ((k w ai @ r) 1) ((ii z) 0)))	;; unique
("inrushing"	nil	(((i n )1)((r - uh sh )0)((i ng )0)))	;; ing
("inscribing"	nil	(((i n )0)((s k r ai b )1)((i ng )0)))	;; ing
("inserting"	nil	(((i n )0)((s @@r t^ )1)((i ng )0)))	;; ing
("insinuating"	nil	(((i n )0)((s i )1)((n y uw )0)((ei t^ )1)((i ng )0)))	;; ing
("insisting"	nil	(((i n )0)((s i s t )1)((i ng )0)))	;; ing
("inspecting"	nil	(((i n )0)((s p e k t )1)((i ng )0)))	;; ing
("inspiring"	nil	(((i n )0)((s p ai @ r )1)((i ng )0)))	;; ing
("inspiriting"	nil	(((i n )0)((s p i )1)((r @ t^ )0)((i ng )0)))	;; ing
("installing"	nil	(((i n )0)((s t oo l )1)((i ng )0)))	;; ing
("instancing"	nil	(((i n )1)((s t @ n s )0)((i ng )0)))	;; ing
("instantiating"	nil	(((i n )0)((s t a n )1)((sh iy )0)((ei t^ )1)((i ng )0)))	;; ing
("instigating"	nil	(((i n )1)((s t @ )0)((g ei t^ )1)((i ng )0)))	;; ing
("instilling"	nil	(((i n )0)((s t i l )1)((i ng )0)))	;; ing
("instituting"	nil	(((i n )1)((s t i )0)((t y uu t^ )1)((i ng )0)))	;; ing
("institutionalising"	nil	(((i n )1)((s t i )0)((t y uu )1)((sh n! )0)((@ l )0)((ai z )1)((i ng )0)))	;; ing
("institutionalizing"	nil	(((i n )1)((s t i )0)((t y uu )1)((sh n! )0)((@ l )0)((ai z )1)((i ng )0)))	;; ing
("instructing"	nil	(((i n )0)((s t r uh k t )1)((i ng )0)))	;; ing
("insulating"	nil	(((i n s )1)((y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("insulting"	nil	(((i n )0)((s o l t )1)((i ng )0)))	;; ing
("insuring"	nil	(((i n )0)((sh ur r )1)((i ng )0)))	;; ing
("inswing"	nil	(((i n )1)((s w i ng )0)))	;; ing
("intaking"	nil	(((i n )1)((t ei k )1)((i ng )0)))	;; ing
("integrating"	nil	(((i n )1)((t @ )0)((g r ei t^ )1)((i ng )0)))	;; ing
("intellectualising"	nil	(((i n )1)((t @ )0)((l e k )1)((ch uw @ l )0)((ai z )1)((i ng )0)))	;; ing
("intellectualizing"	nil	(((i n )1)((t @ )0)((l e k )1)((ch uw @ l )0)((ai z )1)((i ng )0)))	;; ing
("intending"	nil	(((i n )0)((t e n d )1)((i ng )0)))	;; ing
("intensifying"	nil	(((i n )0)((t e n s )1)((@ )0)((f ai )1)((i ng )0)))	;; ing
("interacting"	nil	(((i n )1)((t @ r )0)((a k t )1)((i ng )0)))	;; ing
("interbreeding"	nil	(((i n )1)((t @ )0)((b r ii d )1)((i ng )0)))	;; ing
("interceding"	nil	(((i n )1)((t @ )0)((s ii d )1)((i ng )0)))	;; ing
("intercepting"	nil	(((i n )1)((t @ )0)((s e p t )1)((i ng )0)))	;; ing
("interchanging"	nil	(((i n )1)((t @ )0)((ch ei n jh )1)((i ng )0)))	;; ing
("interconnecting"	nil	(((i n )1)((t @ )0)((k @ )0)((n e k t )1)((i ng )0)))	;; ing
("intercropping"	nil	(((i n )1)((t @ )0)((k r o p )1)((i ng )0)))	;; ing
("interdicting"	nil	(((i n )1)((t @ )0)((d i k t )1)((i ng )0)))	;; ing
("interesting"	nil	(((i n )1)((t r @ s t )0)((i ng )0)))	;; ing
("interfacing"	nil	(((i n )1)((t @ )0)((f ei s )1)((i ng )0)))	;; ing
("interfering"	nil	(((i n )1)((t @ )0)((f ir r )1)((i ng )0)))	;; ing
("interfusing"	nil	(((i n )1)((t @ )0)((f y uu z )1)((i ng )0)))	;; ing
("interjecting"	nil	(((i n )1)((t @ )0)((jh e k t )1)((i ng )0)))	;; ing
("interlacing"	nil	(((i n )1)((t @ )0)((l ei s )1)((i ng )0)))	;; ing
("interleafs"	nil	(((i n) 1) ((t @) 0) ((l ii f s) 1)))	;; unique
("interleaving"	nil	(((i n )1)((t @ )0)((l ii v )1)((i ng )0)))	;; ing
("interlining"	nil	(((i n )1)((t @ )0)((l ai n )1)((i ng )0)))	;; ing
("interlinking"	nil	(((i n )1)((t @ )0)((l i ng k )1)((i ng )0)))	;; ing
("interlocking"	nil	(((i n )1)((t @ )0)((l o k )1)((i ng )0)))	;; ing
("interloping"	nil	(((i n )1)((t @ )0)((l ou p )1)((i ng )0)))	;; ing
("intermarrying"	nil	(((i n )1)((t @ )0)((m a )1)((r iy )0)((i ng )0)))	;; ing
("intermingling"	nil	(((i n )1)((t @ )0)((m i ng )1)((g l! )0)((i ng )0)))	;; ing
("intermixing"	nil	(((i n )1)((t @ )0)((m i k s )1)((i ng )0)))	;; ing
("internalising"	nil	(((i n )0)((t @@r )1)((n l! )0)((ai z )1)((i ng )0)))	;; ing
("internalizing"	nil	(((i n )0)((t @@r )1)((n l! )0)((ai z )1)((i ng )0)))	;; ing
("internationalizing"	nil	(((i n )1)((t @ )0)((n a sh )1)((n l! )0)((ai z )1)((i ng )0)))	;; ing
("internetting"	nil	(((i n )1)((t @ )0)((n e t^ )1)((i ng )0)))	;; ing
("internetworking"	nil	(((i n )1)((t @ )0)((n e t )1)((w - @@r k )0)((i ng )0)))	;; ing
("interning"	nil	(((i n )1)((t @@r n )0)((i ng )0)))	;; ing
("interpenetrating"	nil	(((i n )1)((t @ )0)((p e )1)((n @ )0)((t r ei t^ )1)((i ng )0)))	;; ing
("interphasing"	nil	(((i n )1)((t @ )0)((f ei z )1)((i ng )0)))	;; ing
("interpolar"	nil	(((i n) 1) ((t @) 0) ((p o l) 1) ((@) 0)))	;; oul
("interpolating"	nil	(((i n )0)((t @@r )1)((p @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("interpols"	nil	(((i n) 1) ((t @) 0) ((p o l z) 1)))	;; unique
("interposing"	nil	(((i n )1)((t @ )0)((p ou z )1)((i ng )0)))	;; ing
("interpreting"	nil	(((i n )0)((t @@r )1)((p r @ t^ )0)((i ng )0)))	;; ing
("interring"	nil	(((i n )0)((t @@r r )1)((i ng )0)))	;; ing
("interrogating"	nil	(((i n )0)((t e )1)((r @ )0)((g ei t^ )1)((i ng )0)))	;; ing
("interrupting"	nil	(((i n )1)((t @ )0)((r uh p t )1)((i ng )0)))	;; ing
("intersecting"	nil	(((i n )1)((t @ )0)((s e k t )1)((i ng )0)))	;; ing
("interspersing"	nil	(((i n )1)((t @ )0)((s p @@r s )1)((i ng )0)))	;; ing
("intertwining"	nil	(((i n )1)((t @ )0)((t w ai n )1)((i ng )0)))	;; ing
("intervening"	nil	(((i n )1)((t @ )0)((v ii n )1)((i ng )0)))	;; ing
("interviewing"	nil	(((i n )1)((t @ )0)((v y uu )1)((i ng )0)))	;; ing
("interweaving"	nil	(((i n )1)((t @ )0)((w ii v )1)((i ng )0)))	;; ing
("interworking"	nil	(((i n )1)((t @ )0)((w @@r k )1)((i ng )0)))	;; ing
("intimating"	nil	(((i n )1)((t @ )0)((m ei t^ )1)((i ng )0)))	;; ing
("intimidating"	nil	(((i n )0)((t i )1)((m i )0)((d ei t^ )1)((i ng )0)))	;; ing
("intoning"	nil	(((i n )0)((t ou n )1)((i ng )0)))	;; ing
("intoxicating"	nil	(((i n )0)((t o k )1)((s @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("intriguing"	nil	(((i n )0)((t r ii g )1)((i ng )0)))	;; ing
("introducing"	nil	(((i n )1)((t r @ )0)((d y uu s )1)((i ng )0)))	;; ing
("introjecting"	nil	(((i n )1)((t r @ )0)((jh e k t )1)((i ng )0)))	;; ing
("introspecting"	nil	(((i n )1)((t r @ )0)((s p e k t )1)((i ng )0)))	;; ing
("introverting"	nil	(((i n )1)((t r @ )0)((v @@r t^ )1)((i ng )0)))	;; ing
("intruding"	nil	(((i n )0)((t r uu d )1)((i ng )0)))	;; ing
("inundating"	nil	(((i )1)((n uh n )0)((d ei t^ )1)((i ng )0)))	;; ing
("inuring"	nil	(((i )0)((n y ur r )1)((i ng )0)))	;; ing
("invading"	nil	(((i n )0)((v ei d )1)((i ng )0)))	;; ing
("invalidating"	nil	(((i n )0)((v a )1)((l @ d )0)((ei t^ )1)((i ng )0)))	;; ing
("inveighing"	nil	(((i n )0)((v ei )1)((i ng )0)))	;; ing
("inveigling"	nil	(((i n )0)((v ei )1)((g @ l )0)((i ng )0)))	;; ing
("inventing"	nil	(((i n )0)((v e n t )1)((i ng )0)))	;; ing
("inventorying"	nil	(((i n )1)((v n! )0)((t r iy )0)((i ng )0)))	;; ing
("inverting"	nil	(((i n )0)((v @@r t^ )1)((i ng )0)))	;; ing
("investigating"	nil	(((i n )0)((v e )1)((s t @ )0)((g ei t^ )1)((i ng )0)))	;; ing
("investing"	nil	(((i n )0)((v e s t )1)((i ng )0)))	;; ing
("invigorating"	nil	(((i n )0)((v i )1)((g @ r )0)((ei t^ )1)((i ng )0)))	;; ing
("inviting"	nil	(((i n )0)((v ai t^ )1)((i ng )0)))	;; ing
("invoicing"	nil	(((i n )1)((v oi s )0)((i ng )0)))	;; ing
("invoking"	nil	(((i n )0)((v ou k )1)((i ng )0)))	;; ing
("involving"	nil	(((i n )0)((v o l v )1)((i ng )0)))	;; ing
("inweaving"	nil	(((- i n )0)((w ii v )1)((i ng )0)))	;; ing
("iodizing"	nil	(((ai @ )1)((d ai z )0)((i ng )0)))	;; ing
("ionising"	nil	(((ai @ n )1)((ai z )0)((i ng )0)))	;; ing
("ionizing"	nil	(((ai @ n )1)((ai z )0)((i ng )0)))	;; ing
("iowas"	nil	(((ai) 1) ((ou @ z) 0)))	;; unique
("irans"	nil	(((i) 0) ((r aa n z) 1)))	;; unique
("iraqs"	nil	(((i) 0) ((r aa k s) 1)))	;; unique
("irelands"	nil	(((ai @) 1) ((l @ n d z) 0)))	;; unique
("irenes"	nil	(((ai) 0) ((r ii n z) 1)))	;; unique
("iriss"	nil	(((ai) 1) ((r i s) 0) ((@ z) 0)))	;; unique
("irking"	nil	(((@@r k )1)((i ng )0)))	;; ing
("ironing"	nil	(((ai @ n )1)((i ng )0)))	;; ing
("irrigating"	nil	(((i )1)((r i )0)((g ei t^ )1)((i ng )0)))	;; ing
("irritating"	nil	(((i )1)((r i )0)((t ei t^ )1)((i ng )0)))	;; ing
("irving"	nil	(((@@r )1)((v i ng )0)))	;; ing
("irvings"	nil	(((@@r) 1) ((v i ng z) 0)))	;; unique
("islams"	nil	(((i z) 0) ((l aa m z) 1)))	;; unique
("isn't"	nil	(((i z) 1) ((n! t) 0)))	;; contraction
("isolating"	nil	(((ai )1)((s @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("isosorbide"	nil	(((ai) 1) ((s @) 0) ((s oo) 1) ((b ai d) 0)))	;; unique
("israels"	nil	(((i z) 1) ((r ei l z) 0)))	;; unique
("issuing"	nil	(((i )1)((sh uw )0)((i ng )0)))	;; ing
("it's"	nil	(((i t s) 1)))	;; contraction
("italicising"	nil	(((i )0)((t a )1)((l @ s )0)((ai z )1)((i ng )0)))	;; ing
("italicizing"	nil	(((i )0)((t a )1)((l @ s )0)((ai z )1)((i ng )0)))	;; ing
("italys"	nil	(((i) 1) ((t^ @) 0) ((l ii z) 0)))	;; unique
("itching"	nil	(((i ch )1)((i ng )0)))	;; ing
("itemising"	nil	(((ai )1)((t^ @ m )0)((ai z )1)((i ng )0)))	;; ing
("itemizing"	nil	(((ai )1)((t^ @ m )0)((ai z )1)((i ng )0)))	;; ing
("iterating"	nil	(((i )1)((t^ @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("iti"	nil	(((ii) 1) ((t^ ii) 0)))	;; unique
("itll"	nil	(((i t) 1) ((l!) 0)))	;; unique
("iwi"	nil	(((ii) 1) ((w ii) 0)))	;; unique
("jabbering"	nil	(((jh a )1)((b @ r )0)((i ng )0)))	;; ing
("jabbing"	nil	(((jh a b )1)((i ng )0)))	;; ing
("jack-knifing"	nil	(((jh a k )1)((n ai f )1)((i ng )0)))	;; ing
("jacking"	nil	(((jh a k )1)((i ng )0)))	;; ing
("jackknifing"	nil	(((jh a k )1)((n ai f )1)((i ng )0)))	;; ing
("jacobsons"	nil	(((jh ei) 1) ((k @ b) 0) ((s n! z) 0)))	;; unique
("jaegers"	nil	(((y ei) 1) ((g @ z) 0)))	;; unique
("jagging"	nil	(((jh a g )1)((i ng )0)))	;; ing
("jailing"	nil	(((jh ei l )1)((i ng )0)))	;; ing
("jamaicas"	nil	(((jh @) 0) ((m ei) 1) ((k @ z) 0)))	;; unique
("jamess"	nil	(((jh ei m z) 1) ((@ z) 0)))	;; unique
("jamming"	nil	(((jh a m )1)((i ng )0)))	;; ing
("jangling"	nil	(((jh a ng )1)((g l! )0)((i ng )0)))	;; ing
("japanning"	nil	(((jh @ )0)((p a n )1)((i ng )0)))	;; ing
("japans"	nil	(((jh @) 0) ((p a n z) 1)))	;; unique
("jargonising"	nil	(((jh aa )1)((g @ n )0)((ai z )1)((i ng )0)))	;; ing
("jargonizing"	nil	(((jh aa )1)((g @ n )0)((ai z )1)((i ng )0)))	;; ing
("jarring"	nil	(((jh aa r )1)((i ng )0)))	;; ing
("jas"	nil	(((jh a z) 1)))	;; unique
("jasons"	nil	(((jh ei) 1) ((s n! z) 0)))	;; unique
("jaunting"	nil	(((jh oo n t )1)((i ng )0)))	;; ing
("jawboning"	nil	(((jh oo )1)((b ou n )1)((i ng )0)))	;; ing
("jawbreaking"	nil	(((jh oo )1)((b r ei k )1)((i ng )0)))	;; ing
("jawing"	nil	(((jh oo )1)((i ng )0)))	;; ing
("jaywalking"	nil	(((jh ei )1)((w oo k )1)((i ng )0)))	;; ing
("jeds"	nil	(((jh e d z) 1)))	;; unique
("jeering"	nil	(((jh ir r )1)((i ng )0)))	;; ing
("jeffersons"	nil	(((jh e) 1) ((f @) 0) ((s n! z) 0)))	;; unique
("jehovahs"	nil	(((jh @) 0) ((h ou) 1) ((v @ z) 0)))	;; unique
("jennifers"	nil	(((jh e) 1) ((n @) 0) ((f @ z) 0)))	;; unique
("jensens"	nil	(((jh e n) 1) ((s n! z) 0)))	;; unique
("jeopardising"	nil	(((jh e )1)((p @ )0)((d ai z )1)((i ng )0)))	;; ing
("jeopardizing"	nil	(((jh e )1)((p @ )0)((d ai z )1)((i ng )0)))	;; ing
("jerking"	nil	(((jh @@r k )1)((i ng )0)))	;; ing
("jerrys"	nil	(((jh e) 1) ((r ii z) 0)))	;; unique
("jerusalems"	nil	(((jh @) 0) ((r uu) 1) ((s @) 0) ((l @ m z) 0)))	;; unique
("jesses"	nil	(((jh e) 1) ((s ii z) 0)))	;; unique
("jesting"	nil	(((jh e s t )1)((i ng )0)))	;; ing
("jet-skiing"	nil	(((jh e t )1)((s k ii )1)((i ng )0)))	;; ing
("jetskiing"	nil	(((jh e t )1)((s k ii )1)((i ng )0)))	;; ing
("jetting"	nil	(((jh e t^ )1)((i ng )0)))	;; ing
("jettisoning"	nil	(((jh e )1)((t^ i )0)((s n! )0)((i ng )0)))	;; ing
("jewelling"	nil	(((jh uu @ l )1)((i ng )0)))	;; ing
("jibbing"	nil	(((jh i b )1)((i ng )0)))	;; ing
("jibing"	nil	(((jh ai b )1)((i ng )0)))	;; ing
("jigging"	nil	(((jh i g )1)((i ng )0)))	;; ing
("jiggling"	nil	(((jh i )1)((g l! )0)((i ng )0)))	;; ing
("jilting"	nil	(((jh i l t )1)((i ng )0)))	;; ing
("jingling"	nil	(((jh i ng )1)((g l! )0)((i ng )0)))	;; ing
("jinxing"	nil	(((jh i ng k s )1)((i ng )0)))	;; ing
("jitterbugging"	nil	(((jh i )1)((t^ @ )0)((b uh g )1)((i ng )0)))	;; ing
("jittering"	nil	(((jh i )1)((t^ @ r )0)((i ng )0)))	;; ing
("jiving"	nil	(((jh ai v )1)((i ng )0)))	;; ing
("joans"	nil	(((jh ou n z) 1)))	;; unique
("jobbing"	nil	(((jh o b )1)((i ng )0)))	;; ing
("jobholder"	nil	(((jh o b) 1) ((h o l d) 1) ((@) 0)))	;; oul
("jobholders"	nil	(((jh o b) 1) ((h o l d) 1) ((@ z) 0)))	;; oul
("jockeying"	nil	(((jh o )1)((k iy )0)((i ng )0)))	;; ing
("jog-trotting"	nil	(((jh o g )1)((t r o t^ )1)((i ng )0)))	;; ing
("jogging"	nil	(((jh o g )1)((i ng )0)))	;; ing
("joggling"	nil	(((jh o )1)((g l! )0)((i ng )0)))	;; ing
("johannesburgs"	nil	(((jh ou) 0) ((h a) 1) ((n i s) 0) ((b @@r g z) 0)))	;; unique
("johnnys"	nil	(((jh o) 1) ((n ii z) 0)))	;; unique
("johnsons"	nil	(((jh o n) 1) ((s n! z) 0)))	;; unique
("johnstons"	nil	(((jh o n) 1) ((s t @ n z) 0)))	;; unique
("joining"	nil	(((jh oi n )1)((i ng )0)))	;; ing
("joking"	nil	(((jh ou k )1)((i ng )0)))	;; ing
("jollying"	nil	(((jh o )1)((l iy )0)((i ng )0)))	;; ing
("jolt"	nil	(((jh o l t) 1)))	;; oul
("jolted"	nil	(((jh o l t) 1) ((@ d) 0)))	;; oul
("jolting"	nil	(((jh o l t) 1) ((i ng) 0)))	;; oul
("joltingly"	nil	(((jh o l t) 1) ((i ng) 0) ((l ii) 0)))	;; oul
("jolts"	nil	(((jh o l t s) 1)))	;; oul
("jolty"	nil	(((jh o l t) 1) ((ii) 0)))	;; oul
("jonathans"	nil	(((jh o) 1) ((n @) 0) ((th @ n z) 0)))	;; unique
("joness"	nil	(((jh ou n z) 1) ((@ z) 0)))	;; unique
("jordans"	nil	(((jh oo) 1) ((d n! z) 0)))	;; unique
("jos"	nil	(((jh ou z) 1)))	;; unique
("josephsons"	nil	(((jh ou) 1) ((s i f) 0) ((s n! z) 0)))	;; unique
("joshing"	nil	(((jh o sh )1)((i ng )0)))	;; ing
("joshuas"	nil	(((jh o sh) 1) ((y i@ z) 0)))	;; unique
("jostling"	nil	(((jh o )1)((s l! )0)((i ng )0)))	;; ing
("jotting"	nil	(((jh o t^ )1)((i ng )0)))	;; ing
("joule"	nil	(((jh u l) 1)))	;; uul
("joules"	nil	(((jh u l z) 1)))	;; uul
("journalizing"	nil	(((jh @@r )1)((n l! )0)((ai z )1)((i ng )0)))	;; ing
("journalling"	nil	(((jh @@r )1)((n l! )0)((i ng )0)))	;; ing
("journeying"	nil	(((jh @@r )1)((n iy )0)((i ng )0)))	;; ing
("journeymans"	nil	(((jh @@r) 1) ((n ii) 0) ((m @ n z) 0)))	;; unique
("jousting"	nil	(((jh ow s t )1)((i ng )0)))	;; ing
("joyriding"	nil	(((jh oi )1)((r ai d )1)((i ng )0)))	;; ing
("js"	nil	(((jh ei z) 1)))	;; unique
("jubilating"	nil	(((jh uu )1)((b i )0)((l ei t^ )1)((i ng )0)))	;; ing
("judaisms"	nil	(((jh uu) 1) ((d ei) 0) ((i) 1) ((z m! z) 0)))	;; unique
("judes"	nil	(((jh uu d z) 1)))	;; unique
("judgeing"	nil	(((jh uh jh )1)((i ng )0)))	;; ing
("judging"	nil	(((jh uh jh )1)((i ng )0)))	;; ing
("judiciarys"	nil	(((jh uw) 0) ((d i) 1) ((sh @) 0) ((r ii z) 0)))	;; unique
("judys"	nil	(((jh uu) 1) ((d ii z) 0)))	;; unique
("jugging"	nil	(((jh uh g )1)((i ng )0)))	;; ing
("juggling"	nil	(((jh uh )1)((g l! )0)((i ng )0)))	;; ing
("juicing"	nil	(((jh uu s )1)((i ng )0)))	;; ing
("julias"	nil	(((jh @) 1) ((l y @ z) 0)))	;; unique
("jumbling"	nil	(((jh uh m )1)((b l! )0)((i ng )0)))	;; ing
("jumping"	nil	(((jh uh m p )1)((i ng )0)))	;; ing
("junes"	nil	(((jh uu n z) 1)))	;; unique
("jungs"	nil	(((y u ng z) 1)))	;; unique
("junketeering"	nil	(((jh uh ng )1)((k @ t )0)((ir r )1)((i ng )0)))	;; ing
("junketing"	nil	(((jh uh ng )1)((k @ t^ )0)((i ng )0)))	;; ing
("junking"	nil	(((jh uh ng k )1)((i ng )0)))	;; ing
("jurymans"	nil	(((jh uu) 1) ((r ii) 0) ((m @ n z) 0)))	;; unique
("juryrigging"	nil	(((jh ur )1)((r iy )0)((r i g )1)((i ng )0)))	;; ing
("justifying"	nil	(((jh uh s t )1)((@ )0)((f ai )1)((i ng )0)))	;; ing
("justinians"	nil	(((jh uh) 0) ((s t i n) 1) ((ii @ n z) 0)))	;; unique
("jutting"	nil	(((jh uh t^ )1)((i ng )0)))	;; ing
("juxtaposing"	nil	(((jh uh k )1)((s t @ )0)((p ou z )1)((i ng )0)))	;; ing
("ka"	nil	(((k aa) 1)))	;; unique
("kaeo"	nil	(((k aa) 1) ((i) 0) ((ou) 0)))	;; unique
("kaha"	nil	(((k aa) 1) ((h aa) 0)))	;; unique
("kahakaha"	nil	(((k aa) 1) ((h aa) 0) ((k aa) 0) ((h aa) 0)))	;; unique
("kahawai"	nil	(((k aa) 1) ((w ai) 0)))	;; unique
("kahika"	nil	(((k aa) 1) ((h ii) 0) ((k @) 0)))	;; unique
("kahikatea"	nil	(((k @) 0) ((h i) 1) ((k @) 0) ((t ii) 1) ((@) 0)))	;; unique
("kahikatoa"	nil	(((k @) 0) ((h i) 1) ((k @) 0) ((t ou) 1) ((@) 0)))	;; unique
("kahu"	nil	(((k aa) 1) ((h uu) 0)))	;; unique
("kai"	nil	(((k ai) 1))) 	;; maori
("kaiaia"	nil	(((k ai) 0) ((ai) 1) ((@) 0)))	;; unique
("kaiawhina"	nil	(((k ai) 0) ((aa) 1) ((f ii) 0) ((n @) 0)))	;; unique
("kaihautu"	nil	(((k ai) 0) ((@) 0) ((uu) 0) ((t^ uu) 1)))	;; unique
("kaihua"	nil	(((k ai) 1) ((h uu) 0) ((@) 0)))	;; unique
("kaikai"	nil	(((k ai) 1) ((k ai) 0)))	;; unique
("kaikawaka"	nil	(((k ai) 1) ((k aa) 0) ((w aa) 0) ((k @) 0)))	;; unique
("kaikomako"	nil	(((k ai) 0) ((k @) 0) ((m aa) 1) ((k ou) 0)))	;; unique
("kaiku"	nil	(((k ai) 0) ((k uu) 1)))	;; unique
("kaimanawa"	nil	(((k ai) 0) ((m aa) 1) ((n @) 0) ((w @) 0)))	;; unique
("kainga"	nil	(((k ai ng) 1) ((@) 0)))	;; unique
("kaitaka"	nil	(((k ai) 1) ((t aa) 0) ((k @) 0)))	;; unique
("kaitiaki"	nil	(((k ai) 0) ((t ii) 1) ((@) 0) ((k ii) 0)))	;; unique
("kaitiakitanga"	nil	(((k ai) 0) ((t ii) 1) ((@) 0) ((k ii) 0) ((t uh ng) 1) ((@) 0)))	;; unique
("kaiwhakahaere"	nil	(((k ai) 1) ((f aa) 0) ((k aa) 0) ((h ai) 1) ((r ei) 0)))	;; unique
("kaiwhiria"	nil	(((k ai) 1) ((f ii) 0) ((r ii) 0) ((@) 0)))	;; unique
("kaka"	nil	(((k aa) 1) ((k @) 0)))	;; unique
("kakaha"	nil	(((k aa) 1) ((k aa) 0) ((h aa) 0)))	;; unique
("kakahi"	nil	(((k aa) 1) ((k aa) 0) ((h ii) 0)))	;; unique
("kakaho"	nil	(((k aa) 1) ((k aa) 0) ((h oo) 0)))	;; unique
("kakahu"	nil	(((k aa) 1) ((k aa) 0) ((h uu) 0)))	;; unique
("kakapo"	nil	(((k aa) 1) ((k @) 0) ((p ou) 0)))	;; unique
("kakariki"	nil	(((k aa) 0) ((k @) 0) ((r ii) 1) ((k ii) 0)))	;; unique
("kaki"	nil	(((k aa) 0) ((k ii) 1)))	;; unique
("kamahi"	nil	(((k aa) 1) ((m @) 0) ((h ii) 0)))	;; unique
("kamokamo"	nil	(((k aa) 1) ((m oo) 0) ((k aa) 0) ((m oo) 0)))	;; unique
("kanae"	nil	(((k aa) 1) ((n aa) 0) ((ei) 0)))	;; unique
("kanakana"	nil	(((k aa) 1) ((n aa) 0) ((k aa) 0) ((n @) 0)))	;; unique
("kanga"	nil	(((k uh ng) 1) ((@) 0))) 	;; maori
("kanono"	nil	(((k aa) 1) ((n oo) 0) ((n oo) 0)))	;; unique
("kansass"	nil	(((k a n) 1) ((z @ s) 0) ((@ z) 0)))	;; unique
("kanuka"	nil	(((k aa) 1) ((n uu) 0) ((k @) 0)))	;; unique
("kao"	nil	(((k ow) 1)))	;; unique
("kapa"	nil	(((k aa) 1) ((p @) 0)))	;; unique
("kapai"	nil	(((k aa) 0) ((p ai) 1)))	;; unique
("kapeta"	nil	(((k aa) 1) ((p e) 0) ((t aa) 1)))	;; unique
("kapia"	nil	(((k aa) 1) ((p ii) 0) ((@) 0)))	;; unique
("kappas"	nil	(((k a) 1) ((p @ z) 0)))	;; unique
("kapuka"	nil	(((k aa) 1) ((p uu) 0) ((k @) 0)))	;; unique
("karaka"	nil	(((k @) 0) ((r aa) 1) ((k @) 0)))	;; unique
("karakahia"	nil	(((k aa) 0) ((r aa) 1) ((k aa) 0) ((h ii) 0) ((@) 0)))	;; unique
("karakia"	nil	(((k aa) 0) ((r @) 0) ((k ii) 1) ((@) 0)))	;; unique
("karamu"	nil	(((k @) 0) ((r aa) 1) ((m uu) 0)))	;; unique
("karanga"	nil	(((k aa) 1) ((r uh ng) 0) ((@) 0)))	;; unique
("kareao"	nil	(((k aa) 1) ((r e) 0) ((ow) 0)))	;; unique
("karearea"	nil	(((k @) 0) ((r e) 1) ((i @) 0) ((r e) 0) ((i @) 0)))	;; unique
("karengo"	nil	(((k aa) 1) ((r e ng) 0) ((oo) 0)))	;; unique
("karetu"	nil	(((k aa) 1) ((r e) 0) ((t uu) 0)))	;; unique
("karitane"	nil	(((k aa) 0) ((r @) 0) ((t aa) 1) ((n ii) 0)))	;; unique
("karo"	nil	(((k aa) 1) ((r ou) 0)))	;; unique
("karoro"	nil	(((k aa) 1) ((r ou) 0) ((r ou) 0)))	;; unique
("karting"	nil	(((k aa t^ )1)((i ng )0)))	;; ing
("karuhiruhi"	nil	(((k aa) 0) ((r uu) 1) ((h ii) 0) ((r uu) 0) ((h ii) 0)))	;; unique
("karuparera"	nil	(((k aa) 0) ((r uu) 0) ((p aa) 1) ((r e) 0) ((r @) 0)))	;; unique
("kashmirs"	nil	(((k a sh) 0) ((m ir z) 1)))	;; unique
("kataitai"	nil	(((k @) 0) ((t ai) 1) ((t ai) 0)))	;; unique
("katharines"	nil	(((k a) 1) ((th @) 0) ((r i n z) 0)))	;; unique
("katies"	nil	(((k ei) 1) ((t^ ii z) 0)))	;; unique
("katipo"	nil	(((k a) 1) ((t i) 0) ((p ou) 0)))	;; unique
("katoa"	nil	(((k aa) 1) ((t ou) 0) ((@) 0)))	;; unique
("katote"	nil	(((k aa) 1) ((t oo) 0) ((t ei) 0)))	;; unique
("kaufmanns"	nil	(((k ow f) 1) ((m @ n z) 0)))	;; unique
("kaufmans"	nil	(((k ow f) 1) ((m @ n z) 0)))	;; unique
("kauhanganui"	nil	(((k ow) 0) ((h uh ng) 1) ((@) 0) ((n uu) 0) ((ii) 0)))	;; unique
("kaumatua"	nil	(((k ow) 0) ((m aa) 1) ((t uu) 0) ((@) 0)))	;; unique
("kaupapa"	nil	(((k ow) 1) ((p aa) 0) ((p @) 0)))	;; unique
("kaurehe"	nil	(((k ow) 1) ((r e) 0) ((h ei) 0)))	;; unique
("kauri"	nil	(((k ow) 1) ((r ii) 0)))	;; unique
("kauru"	nil	(((k ow) 1) ((r uu) 0)))	;; unique
("kauta"	nil	(((k ow) 1) ((t^ @) 0)))	;; unique
("kawa"	nil	(((k aa) 1) ((w @) 0)))	;; unique
("kawaka"	nil	(((k aa) 1) ((w aa) 0) ((k @) 0)))	;; unique
("kawakawa"	nil	(((k aa) 1) ((w aa) 0) ((k aa) 0) ((w @) 0)))	;; unique
("kawana"	nil	(((k aa) 1) ((w a) 0) ((n @) 0)))	;; unique
("kawanatanga"	nil	(((k aa) 1) ((w aa) 0) ((n aa) 0) ((t uh ng) 0) ((@) 0)))	;; unique
("kawau"	nil	(((k aa) 1) ((w ow) 0)))	;; unique
("kawaupaka"	nil	(((k aa) 1) ((w ow) 0) ((p aa) 1) ((k @) 0)))	;; unique
("kawe"	nil	(((k aa) 1) ((w ei) 0)))	;; unique
("kawekawea"	nil	(((k aa) 0) ((w e) 0) ((k aa) 0) ((w e) 0) ((aa) 1)))	;; unique
("kayaking"	nil	(((k ai )1)((a k )0)((i ng )0)))	;; ing
("kayoing"	nil	(((k - ei )0)((ou )1)((i ng )0)))	;; ing
("kea"	nil	(((k ii) 1) ((@) 0)))	;; unique
("keating"	nil	(((k ii )1)((t^ i ng )0)))	;; ing
("keeling"	nil	(((k ii )1)((l i ng )0)))	;; ing
("keening"	nil	(((k ii n )1)((i ng )0)))	;; ing
("keeping"	nil	(((k ii p )1)((i ng )0)))	;; ing
("kehe"	nil	(((k e) 1) ((h ei) 0)))	;; unique
("kehua"	nil	(((k e) 1) ((h uu) 0) ((@) 0)))	;; unique
("keiths"	nil	(((k ii th s) 1)))	;; unique
("kekeno"	nil	(((k e) 1) ((k e) 0) ((n oo) 0)))	;; unique
("kekerengu"	nil	(((k e) 1) ((k e) 0) ((r e ng) 0) ((uu) 0)))	;; unique
("keketerehe"	nil	(((k e) 0) ((k e) 0) ((t e) 1) ((r e) 0) ((h ei) 0)))	;; unique
("kellers"	nil	(((k a) 1) ((l @ z) 0)))	;; unique
("kelleys"	nil	(((k a) 1) ((l ii z) 0)))	;; unique
("kenneling"	nil	(((k e )1)((n l! )0)((i ng )0)))	;; ing
("kennelling"	nil	(((k e )1)((n l! )0)((i ng )0)))	;; ing
("kentons"	nil	(((k e n) 1) ((t n! z) 0)))	;; unique
("kenyas"	nil	(((k e) 1) ((n y @ z) 0)))	;; unique
("keplers"	nil	(((k e) 1) ((p l @ z) 0)))	;; unique
("kerb-crawling"	nil	(((k @@r b )1)((k r oo l )1)((i ng )0)))	;; ing
("kereru"	nil	(((k e) 0) ((r e) 0) ((r uu) 1)))	;; unique
("kerewai"	nil	(((k e) 1) ((r e) 0) ((w ai) 0)))	;; unique
("kermits"	nil	(((k @@r) 1) ((m i t s) 0)))	;; unique
("kerneling"	nil	(((k @@r )1)((n l! )0)((i ng )0)))	;; ing
("kerning"	nil	(((k @@r n )1)((i ng )0)))	;; ing
("kerrs"	nil	(((k @@r z) 1)))	;; unique
("kesslers"	nil	(((k e s) 1) ((l @ z) 0)))	;; unique
("kete"	nil	(((k e) 1) ((t ei) 0)))	;; unique
("kettering"	nil	(((k e )1)((t^ @ )0)((r i ng )0)))	;; ing
("kevins"	nil	(((k e) 1) ((v i n z) 0)))	;; unique
("key-hole"	nil	(((k ii) 1) ((h o l) 0)))	;; oul
("key-holes"	nil	(((k ii) 1) ((h o l z) 0)))	;; oul
("keybinding"	nil	(((k ii )1)((b ai n d )1)((i ng )0)))	;; ing
("keyboarding"	nil	(((k ii )1)((b - oo d )0)((i ng )0)))	;; ing
("keyhole"	nil	(((k ii) 1) ((h o l) 0)))	;; oul
("keyholes"	nil	(((k ii) 1) ((h o l z) 0)))	;; oul
("keying"	nil	(((k ii )1)((i ng )0)))	;; ing
("keymapping"	nil	(((k ii )1)((m a p )1)((i ng )0)))	;; ing
("keynoting"	nil	(((k ii )1)((n ou t^ )1)((i ng )0)))	;; ing
("khalifas"	nil	(((k aa) 0) ((l ii) 1) ((f @ z) 0)))	;; unique
("khans"	nil	(((k aa n z) 1)))	;; unique
("khomeinis"	nil	(((h o) 0) ((m ei) 1) ((n ii z) 0)))	;; unique
("kia"	nil	(((k ii) 1) ((@) 0)))	;; unique
("kick-starting"	nil	(((k i k )1)((s t aa t^ )1)((i ng )0)))	;; ing
("kicking"	nil	(((k i k )1)((i ng )0)))	;; ing
("kickstarting"	nil	(((k i k )1)((s t aa t^ )1)((i ng )0)))	;; ing
("kidding"	nil	(((k i d )1)((i ng )0)))	;; ing
("kidnapping"	nil	(((k i d )1)((n a p )1)((i ng )0)))	;; ing
("kiekie"	nil	(((k i) 1) ((@) 0) ((k i) 0) ((@) 0)))	;; unique
("killing"	nil	(((k i l )1)((i ng )0)))	;; ing
("kilojoule"	nil	(((k i) 1) ((l @) 0) ((jh u l) 1)))	;; uul
("kilojoules"	nil	(((k i) 1) ((l @) 0) ((jh u l z) 1)))	;; uul
("kilovolt"	nil	(((k i) 1) ((l @) 0) ((v o l t) 1)))	;; oul
("kilovolts"	nil	(((k i) 1) ((l @) 0) ((v o l t s) 1)))	;; oul
("kina"	nil	(((k ii) 1) ((n @) 0)))	;; unique
("kinaki"	nil	(((k ii) 1) ((n aa) 0) ((k ii) 0)))	;; unique
("kind-looking"	nil	(((k ai n d )1)((l u k )1)((i ng )0)))	;; ing
("kindling"	nil	(((k i n )1)((d l! )0)((i ng )0)))	;; ing
("kingitanga"	nil	(((k i ng) 1) ((ii) 0) ((t uh ng) 0) ((@) 0)))	;; unique
("kingstons"	nil	(((k i ng) 1) ((s t @ n z) 0)))	;; unique
("kinking"	nil	(((k i ng k )1)((i ng )0)))	;; ing
("kiokio"	nil	(((k ii) 1) ((oo) 0) ((k ii) 0) ((oo) 0)))	;; unique
("kiore"	nil	(((k ii) 1) ((oo) 0) ((r ei) 0)))	;; unique
("kipling"	nil	(((k i )1)((p l i ng )0)))	;; ing
("kipping"	nil	(((k i p )1)((i ng )0)))	;; ing
("kirikiriroa"	nil	(((k ii) 1) ((r ii) 0) ((k ii) 0) ((r ii) 0) ((r ou) 0) ((@) 0)))	;; unique
("kirimate"	nil	(((k i) 0) ((r i) 0) ((m a) 1) ((t^ ii) 0)))	;; unique
("kirimoko"	nil	(((k ii) 1) ((r ii) 0) ((m ou) 0) ((k ou) 0)))	;; unique
("kirks"	nil	(((k @@r k s) 1)))	;; unique
("kirkwoods"	nil	(((k @@r k) 1) ((w u d z) 0)))	;; unique
("kissing"	nil	(((k i s )1)((i ng )0)))	;; ing
("kite"	nil	(((k ii) 1) ((t ei) 0))) 	;; maori
("kitting"	nil	(((k i t^ )1)((i ng )0)))	;; ing
("kiwakiwa"	nil	(((k ii) 1) ((w aa) 0) ((k ii) 0) ((w @) 0)))	;; unique
("kiwi"	nil	(((k ii) 1) ((w ii) 0))) 	;; maori
("klerks"	nil	(((k l @@r k s) 1)))	;; unique
("kludging"	nil	(((k l uh jh )1)((i ng )0)))	;; ing
("kluging"	nil	(((k l uh jh )1)((i ng )0)))	;; ing
("knapps"	nil	(((n a p s) 1)))	;; unique
("kneading"	nil	(((n ii d )1)((i ng )0)))	;; ing
("kneecapping"	nil	(((n ii )1)((k a p )1)((i ng )0)))	;; ing
("kneehole"	nil	(((n ii) 1) ((h o l) 0)))	;; oul
("kneeholes"	nil	(((n ii) 1) ((h o l z) 0)))	;; oul
("kneeing"	nil	(((n ii )1)((i ng )0)))	;; ing
("kneeling"	nil	(((n ii l )1)((i ng )0)))	;; ing
("knifing"	nil	(((n ai f )1)((i ng )0)))	;; ing
("knighting"	nil	(((n ai t^ )1)((i ng )0)))	;; ing
("knitting"	nil	(((n i t^ )1)((i ng )0)))	;; ing
("knocking"	nil	(((n o k )1)((i ng )0)))	;; ing
("knoll"	nil	(((n o l) 1)))	;; oul
("knolls"	nil	(((n o l z) 1)))	;; oul
("knothole"	nil	(((n o t) 1) ((h o l) 0)))	;; oul
("knotholes"	nil	(((n o t) 1) ((h o l z) 0)))	;; oul
("knotting"	nil	(((n o t^ )1)((i ng )0)))	;; ing
("knowing"	nil	(((n ou )1)((i ng )0)))	;; ing
("knoxs"	nil	(((n o k s) 1) ((@ z) 0)))	;; unique
("knuckling"	nil	(((n uh )1)((k l! )0)((i ng )0)))	;; ing
("ko"	nil	(((k oo) 1)))	;; unique
("koarea"	nil	(((k oo) 1) ((aa) 0) ((r e) 0) ((@) 0)))	;; unique
("koaro"	nil	(((k oo) 1) ((aa) 0) ((r ou) 0)))	;; unique
("koauau"	nil	(((k oo) 0) ((ow) 1) ((ow) 0)))	;; unique
("kochs"	nil	(((k o ch) 1) ((@ z) 0)))	;; unique
("koekoea"	nil	(((k oo) 0) ((e) 0) ((k oo) 0) ((e) 0) ((aa) 1)))	;; unique
("koha"	nil	(((k oo) 1) ((h aa) 0)))	;; unique
("kohanga"	nil	(((k oo) 1) ((h uh ng) 0) ((@) 0)))	;; unique
("kohekohe"	nil	(((k ou) 1) ((i) 0) ((k ou) 0) ((i) 0)))	;; unique
("kohepiro"	nil	(((k oo) 1) ((h e) 0) ((p ii) 0) ((r ou) 0)))	;; unique
("koheru"	nil	(((k oo) 1) ((h e) 0) ((r uu) 0)))	;; unique
("kohia"	nil	(((k oo) 1) ((h ii) 0) ((@) 0)))	;; unique
("kohikohi"	nil	(((k oo) 1) ((h ii) 0) ((k oo) 0) ((h ii) 0)))	;; unique
("kohl"	nil	(((k o l) 1)))	;; oul
("kohlberg"	nil	(((k o l) 1) ((b @@r g) 0)))	;; oul
("kohlbergs"	nil	(((k o l) 1) ((b @@r g z) 0)))	;; unique
("kohler"	nil	(((k o) 1) ((l @) 0)))	;; oul
("kohlers"	nil	(((k o) 1) ((l @ z) 0)))	;; oul
("kohlrabi"	nil	(((k o l) 0) ((r aa) 1) ((b ii) 0)))	;; oul
("kohls"	nil	(((k o l z) 1)))	;; unique
("kohoperoa"	nil	(((k oo) 1) ((h oo) 0) ((p e) 0) ((r ou) 0) ((@) 0)))	;; unique
("kohua"	nil	(((k oo) 1) ((h uu) 0) ((@) 0)))	;; unique
("kohuhu"	nil	(((k oo) 0) ((h uu) 1) ((h uu) 0)))	;; unique
("kohukohu"	nil	(((k oo) 1) ((h uu) 0) ((k oo) 0) ((h uu) 0)))	;; unique
("kohutuhutu"	nil	(((k @) 0) ((h uu) 1) ((t^ uu) 0) ((h uu) 0) ((t^ uu) 0)))	;; unique
("koinga"	nil	(((k oo) 1) ((ii ng) 0) ((@) 0)))	;; unique
("koitareke"	nil	(((k oi) 0) ((t^ @) 0) ((r e) 1) ((k i) 0)))	;; unique
("koiwi"	nil	(((k oo) 1) ((ii) 0) ((w ii) 0)))	;; unique
("kokako"	nil	(((k oo) 1) ((k aa) 0) ((k oo) 0)))	;; unique
("kokihi"	nil	(((k oo) 1) ((k ii) 0) ((h ii) 0)))	;; unique
("kokiri"	nil	(((k oo) 1) ((k ii) 0) ((r ii) 0)))	;; unique
("kokomuka"	nil	(((k oo) 1) ((k oo) 0) ((m uu) 0) ((k @) 0)))	;; unique
("kokopara"	nil	(((k oo) 1) ((k oo) 0) ((p aa) 0) ((r @) 0)))	;; unique
("kokopu"	nil	(((k oo) 1) ((k oo) 0) ((p uu) 0)))	;; unique
("kokori"	nil	(((k ou) 1) ((k ou) 0) ((r ii) 0)))	;; unique
("kokowai"	nil	(((k oo) 1) ((k oo) 0) ((w ai) 0)))	;; unique
("kola"	nil	(((k o) 1) ((l @) 0)))	;; oul
("kolas"	nil	(((k o) 1) ((l @ z) 0)))	;; unique
("komate"	nil	(((k ou) 1) ((m aa) 0) ((t ei) 0)))	;; unique
("komiti"	nil	(((k ou) 1) ((m i) 0) ((t ii) 0)))	;; unique
("konaki"	nil	(((k ou) 0) ((n aa) 1) ((k ii) 0)))	;; unique
("kongs"	nil	(((k o ng z) 1)))	;; unique
("konini"	nil	(((k ou) 0) ((n i) 1) ((n ii) 0)))	;; unique
("kono"	nil	(((k oo) 1) ((n oo) 0)))	;; unique
("kopa"	nil	(((k ou) 1) ((p @) 0)))	;; unique
("kopakopa"	nil	(((k oo) 1) ((p aa) 0) ((k oo) 0) ((p @) 0)))	;; unique
("kopapa"	nil	(((k oo) 1) ((p aa) 0) ((p @) 0)))	;; unique
("kopata"	nil	(((k oo) 1) ((p aa) 0) ((t^ @) 0)))	;; unique
("kopi"	nil	(((k ou) 1) ((p ii) 0)))	;; unique
("kopiro"	nil	(((k ou) 1) ((p ii) 0) ((r ou) 0)))	;; unique
("kopukapuka"	nil	(((k oo) 0) ((p uu) 1) ((k aa) 0) ((p uu) 0) ((k @) 0)))	;; unique
("kopuru"	nil	(((k ou) 1) ((p uu) 0) ((r uu) 0)))	;; unique
("koputotara"	nil	(((k oo) 0) ((p uu) 0) ((t oo) 1) ((t aa) 0) ((r @) 0)))	;; unique
("korari"	nil	(((k @) 0) ((r aa) 1) ((r ii) 0)))	;; unique
("korau"	nil	(((k oo) 1) ((r ow) 0)))	;; unique
("koreke"	nil	(((k oo) 1) ((r e) 0) ((k ei) 0)))	;; unique
("korero"	nil	(((k oo) 0) ((r e) 1) ((r ou) 0)))	;; unique
("korerorero"	nil	(((k o) 0) ((r e) 1) ((r ou) 0) ((r e) 0) ((r ou) 0)))	;; unique
("korikori"	nil	(((k oo) 1) ((r ii) 0) ((k oo) 0) ((r ii) 0)))	;; unique
("korimako"	nil	(((k o) 0) ((r @) 0) ((m aa) 1) ((k ou) 0)))	;; unique
("koro"	nil	(((k oo) 1) ((r ou) 0)))	;; unique
("koroi"	nil	(((k oo) 0) ((r ou) 0) ((ii) 1)))	;; unique
("korokio"	nil	(((k oo) 1) ((r ou) 0) ((k ii) 0) ((oo) 0)))	;; unique
("korokoro"	nil	(((k oo) 1) ((r ou) 0) ((k oo) 0) ((r ou) 0)))	;; unique
("korokoro-pounamu"	nil	(((k oo) 1) ((r ou) 0) ((k oo) 0) ((r ou) 0) ((p ou) 1) ((n aa) 0) ((m uu) 0)))	;; unique
("koromiko"	nil	(((k oo) 1) ((r ou) 0) ((m ii) 0) ((k oo) 0)))	;; unique
("korora"	nil	(((k oo) 0) ((r ou) 0) ((r aa) 1)))	;; unique
("korotangi"	nil	(((k oo) 1) ((r @) 0) ((t uh ng) 0) ((ii) 0)))	;; unique
("koroua"	nil	(((k oo) 1) ((r ou) 0) ((uu) 0) ((@) 0)))	;; unique
("korowai"	nil	(((k oo) 1) ((r ou) 0) ((w ai) 0)))	;; unique
("koru"	nil	(((k oo) 1) ((r uu) 0)))	;; unique
("koruru"	nil	(((k oo) 1) ((r uu) 0) ((r uu) 0)))	;; unique
("kotahitanga"	nil	(((k oo) 1) ((t aa) 0) ((h ii) 0) ((t uh ng) 0) ((@) 0)))	;; unique
("kotare"	nil	(((k oo) 1) ((t aa) 0) ((r ei) 0)))	;; unique
("kotero"	nil	(((k oo) 1) ((t e) 0) ((r ou) 0)))	;; unique
("kotuku"	nil	(((k ou) 1) ((t^ @) 0) ((k uu) 0)))	;; unique
("kotuku-ngutupapa"	nil	(((k oo) 1) ((t uu) 0) ((k uu ng) 0) ((uu) 1) ((t uu) 0) ((p aa) 0) ((p @) 0)))	;; unique
("kotukutuku"	nil	(((k oo) 0) ((t uu) 1) ((k uu) 0) ((t uu) 0) ((k uu) 0)))	;; unique
("kouka"	nil	(((k ou) 1) ((k @) 0)))	;; unique
("koukou"	nil	(((k ou) 1) ((k ou) 0)))	;; unique
("koura"	nil	(((k ou) 1) ((r @) 0)))	;; unique
("koutou"	nil	(((k ou) 1) ((t ou) 0)))	;; unique
("kowhai"	nil	(((k oo) 1) ((f ai) 0)))	;; unique
("kowhaiwhai"	nil	(((k oo) 0) ((f ai) 1) ((f ai) 0)))	;; unique
("kowharawhara"	nil	(((k oo) 0) ((f aa) 1) ((r aa) 0) ((f aa) 0) ((r @) 0)))	;; unique
("kowiniwini"	nil	(((k oo) 0) ((w ii) 1) ((n ii) 0) ((w ii) 0) ((n ii) 0)))	;; unique
("kowtowing"	nil	(((k ow )0)((t ow )1)((i ng )0)))	;; ing
("ks"	nil	(((k ei z) 1)))	;; unique
("kuaka"	nil	(((k uu) 1) ((aa) 0) ((k @) 0)))	;; unique
("kui"	nil	(((k uu) 1) ((ii) 0)))	;; unique
("kuia"	nil	(((k uu) 1) ((ii) 0) ((@) 0)))	;; unique
("kuku"	nil	(((k uu) 1) ((k uu) 0)))	;; unique
("kukupa"	nil	(((k uu) 1) ((k uu) 0) ((p @) 0)))	;; unique
("kukuruata"	nil	(((k uu) 0) ((k uu) 0) ((r uu) 1) ((aa) 0) ((t^ @) 0)))	;; unique
("kumara"	nil	(((k uu m) 1) ((r @) 0)))	;; unique
("kumarahou"	nil	(((k uu) 1) ((m aa) 0) ((r aa) 0) ((h ou) 0)))	;; unique
("kumi"	nil	(((k uu) 1) ((m ii) 0)))	;; unique
("kumukumu"	nil	(((k uu) 1) ((m uu) 0) ((k uu) 0) ((m uu) 0)))	;; unique
("kune"	nil	(((k uu) 1) ((n ei) 0)))	;; unique
("kupae"	nil	(((k uu) 1) ((p ai) 0)))	;; unique
("kupapa"	nil	(((k uu) 1) ((p aa) 0) ((p @) 0)))	;; unique
("kuparu"	nil	(((k uu) 1) ((p aa) 0) ((r uu) 0)))	;; unique
("kupe"	nil	(((k uu) 1) ((p ei) 0)))	;; unique
("kura"	nil	(((k uu) 1) ((r @) 0)))	;; unique
("kuri"	nil	(((k uu) 1) ((r ii) 0)))	;; unique
("kurikuri"	nil	(((k uu) 1) ((r ii) 0) ((k uu) 0) ((r ii) 0)))	;; unique
("kurts"	nil	(((k @@r t s) 1)))	;; unique
("kuruwhengi"	nil	(((k uu) 1) ((r uu) 0) ((f e ng) 0) ((ii) 0)))	;; unique
("kutai"	nil	(((k uu) 1) ((t ai) 0)))	;; unique
("kutu"	nil	(((k uu) 1) ((t uu) 0)))	;; unique
("kyoceras"	nil	(((k ai @) 0) ((s ir) 1) ((r @ z) 0)))	;; unique
("labeling"	nil	(((l ei )1)((b l! )0)((i ng )0)))	;; ing
("labelling"	nil	(((l ei )1)((b l! )0)((i ng )0)))	;; ing
("labialising"	nil	(((l ei )1)((b iy @ l )0)((ai z )1)((i ng )0)))	;; ing
("labializing"	nil	(((l ei )1)((b iy @ l )0)((ai z )1)((i ng )0)))	;; ing
("labor-saving"	nil	(((l ei )1)((b @ )0)((s ei v )1)((i ng )0)))	;; ing
("laboratorys"	nil	(((l @) 0) ((b o) 1) ((r @) 0) ((t^ @) 0) ((r ii z) 0)))	;; unique
("laboring"	nil	(((l ei )1)((b @ r )0)((i ng )0)))	;; ing
("labour-saving"	nil	(((l ei )1)((b @ )0)((s ei v )1)((i ng )0)))	;; ing
("labouring"	nil	(((l ei )1)((b @ r )0)((i ng )0)))	;; ing
("lacemaking"	nil	(((l ei s )1)((m ei k )1)((i ng )0)))	;; ing
("lacerating"	nil	(((l a )1)((s @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("lacing"	nil	(((l ei s )1)((i ng )0)))	;; ing
("lacking"	nil	(((l a k )1)((i ng )0)))	;; ing
("lacquering"	nil	(((l a )1)((k @ r )0)((i ng )0)))	;; ing
("lactating"	nil	(((l a k )0)((t ei t^ )1)((i ng )0)))	;; ing
("lactulose"	nil	(((l a k) 1) ((t y uu) 0) ((l ou z) 1)))	;; unique
("laddering"	nil	(((l a )1)((d @ r )0)((i ng )0)))	;; ing
("lading"	nil	(((l ei d )1)((i ng )0)))	;; ing
("ladling"	nil	(((l ei )1)((d l! )0)((i ng )0)))	;; ing
("ladys"	nil	(((l ei) 1) ((d ii z) 0)))	;; unique
("ladys-maid"	nil	(((l ei) 1) ((d ii z) 0) ((m ei d) 1)))	;; unique
("lagging"	nil	(((l a g )1)((i ng )0)))	;; ing
("lamarcks"	nil	(((l a) 0) ((m aa k s) 1)))	;; unique
("lambasting"	nil	(((l a m )0)((b a s t )1)((i ng )0)))	;; ing
("lambing"	nil	(((l a m )1)((i ng )0)))	;; ing
("lamenting"	nil	(((l @ )0)((m e n t )1)((i ng )0)))	;; ing
("laminating"	nil	(((l a )1)((m @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("laming"	nil	(((l ei m )1)((i ng )0)))	;; ing
("lampholder"	nil	(((l a m p) 1) ((h o l d) 1) ((@) 0)))	;; oul
("lampholders"	nil	(((l a m p) 1) ((h o l d) 1) ((@ z) 0)))	;; oul
("lampooning"	nil	(((l a m )0)((p uu n )1)((i ng )0)))	;; ing
("lancing"	nil	(((l aa n s )1)((i ng )0)))	;; ing
("landfilling"	nil	(((l a n d )1)((f i l )1)((i ng )0)))	;; ing
("landhold"	nil	(((l a n d) 1) ((h o l d) 0)))	;; oul
("landholder"	nil	(((l a n d) 1) ((h o l d) 1) ((@) 0)))	;; oul
("landholders"	nil	(((l a n d) 1) ((h o l d) 1) ((@ z) 0)))	;; oul
("landholding"	nil	(((l a n d) 1) ((h o l d) 1) ((i ng) 0)))	;; oul
("landholdings"	nil	(((l a n d) 1) ((h o l d) 0) ((i ng z) 0)))	;; oul
("landing"	nil	(((l a n d )1)((i ng )0)))	;; ing
("landladys"	nil	(((l a n d) 1) ((l ei) 1) ((d ii z) 0)))	;; unique
("landowning"	nil	(((l a n d )1)((ou n )1)((i ng )0)))	;; ing
("landrys"	nil	(((l a n) 1) ((d r ii z) 0)))	;; unique
("landscaping"	nil	(((l a n d )1)((s k ei p )1)((i ng )0)))	;; ing
("langleys"	nil	(((l a ng) 1) ((l ii z) 0)))	;; unique
("langs"	nil	(((l a ng z) 1)))	;; unique
("languishing"	nil	(((l a ng )1)((g w i sh )0)((i ng )0)))	;; ing
("lankas"	nil	(((l a ng) 1) ((k @ z) 0)))	;; unique
("lansing"	nil	(((l aa n )1)((s i ng )0)))	;; ing
("lap-dancing"	nil	(((l a p )1)((d aa n s )1)((i ng )0)))	;; ing
("lapping"	nil	(((l a p )1)((i ng )0)))	;; ing
("lapsing"	nil	(((l a p s )1)((i ng )0)))	;; ing
("larges"	nil	(((l aa jh) 1) ((@ z) 0)))	;; unique
("larking"	nil	(((l aa k )1)((i ng )0)))	;; ing
("larrys"	nil	(((l a) 1) ((r ii z) 0)))	;; unique
("larsens"	nil	(((l aa) 1) ((s n! z) 0)))	;; unique
("larss"	nil	(((l aa z) 1) ((@ z) 0)))	;; unique
("lashing"	nil	(((l a sh )1)((i ng )0)))	;; ing
("lasix"	nil	(((l a) 1) ((s i k s) 0)))	;; unique
("lassoing"	nil	(((l @ )0)((s uu )1)((i ng )0)))	;; ing
("lasting"	nil	(((l aa s t )1)((i ng )0)))	;; ing
("latanoprost"	nil	(((l @) 0) ((t a) 1) ((n @) 0) ((p r o s t) 1)))	;; unique
("latching"	nil	(((l a ch )1)((i ng )0)))	;; ing
("latexing"	nil	(((l ei )1)((t^ e k )0)((i ng )0)))	;; ing
("latexs"	nil	(((l ei) 1) ((t^ e k s) 0) ((@ z) 0)))	;; unique
("lathering"	nil	(((l aa )1)((dh @ r )0)((i ng )0)))	;; ing
("latimers"	nil	(((l a) 1) ((t^ @) 0) ((m @ z) 0)))	;; unique
("latticing"	nil	(((l a )1)((t^ @ s )0)((i ng )0)))	;; ing
("lauding"	nil	(((l oo d )1)((i ng )0)))	;; ing
("laughing"	nil	(((l aa f )1)((i ng )0)))	;; ing
("launching"	nil	(((l oo n ch )1)((i ng )0)))	;; ing
("laundering"	nil	(((l oo n )1)((d @ r )0)((i ng )0)))	;; ing
("lauras"	nil	(((l oo) 1) ((r @ z) 0)))	;; unique
("laurelling"	nil	(((l o )1)((r @ l )0)((i ng )0)))	;; ing
("lavishing"	nil	(((l a )1)((v i sh )0)((i ng )0)))	;; ing
("law-abiding"	nil	(((l oo @ )1)((b ai d )1)((i ng )0)))	;; ing
("law-making"	nil	(((l oo )1)((m ei k )1)((i ng )0)))	;; ing
("lawbreaking"	nil	(((l oo )1)((b r ei k )1)((i ng )0)))	;; ing
("lawgiving"	nil	(((l oo )1)((g i v )1)((i ng )0)))	;; ing
("lawmaking"	nil	(((l oo )1)((m ei k )1)((i ng )0)))	;; ing
("lawsons"	nil	(((l oo) 1) ((s n! z) 0)))	;; unique
("laxol"	nil	(((l a k) 1) ((s o l) 0)))	;; unique
("layering"	nil	(((l ei @ r )1)((i ng )0)))	;; ing
("laying"	nil	(((l ei )1)((i ng )0)))	;; ing
("laymans"	nil	(((l ei) 1) ((m @ n z) 0)))	;; unique
("layouting"	nil	(((l ei )1)((- ow t^ )0)((i ng )0)))	;; ing
("lazing"	nil	(((l ei z )1)((i ng )0)))	;; ing
("leaching"	nil	(((l ii ch )1)((i ng )0)))	;; ing
("leading"	nil	(((l e d )1)((i ng )0)))	;; ing
("leafing"	nil	(((l ii f )1)((i ng )0)))	;; ing
("leafleting"	nil	(((l ii f )1)((l @ t^ )0)((i ng )0)))	;; ing
("leahys"	nil	(((l ii) 1) ((h ii z) 0)))	;; unique
("leaking"	nil	(((l ii k )1)((i ng )0)))	;; ing
("leaning"	nil	(((l ii n )1)((i ng )0)))	;; ing
("leap-frogging"	nil	(((l ii p )1)((f r o g )1)((i ng )0)))	;; ing
("leapfrogging"	nil	(((l ii p )1)((f r o g )1)((i ng )0)))	;; ing
("leaping"	nil	(((l ii p )1)((i ng )0)))	;; ing
("learing"	nil	(((l ir r )1)((i ng )0)))	;; ing
("learning"	nil	(((l @@r n )1)((i ng )0)))	;; ing
("leasehold"	nil	(((l ii s) 1) ((h o l d) 0)))	;; oul
("leaseholder"	nil	(((l ii s) 1) ((h o l d) 1) ((@) 0)))	;; oul
("leaseholders"	nil	(((l ii s) 1) ((h o l d) 1) ((@ z) 0)))	;; oul
("leaseholds"	nil	(((l ii s) 1) ((h o l d z) 0)))	;; oul
("leashing"	nil	(((l ii sh )1)((i ng )0)))	;; ing
("leasing"	nil	(((l ii s )1)((i ng )0)))	;; ing
("leavening"	nil	(((l e )1)((v n! )0)((i ng )0)))	;; ing
("leavetaking"	nil	(((l ii v )1)((t ei k )1)((i ng )0)))	;; ing
("leaving"	nil	(((l ii v )1)((i ng )0)))	;; ing
("lebanons"	nil	(((l e) 1) ((b @) 0) ((n @ n z) 0)))	;; unique
("lecturing"	nil	(((l e k )1)((ch @ r )0)((i ng )0)))	;; ing
("ledging"	nil	(((l e jh )1)((i ng )0)))	;; ing
("leeching"	nil	(((l ii ch )1)((i ng )0)))	;; ing
("leering"	nil	(((l ir r )1)((i ng )0)))	;; ing
("left-leaning"	nil	(((l e f t )1)((l ii n )1)((i ng )0)))	;; ing
("legalising"	nil	(((l ii )1)((g @ l )0)((ai z )1)((i ng )0)))	;; ing
("legalizing"	nil	(((l ii )1)((g @ l )0)((ai z )1)((i ng )0)))	;; ing
("legging"	nil	(((l e g )1)((i ng )0)))	;; ing
("legislating"	nil	(((l e )1)((jh i )0)((s l ei t^ )1)((i ng )0)))	;; ing
("legitimising"	nil	(((l @ )0)((jh i )1)((t^ i )0)((m ai z )1)((i ng )0)))	;; ing
("legitimizing"	nil	(((l @ )0)((jh i )1)((t^ i )0)((m ai z )1)((i ng )0)))	;; ing
("lehmans"	nil	(((l ei) 1) ((m @ n z) 0)))	;; unique
("lemming"	nil	(((l e )1)((m i ng )0)))	;; ing
("lending"	nil	(((l e n d )1)((i ng )0)))	;; ing
("lengthening"	nil	(((l e ng th )1)((@ n )0)((i ng )0)))	;; ing
("leopold"	nil	(((l e @) 1) ((p o l d) 0)))	;; beer-bear, oul
("lesothos"	nil	(((l @) 0) ((s uu) 1) ((t^ uu z) 0)))	;; unique
("lessening"	nil	(((l e s )1)((n! )0)((i ng )0)))	;; ing
("lessing"	nil	(((l e )1)((s i ng )0)))	;; ing
("let's"	nil	(((l e t s) 1)))	;; contraction
("letter-bombing"	nil	(((l e )1)((t^ @ )0)((b o m )1)((i ng )0)))	;; ing
("letter-writing"	nil	(((l e )1)((t^ @ )0)((r ai t^ )1)((i ng )0)))	;; ing
("letterbombing"	nil	(((l e )1)((t^ @ )0)((b o m )1)((i ng )0)))	;; ing
("lettering"	nil	(((l e )1)((t^ @ r )0)((i ng )0)))	;; ing
("lettermans"	nil	(((l e) 1) ((t^ @) 0) ((m @ n z) 0)))	;; unique
("letterwriting"	nil	(((l e )1)((t^ @ )0)((r ai t^ )1)((i ng )0)))	;; ing
("letting"	nil	(((l e t^ )1)((i ng )0)))	;; ing
("leveling"	nil	(((l e )1)((v l! )0)((i ng )0)))	;; ing
("levelling"	nil	(((l e )1)((v l! )0)((i ng )0)))	;; ing
("leveraging"	nil	(((l ii )1)((v @ r )0)((i jh )0)((i ng )0)))	;; ing
("levering"	nil	(((l ii )1)((v @ r )0)((i ng )0)))	;; ing
("levines"	nil	(((l @) 0) ((v ii n z) 1)))	;; unique
("levitating"	nil	(((l e )1)((v @ )0)((t ei t^ )1)((i ng )0)))	;; ing
("levying"	nil	(((l e )1)((v iy )0)((i ng )0)))	;; ing
("lewiss"	nil	(((l uu) 1) ((i s) 0) ((@ z) 0)))	;; unique
("lexs"	nil	(((l e k s) 1) ((@ z) 0)))	;; unique
("liaising"	nil	(((l iy )0)((ei z )1)((i ng )0)))	;; ing
("libeling"	nil	(((l ai )1)((b l! )0)((i ng )0)))	;; ing
("libelling"	nil	(((l ai )1)((b l! )0)((i ng )0)))	;; ing
("liberalising"	nil	(((l i )1)((b @ )0)((r @ l )0)((ai z )1)((i ng )0)))	;; ing
("liberalizing"	nil	(((l i )1)((b @ )0)((r @ l )0)((ai z )1)((i ng )0)))	;; ing
("liberating"	nil	(((l i )1)((b @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("liberias"	nil	(((l ai) 0) ((b ir) 1) ((r ii @ z) 0)))	;; unique
("librarys"	nil	(((l ai) 1) ((b r @) 0) ((r ii z) 0)))	;; unique
("librating"	nil	(((l ai )1)((b r ei t^ )0)((i ng )0)))	;; ing
("libyas"	nil	(((l i) 1) ((b ii @ z) 0)))	;; unique
("licencing"	nil	(((l ai )1)((s n! s )0)((i ng )0)))	;; ing
("licensing"	nil	(((l ai )1)((s n! s )0)((i ng )0)))	;; ing
("licking"	nil	(((l i k )1)((i ng )0)))	;; ing
("liebling"	nil	(((l ii b )1)((l i ng )0)))	;; ing
("liechtensteins"	nil	(((l i k) 1) ((t @ n) 0) ((s t ai n z) 0)))	;; unique
("life-affirming"	nil	(((l ai f )1)((@ )0)((f @@r m )1)((i ng )0)))	;; ing
("life-giving"	nil	(((l ai f )1)((g i v )1)((i ng )0)))	;; ing
("life-saving"	nil	(((l ai f )1)((s ei v )1)((i ng )0)))	;; ing
("life-threatening"	nil	(((l ai f )1)((th r e t )1)((n! )0)((i ng )0)))	;; ing
("life-transforming"	nil	(((l ai f )1)((t r a n s )0)((f oo m )1)((i ng )0)))	;; ing
("lifeguarding"	nil	(((l ai f )1)((g aa d )1)((i ng )0)))	;; ing
("lifesaving"	nil	(((l ai f )1)((s ei v )1)((i ng )0)))	;; ing
("lifting"	nil	(((l i f t )1)((i ng )0)))	;; ing
("ligging"	nil	(((l i g )1)((i ng )0)))	;; ing
("lightening"	nil	(((l ai t )1)((n! )0)((i ng )0)))	;; ing
("lighting"	nil	(((l ai t^ )1)((i ng )0)))	;; ing
("lightning"	nil	(((l ai t )1)((n i ng )0)))	;; ing
("lignifying"	nil	(((l i g )1)((n @ )0)((f ai )1)((i ng )0)))	;; ing
("likening"	nil	(((l ai k )1)((@ n )0)((i ng )0)))	;; ing
("liking"	nil	(((l ai k )1)((i ng )0)))	;; ing
("lilting"	nil	(((l i l t )1)((i ng )0)))	;; ing
("limbering"	nil	(((l i m )1)((b @ r )0)((i ng )0)))	;; ing
("limelighting"	nil	(((l ai m )1)((l ai t^ )1)((i ng )0)))	;; ing
("liming"	nil	(((l ai m )1)((i ng )0)))	;; ing
("limiting"	nil	(((l i )1)((m @ t^ )0)((i ng )0)))	;; ing
("limping"	nil	(((l i m p )1)((i ng )0)))	;; ing
("lindas"	nil	(((l i n) 1) ((d @ z) 0)))	;; unique
("linebreaking"	nil	(((l ai n )1)((b r ei k )1)((i ng )0)))	;; ing
("linemans"	nil	(((l ai n) 1) ((m @ n z) 0)))	;; unique
("lingering"	nil	(((l i ng )1)((g @ r )0)((i ng )0)))	;; ing
("lining"	nil	(((l ai n )1)((i ng )0)))	;; ing
("linking"	nil	(((l i ng k )1)((i ng )0)))	;; ing
("linoleum"	nil	(((l i) 0) ((n o) 1) ((l ii @ m) 0)))	;; oul
("linoleums"	nil	(((l i) 0) ((n o) 1) ((l ii @ m z) 0)))	;; oul
("linting"	nil	(((l i n t )1)((i ng )0)))	;; ing
("linuss"	nil	(((l ai) 1) ((n @ s) 0) ((@ z) 0)))	;; unique
("lip-synching"	nil	(((l i p )1)((s i ng k )1)((i ng )0)))	;; ing
("lipitor"	nil	(((l i) 1) ((p @) 0) ((t oo) 1)))	;; unique
("lipping"	nil	(((l i p )1)((i ng )0)))	;; ing
("lipreading"	nil	(((l i p )1)((r ii d )1)((i ng )0)))	;; ing
("liquefying"	nil	(((l i )1)((k w @ )0)((f ai )1)((i ng )0)))	;; ing
("liquidating"	nil	(((l i )1)((k w i d )0)((ei t^ )1)((i ng )0)))	;; ing
("liquidising"	nil	(((l i )1)((k w i d )0)((ai z )1)((i ng )0)))	;; ing
("liquidizing"	nil	(((l i )1)((k w i d )0)((ai z )1)((i ng )0)))	;; ing
("lis"	nil	(((l ii z) 1)))	;; unique
("lisping"	nil	(((l i s p )1)((i ng )0)))	;; ing
("listening"	nil	(((l i )1)((s n! )0)((i ng )0)))	;; ing
("listing"	nil	(((l i s t )1)((i ng )0)))	;; ing
("litigating"	nil	(((l i )1)((t^ @ )0)((g ei t^ )1)((i ng )0)))	;; ing
("littering"	nil	(((l i )1)((t^ @ r )0)((i ng )0)))	;; ing
("littlewoods"	nil	(((l i) 1) ((t^ l!) 0) ((w u d z) 0)))	;; unique
("littling"	nil	(((l i )1)((t l! )0)((i ng )0)))	;; ing
("livening"	nil	(((l ai v )1)((n! )0)((i ng )0)))	;; ing
("liverpool"	nil	(((l i) 1) ((v @) 0) ((p u l) 0)))	;; uul
("living"	nil	(((l i v )1)((i ng )0)))	;; ing
("lizs"	nil	(((l i z) 1) ((@ z) 0)))	;; unique
("loading"	nil	(((l ou d )1)((i ng )0)))	;; ing
("loafing"	nil	(((l ou f )1)((i ng )0)))	;; ing
("loaning"	nil	(((l ou n )1)((i ng )0)))	;; ing
("loathing"	nil	(((l ou dh )1)((i ng )0)))	;; ing
("lobbing"	nil	(((l o b )1)((i ng )0)))	;; ing
("lobbying"	nil	(((l o )1)((b iy )0)((i ng )0)))	;; ing
("localising"	nil	(((l ou )1)((k @ l )0)((ai z )1)((i ng )0)))	;; ing
("localizing"	nil	(((l ou )1)((k @ l )0)((ai z )1)((i ng )0)))	;; ing
("locating"	nil	(((l ou )0)((k ei t^ )1)((i ng )0)))	;; ing
("lock-picking"	nil	(((l o k )1)((p i k )1)((i ng )0)))	;; ing
("lockes"	nil	(((l o k s) 1)))	;; unique
("lockheeds"	nil	(((l o k) 1) ((h ii d z) 0)))	;; unique
("locking"	nil	(((l o k )1)((i ng )0)))	;; ing
("lockpicking"	nil	(((l o k )1)((p i k )1)((i ng )0)))	;; ing
("locksmithing"	nil	(((l o k )1)((s m i th )1)((i ng )0)))	;; ing
("lodging"	nil	(((l o jh )1)((i ng )0)))	;; ing
("loeil"	nil	(((l @@r) 1) ((ii) 0)))	;; unique
("lofting"	nil	(((l o f t )1)((i ng )0)))	;; ing
("logging"	nil	(((l o g )1)((i ng )0)))	;; ing
("loitering"	nil	(((l oi )1)((t^ @ r )0)((i ng )0)))	;; ing
("lola"	nil	(((l o) 1) ((l @) 0)))	;; oul
("lolas"	nil	(((l o) 1) ((l @ z) 0)))	;; oul
("lolita"	nil	(((l o) 0) ((l ii) 1) ((t^ @) 0)))	;; oul
("lolling"	nil	(((l o l )1)((i ng )0)))	;; ing
("lolloping"	nil	(((l o )1)((l @ p )0)((i ng )0)))	;; ing
("londons"	nil	(((l uh n) 1) ((d @ n z) 0)))	;; unique
("long-standing"	nil	(((l o ng )1)((s t a n d )1)((i ng )0)))	;; ing
("long-suffering"	nil	(((l o ng )1)((s uh )1)((f @ r )0)((i ng )0)))	;; ing
("longer-lasting"	nil	(((l o ng )1)((g @ )0)((l aa s t )1)((i ng )0)))	;; ing
("longest-serving"	nil	(((l o ng )1)((g @ s t )0)((s @@r v )1)((i ng )0)))	;; ing
("longing"	nil	(((l o ng )1)((i ng )0)))	;; ing
("longstanding"	nil	(((l o ng )1)((s t a n d )1)((i ng )0)))	;; ing
("longstocking"	nil	(((l o ng )1)((s t o )1)((k i ng )0)))	;; ing
("looking"	nil	(((l u k )1)((i ng )0)))	;; ing
("looming"	nil	(((l uu m )1)((i ng )0)))	;; ing
("loophole"	nil	(((l uu p) 1) ((h o l) 0)))	;; oul
("loopholes"	nil	(((l uu p) 1) ((h o l z) 0)))	;; oul
("looping"	nil	(((l uu p )1)((i ng )0)))	;; ing
("loosening"	nil	(((l uu s )1)((n! )0)((i ng )0)))	;; ing
("loosing"	nil	(((l uu s )1)((i ng )0)))	;; ing
("looting"	nil	(((l uu t^ )1)((i ng )0)))	;; ing
("loperamide"	nil	(((l @) 0) ((p e) 1) ((r @) 0) ((m ai d) 1)))	;; unique
("loping"	nil	(((l ou p )1)((i ng )0)))	;; ing
("lopping"	nil	(((l o p )1)((i ng )0)))	;; ing
("lording"	nil	(((l oo d )1)((i ng )0)))	;; ing
("loris"	nil	(((l o) 1) ((r ii z) 0)))	;; unique
("lorrys"	nil	(((l o) 1) ((r ii z) 0)))	;; unique
("losartan"	nil	(((l @) 0) ((s aa) 1) ((t @ n) 0)))	;; unique
("losing"	nil	(((l uu z )1)((i ng )0)))	;; ing
("loss-making"	nil	(((l o s )1)((m ei k )1)((i ng )0)))	;; ing
("lotuss"	nil	(((l ou) 1) ((t^ @ s) 0) ((@ z) 0)))	;; unique
("loudspeaking"	nil	(((l ow d )1)((s p ii k )1)((i ng )0)))	;; ing
("louies"	nil	(((l uu) 1) ((ii z) 0)))	;; unique
("loungeing"	nil	(((l ow n jh )1)((i ng )0)))	;; ing
("lounging"	nil	(((l ow n jh )1)((i ng )0)))	;; ing
("lous"	nil	(((l uu z) 1)))	;; unique
("lousing"	nil	(((l ow s )1)((i ng )0)))	;; ing
("louting"	nil	(((l ow t^ )1)((i ng )0)))	;; ing
("lovd"	nil	(((l uh v d) 1)))	;; unique
("love-making"	nil	(((l uh v )1)((m ei k )1)((i ng )0)))	;; ing
("lovemaking"	nil	(((l uh v )1)((m ei k )1)((i ng )0)))	;; ing
("loving"	nil	(((l uh v )1)((i ng )0)))	;; ing
("low-lying"	nil	(((l ou )1)((l ai )1)((i ng )0)))	;; ing
("lowering"	nil	(((l ow @ r )1)((i ng )0)))	;; ing
("lowing"	nil	(((l ou )1)((i ng )0)))	;; ing
("ls"	nil	(((a l z) 1)))	;; unique
("lubing"	nil	(((l uu b )1)((i ng )0)))	;; ing
("lubricating"	nil	(((l uu )1)((b r @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("lucass"	nil	(((l uu) 1) ((k @ s) 0) ((@ z) 0)))	;; unique
("lucks"	nil	(((l uh k s) 1)))	;; unique
("lucys"	nil	(((l uu) 1) ((s ii z) 0)))	;; unique
("lugging"	nil	(((l uh g )1)((i ng )0)))	;; ing
("lullabying"	nil	(((l uh )1)((l @ )0)((b ai )1)((i ng )0)))	;; ing
("lulling"	nil	(((l uh l )1)((i ng )0)))	;; ing
("lumbering"	nil	(((l uh m )1)((b @ r )0)((i ng )0)))	;; ing
("lumbermens"	nil	(((l uh m) 1) ((b @) 0) ((m @ n z) 0)))	;; unique
("lumping"	nil	(((l uh m p )1)((i ng )0)))	;; ing
("lunching"	nil	(((l uh n ch )1)((i ng )0)))	;; ing
("lungeing"	nil	(((l uh n jh )1)((i ng )0)))	;; ing
("lunging"	nil	(((l uh n jh )1)((i ng )0)))	;; ing
("lurching"	nil	(((l @@r ch )1)((i ng )0)))	;; ing
("luring"	nil	(((l ur r )1)((i ng )0)))	;; ing
("lurking"	nil	(((l @@r k )1)((i ng )0)))	;; ing
("lustering"	nil	(((l uh )1)((s t @ r )0)((i ng )0)))	;; ing
("lustring"	nil	(((l uh )1)((s t @ r )0)((i ng )0)))	;; ing
("luthers"	nil	(((l uu) 1) ((th @ z) 0)))	;; unique
("luting"	nil	(((l uu t^ )1)((i ng )0)))	;; ing
("luxembourgs"	nil	(((l uh k) 1) ((s m!) 0) ((b @@r g z) 1)))	;; unique
("luxuriating"	nil	(((l uh g )0)((zh ur )1)((r iy )0)((ei t^ )1)((i ng )0)))	;; ing
("lying"	nil	(((l ai )1)((i ng )0)))	;; ing
("lymeswold"	nil	(((l ai m z) 1) ((w o l d) 0)))	;; oul
("lynching"	nil	(((l i n ch )1)((i ng )0)))	;; ing
("lyricising"	nil	(((l i )1)((r i s )0)((ai z )1)((i ng )0)))	;; ing
("lyricizing"	nil	(((l i )1)((r i s )0)((ai z )1)((i ng )0)))	;; ing
("maam"	nil	(((m aa m) 1)))	;; unique
("macadamising"	nil	(((m @ )0)((k a )1)((d @ m )0)((ai z )1)((i ng )0)))	;; ing
("macadamizing"	nil	(((m @ )0)((k a )1)((d @ m )0)((ai z )1)((i ng )0)))	;; ing
("maceys"	nil	(((m ei) 1) ((s ii z) 0)))	;; unique
("machinerys"	nil	(((m @) 0) ((sh ii n) 1) ((@) 0) ((r ii z) 0)))	;; unique
("machining"	nil	(((m @ )0)((sh ii n )1)((i ng )0)))	;; ing
("machs"	nil	(((m a k s) 1)))	;; unique
("macing"	nil	(((m ei s )1)((i ng )0)))	;; ing
("macintoshs"	nil	(((m a) 1) ((k i n) 0) ((t o sh) 1) ((@ z) 0)))	;; unique
("mackintoshs"	nil	(((m a) 1) ((k i n) 0) ((t o sh) 1) ((@ z) 0)))	;; unique
("macroing"	nil	(((m a )1)((k r ou )0)((i ng )0)))	;; ing
("macrolevel"	nil	(((m a) 1) ((k r o) 0) ((l e) 1) ((v l!) 0)))	;; oul
("macroprocessing"	nil	(((m a )1)((k r ou )0)((p r ou )1)((s e s )0)((i ng )0)))	;; ing
("macusers"	nil	(((m a k) 1) ((y uu z) 1) ((@ z) 0)))	;; unique
("macys"	nil	(((m ei) 1) ((s ii z) 0)))	;; unique
("madagascars"	nil	(((m a) 1) ((d @) 0) ((g a) 1) ((s k @ z) 0)))	;; unique
("maddening"	nil	(((m a d )1)((n! )0)((i ng )0)))	;; ing
("madding"	nil	(((m a d )1)((i ng )0)))	;; ing
("madisons"	nil	(((m a) 1) ((d @) 0) ((s n! z) 0)))	;; unique
("madling"	nil	(((m a d )1)((l i ng )0)))	;; ing
("madmans"	nil	(((m a d) 1) ((m @ n z) 0)))	;; unique
("maeroero"	nil	(((m aa) 1) ((e) 0) ((r ou) 0) ((e) 0) ((r ou) 0)))	;; unique
("magicking"	nil	(((m a )1)((jh i k )0)((i ng )0)))	;; ing
("magnas"	nil	(((m a g) 1) ((n @ z) 0)))	;; unique
("magnetising"	nil	(((m a g )1)((n @ t )0)((ai z )1)((i ng )0)))	;; ing
("magnetizing"	nil	(((m a g )1)((n @ t )0)((ai z )1)((i ng )0)))	;; ing
("magnificent-looking"	nil	(((m a g )0)((n i )1)((f i )0)((s n! t )0)((l u k )1)((i ng )0)))	;; ing
("magnifying"	nil	(((m a g )1)((n @ )0)((f ai )1)((i ng )0)))	;; ing
("magnolia"	nil	(((m a g) 0) ((n o) 1) ((l y @) 0)))	;; oul
("magnolias"	nil	(((m a g) 0) ((n o) 1) ((l y @ z) 0)))	;; oul
("mahi"	nil	(((m aa) 1) ((h ii) 0)))	;; unique
("mahoe"	nil	(((m aa) 0) ((h ou) 1) ((ii) 0)))	;; unique
("mahue"	nil	(((m aa) 1) ((h uu) 0) ((ii) 0)))	;; unique
("mahuta"	nil	(((m @) 0) ((h uu) 1) ((t^ @) 0)))	;; unique
("mai"	nil	(((m ai) 1)))	;; unique
("maihi"	nil	(((m ai) 1) ((h ii) 0)))	;; unique
("maika"	nil	(((m ai) 1) ((k @) 0)))	;; unique
("maikaika"	nil	(((m ai) 1) ((k ai) 0) ((k @) 0)))	;; unique
("mailbombing"	nil	(((m ei l )1)((b o m )1)((i ng )0)))	;; ing
("mailfolder"	nil	(((m ei l) 1) ((f o l d) 1) ((@) 0)))	;; oul
("mailfolders"	nil	(((m ei l) 1) ((f o l d) 1) ((@ z) 0)))	;; oul
("mailing"	nil	(((m ei l )1)((i ng )0)))	;; ing
("mailspool"	nil	(((m ei l) 1) ((s p u l) 0)))	;; uul
("mailspools"	nil	(((m ei l) 1) ((s p u l z) 0)))	;; uul
("maiming"	nil	(((m ei m )1)((i ng )0)))	;; ing
("maines"	nil	(((m ei n z) 1)))	;; unique
("mainstreaming"	nil	(((m ei n )1)((s t r ii m )1)((i ng )0)))	;; ing
("maintaining"	nil	(((m ei n )0)((t ei n )1)((i ng )0)))	;; ing
("mainwaring"	nil	(((m a )1)((n @ )0)((r i ng )0)))	;; ing
("maire"	nil	(((m ai) 1) ((r ei) 0)))	;; unique
("mairehau"	nil	(((m ai) 1) ((r e) 0) ((h ow) 0)))	;; unique
("majestys"	nil	(((m a) 1) ((jh @) 0) ((s t ii z) 0)))	;; unique
("majoring"	nil	(((m ei )1)((jh @ r )0)((i ng )0)))	;; ing
("majoritys"	nil	(((m @) 0) ((jh o r) 1) ((@) 0) ((t^ ii z) 0)))	;; unique
("makaka"	nil	(((m aa) 1) ((k aa) 0) ((k @) 0)))	;; unique
("makamaka"	nil	(((m aa) 1) ((k aa) 0) ((m aa) 0) ((k @) 0)))	;; unique
("makariri"	nil	(((m aa) 1) ((k aa) 0) ((r i) 0) ((r ii ) 1)))	;; unique
("making"	nil	(((m ei k )1)((i ng )0)))	;; ing
("mako"	nil	(((m aa) 1) ((k ou) 0)))	;; unique
("makomako"	nil	(((m aa) 1) ((k ou) 0) ((m aa) 0) ((k ou) 0)))	;; unique
("makutu"	nil	(((m aa) 1) ((k uu) 0) ((t uu) 0)))	;; unique
("malarias"	nil	(((m @) 0) ((l ir) 1) ((r ii @ z) 0)))	;; unique
("malawis"	nil	(((m @) 0) ((l aa) 1) ((w ii z) 0)))	;; unique
("malaysias"	nil	(((m @) 0) ((l ei) 1) ((zh @ z) 0)))	;; unique
("malfunctioning"	nil	(((m a l )1)((f uh ng k )1)((sh n! )0)((i ng )0)))	;; ing
("maligning"	nil	(((m @ )0)((l ai n )1)((i ng )0)))	;; ing
("malingering"	nil	(((m @ )0)((l i ng )1)((g @ r )0)((i ng )0)))	;; ing
("maltas"	nil	(((m oo l) 1) ((t @ z) 0)))	;; unique
("malting"	nil	(((m oo l t )1)((i ng )0)))	;; ing
("maltreating"	nil	(((m a l )0)((t r ii t^ )1)((i ng )0)))	;; ing
("malvolio"	nil	(((m a l) 0) ((v o) 1) ((l ii) 0) ((ou) 0)))	;; oul
("mamaku"	nil	(((m aa) 1) ((m aa) 0) ((k uu) 0)))	;; unique
("mamangi"	nil	(((m aa) 1) ((m uh ng) 0) ((ii) 0)))	;; unique
("man-o-war"	nil	(((m a n) 1) ((@) 0) ((w oo) 1)))	;; unique
("mana"	nil	(((m aa) 1) ((n @) 0))) 	;; maori
("manaakitanga"	nil	(((m a) 1) ((n aa) 0) ((aa) 0) ((k ii) 0) ((t uh ng) 1) ((@) 0)))	;; unique
("managing"	nil	(((m a )1)((n @ jh )0)((i ng )0)))	;; ing
("managuas"	nil	(((m @) 0) ((n a) 1) ((g w @ z) 0)))	;; unique
("manaia"	nil	(((m aa) 1) ((n ai) 1) ((@) 0)))	;; unique
("manamoana"	nil	(((m a) 1) ((n aa) 0) ((m ou) 0) ((a) 1) ((n @) 0)))	;; unique
("manatu"	nil	(((m aa) 0) ((n aa) 0) ((t uu) 1)))	;; unique
("manawa"	nil	(((m aa) 1) ((n aa) 0) ((w @) 0)))	;; unique
("mandating"	nil	(((m a n )1)((d ei t^ )0)((i ng )0)))	;; ing
("mandelas"	nil	(((m a n) 0) ((d a) 1) ((l @ z) 0)))	;; unique
("manets"	nil	(((m a) 1) ((n ei z) 0)))	;; unique
("maneuvering"	nil	(((m @ )0)((n uu )1)((v @ r )0)((i ng )0)))	;; ing
("mangai"	nil	(((m uh ng) 1) ((ai) 0)))	;; unique
("mangeao"	nil	(((m uh ng) 0) ((e) 1) ((ow) 0)))	;; unique
("mangemange"	nil	(((m uh ng) 1) ((e) 0) ((m uh ng) 0) ((ei) 0)))	;; unique
("mangere"	nil	(((m uh ng) 1) ((@) 0) ((r ii) 0)))	;; unique
("mangling"	nil	(((m a ng )1)((g l! )0)((i ng )0)))	;; ing
("mango"	nil	(((m uh ng) 1) ((ou) 0))) 	;; maori
("mangopare"	nil	(((m uh ng) 1) ((ou) 0) ((p aa) 1) ((r ei) 0)))	;; unique
("manhandling"	nil	(((m a n )1)((h a n )1)((d l! )0)((i ng )0)))	;; ing
("manhole"	nil	(((m a n) 1) ((h o l) 0)))	;; oul
("manholes"	nil	(((m a n) 1) ((h o l z) 0)))	;; oul
("manhunting"	nil	(((m a n )1)((h uh n t )1)((i ng )0)))	;; ing
("manicuring"	nil	(((m a )1)((n @ )0)((k y ur r )1)((i ng )0)))	;; ing
("manifesting"	nil	(((m a )1)((n @ )0)((f e s t )1)((i ng )0)))	;; ing
("manifold"	nil	(((m a) 1) ((n @) 0) ((f o l d) 0)))	;; oul
("manifolding"	nil	(((m a) 1) ((n @) 0) ((f o l d) 1) ((i ng) 0)))	;; oul
("manifoldly"	nil	(((m a) 1) ((n @) 0) ((f o l d) 1) ((l ii) 0)))	;; oul
("manifolds"	nil	(((m a) 1) ((n @) 0) ((f o l d z) 0)))	;; oul
("manipulating"	nil	(((m @ )0)((n i )1)((p y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("mankinds"	nil	(((m a n) 0) ((k ai n d z) 1)))	;; unique
("manning"	nil	(((m a )1)((n i ng )0)))	;; ing
("manns"	nil	(((m a n z) 1)))	;; unique
("manoao"	nil	(((m uh) 1) ((n @) 0) ((w aa) 0) ((u) 0)))	;; unique
("manoeuvring"	nil	(((m @ )0)((n uu )1)((v @ r )0)((i ng )0)))	;; ing
("manono"	nil	(((m aa) 1) ((n oo) 0) ((n oo) 0)))	;; unique
("manpowers"	nil	(((m a n) 1) ((p ow @ z) 0)))	;; unique
("mantling"	nil	(((m a n )1)((t l! )0)((i ng )0)))	;; ing
("manufacturing"	nil	(((m a )1)((n y uw )0)((f a k )1)((ch @ r )0)((i ng )0)))	;; ing
("manuhiri"	nil	(((m aa) 1) ((n uu) 0) ((h ii) 0) ((r ii) 0)))	;; unique
("manuka"	nil	(((m @) 0) ((n uu) 1) ((k @) 0)))	;; unique
("manuka-rauriki"	nil	(((m a) 0) ((n uu) 1) ((k aa) 0) ((r ow) 0) ((r ii) 1) ((k ii) 0)))	;; unique
("manuring"	nil	(((m @ )0)((n y ur r )1)((i ng )0)))	;; ing
("maomao"	nil	(((m aa) 1) ((oo) 0) ((m ow) 0)))	;; unique
("maori"	nil	(((m ow) 1) ((r ii) 0))) 	;; maori
("maoritanga"	nil	(((m aa) 1) ((u) 0) ((r ii) 0) ((t uh ng) 0) ((@) 0)))	;; unique
("mapau"	nil	(((m aa) 1) ((p aa) 0) ((u) 0)))	;; unique
("mapping"	nil	(((m a p )1)((i ng )0)))	;; ing
("marae"	nil	(((m uh) 0) ((r ai) 1)))	;; unique
("maramatanga"	nil	(((m aa) 0) ((r aa) 0) ((m aa) 0) ((t uh ng) 1) ((@) 0)))	;; unique
("marari"	nil	(((m aa) 0) ((r aa) 0) ((r ii) 1)))	;; unique
("marauding"	nil	(((m @ )0)((r oo d )1)((i ng )0)))	;; ing
("marbling"	nil	(((m aa )1)((b l! )0)((i ng )0)))	;; ing
("marching"	nil	(((m aa ch )1)((i ng )0)))	;; ing
("marconis"	nil	(((m aa) 0) ((k ou) 1) ((n ii z) 0)))	;; unique
("marcs"	nil	(((m aa k s) 1)))	;; unique
("marevan"	nil	(((m a) 1) ((r @) 0) ((v a n) 1)))	;; unique
("margarets"	nil	(((m aa) 1) ((g @) 0) ((r @ t s) 0)))	;; unique
("marginalising"	nil	(((m aa )1)((jh @ n )0)((l! )0)((ai z )1)((i ng )0)))	;; ing
("marginalizing"	nil	(((m aa )1)((jh @ n )0)((l! )0)((ai z )1)((i ng )0)))	;; ing
("marians"	nil	(((m a) 1) ((r ii @ n z) 0)))	;; unique
("mariettas"	nil	(((m a) 1) ((r ii) 0) ((e) 1) ((t^ @ z) 0)))	;; unique
("marigold"	nil	(((m a) 1) ((r @) 0) ((g o l d) 1)))	;; oul
("marigolds"	nil	(((m a) 1) ((r @) 0) ((g o l d z) 1)))	;; oul
("marinading"	nil	(((m a )1)((r @ )0)((n ei d )1)((i ng )0)))	;; ing
("marinating"	nil	(((m a )1)((r @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("marinos"	nil	(((m @) 0) ((r ii) 1) ((n ou z) 0)))	;; unique
("marire"	nil	(((m aa) 1) ((r ii) 0) ((r ei) 0)))	;; unique
("marketeering"	nil	(((m aa )1)((k @ t )0)((ir r )1)((i ng )0)))	;; ing
("marketing"	nil	(((m aa )1)((k @ t^ )0)((i ng )0)))	;; ing
("marketings"	nil	(((m aa) 1) ((k @ t^) 0) ((i ng z) 0)))	;; unique
("marking"	nil	(((m aa k )1)((i ng )0)))	;; ing
("marksmans"	nil	(((m aa k s) 1) ((m @ n z) 0)))	;; unique
("marksmens"	nil	(((m aa k s) 1) ((m @ n z) 0)))	;; unique
("maro"	nil	(((m aa) 1) ((r ou) 0)))	;; unique
("marooning"	nil	(((m @ )0)((r uu n )1)((i ng )0)))	;; ing
("maroro"	nil	(((m aa) 1) ((r ou) 0) ((r ou) 0)))	;; unique
("marqueeing"	nil	(((m aa )0)((k ii )1)((i ng )0)))	;; ing
("marring"	nil	(((m aa r )1)((i ng )0)))	;; ing
("marrying"	nil	(((m a )1)((r iy )0)((i ng )0)))	;; ing
("marshalling"	nil	(((m aa )1)((sh l! )0)((i ng )0)))	;; ing
("marss"	nil	(((m aa z) 1) ((@ z) 0)))	;; unique
("martialling"	nil	(((m aa )1)((sh l! )0)((i ng )0)))	;; ing
("martyring"	nil	(((m aa )1)((t^ @ r )0)((i ng )0)))	;; ing
("maru"	nil	(((m aa) 1) ((r uu) 0)))	;; unique
("marveling"	nil	(((m aa )1)((v l! )0)((i ng )0)))	;; ing
("marvelling"	nil	(((m aa )1)((v l! )0)((i ng )0)))	;; ing
("marxs"	nil	(((m aa k s) 1) ((@ z) 0)))	;; unique
("mas"	nil	(((m aa z) 1)))	;; unique
("mashing"	nil	(((m a sh )1)((i ng )0)))	;; ing
("masking"	nil	(((m aa s k )1)((i ng )0)))	;; ing
("masonrys"	nil	(((m ei) 1) ((s n!) 0) ((r ii z) 0)))	;; unique
("masquerading"	nil	(((m a )1)((s k @ )0)((r ei d )1)((i ng )0)))	;; ing
("mass-producing"	nil	(((m a s )1)((p r @ )0)((d y uu s )1)((i ng )0)))	;; ing
("massacring"	nil	(((m a )1)((s @ )0)((k @ r )0)((i ng )0)))	;; ing
("massaging"	nil	(((m a )1)((s aa zh )0)((i ng )0)))	;; ing
("massing"	nil	(((m a s )1)((i ng )0)))	;; ing
("mastering"	nil	(((m aa )1)((s t @ r )0)((i ng )0)))	;; ing
("masterminding"	nil	(((m aa )1)((s t @ )0)((m ai n d )1)((i ng )0)))	;; ing
("masticating"	nil	(((m a )1)((s t @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("masturbating"	nil	(((m a )1)((s t @ )0)((b ei t^ )1)((i ng )0)))	;; ing
("matai"	nil	(((m aa) 1) ((t ai) 0)))	;; unique
("mataitai"	nil	(((m aa) 0) ((t ai) 1) ((t ai) 0)))	;; unique
("matakite"	nil	(((m aa) 1) ((t aa) 0) ((k ii) 0) ((t ei) 0)))	;; unique
("matariki"	nil	(((m aa) 0) ((t aa) 0) ((r ii) 1) ((k ii) 0)))	;; unique
("matata"	nil	(((m aa) 1) ((t aa) 0) ((t^ @) 0)))	;; unique
("matauranga"	nil	(((m aa) 0) ((t ow) 0) ((r uh ng) 1) ((@) 0)))	;; unique
("match-making"	nil	(((m a ch )1)((m ei k )1)((i ng )0)))	;; ing
("matching"	nil	(((m a ch )1)((i ng )0)))	;; ing
("matchmaking"	nil	(((m a ch )1)((m ei k )1)((i ng )0)))	;; ing
("materializing"	nil	(((m @ )0)((t ir )1)((r iy @ l )0)((ai z )1)((i ng )0)))	;; ing
("mating"	nil	(((m ei t^ )1)((i ng )0)))	;; ing
("matipo"	nil	(((m a) 1) ((t i) 0) ((p ou) 0)))	;; unique
("matriculating"	nil	(((m @ )0)((t r i )1)((k y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("matting"	nil	(((m a t^ )1)((i ng )0)))	;; ing
("matua"	nil	(((m aa) 1) ((t uu) 0) ((@) 0)))	;; unique
("matuawhapuku"	nil	(((m aa) 1) ((t uu) 0) ((aa) 0) ((f aa) 1) ((p uu) 0) ((k uu) 0)))	;; unique
("matuhi"	nil	(((m aa) 1) ((t uu) 0) ((h ii) 0)))	;; unique
("matuku"	nil	(((m aa) 1) ((t uu) 0) ((k uu) 0)))	;; unique
("matuku-hurepo"	nil	(((m aa) 1) ((t uu) 0) ((k uu) 0) ((h uu) 1) ((r e) 0) ((p oo) 0)))	;; unique
("matuku-moana"	nil	(((m aa) 1) ((t uu) 0) ((k uu) 0) ((m oo) 1) ((aa) 0) ((n @) 0)))	;; unique
("maturating"	nil	(((m a )1)((ch uw )0)((r ei t^ )1)((i ng )0)))	;; ing
("maturing"	nil	(((m @ )0)((ch ur r )1)((i ng )0)))	;; ing
("mau"	nil	(((m ow) 1)))	;; unique
("mauku"	nil	(((m ow) 1) ((k uu) 0)))	;; unique
("mauling"	nil	(((m oo l )1)((i ng )0)))	;; ing
("maundering"	nil	(((m oo n )1)((d @ r )0)((i ng )0)))	;; ing
("maunga"	nil	(((m ow ng) 1) ((@) 0)))	;; unique
("mauri"	nil	(((m ow) 1) ((r ii) 0)))	;; unique
("mauritanias"	nil	(((m o) 1) ((r i) 0) ((t ei) 1) ((n ii @ z) 0)))	;; unique
("mawhai"	nil	(((m aa) 1) ((f ai) 0)))	;; unique
("mawhera"	nil	(((m aa) 1) ((f e) 0) ((r @) 0)))	;; unique
("mawhero"	nil	(((m aa) 1) ((f e) 0) ((r ou) 0)))	;; unique
("mawsons"	nil	(((m oo) 1) ((s n! z) 0)))	;; unique
("maximising"	nil	(((m a k )1)((s @ )0)((m ai z )1)((i ng )0)))	;; ing
("maximizing"	nil	(((m a k )1)((s @ )0)((m ai z )1)((i ng )0)))	;; ing
("maxs"	nil	(((m a k s) 1) ((@ z) 0)))	;; unique
("maynards"	nil	(((m ei) 1) ((n aa d z) 0)))	;; unique
("maynt"	nil	(((m ei @ n t) 1)))	;; unique
("maypole"	nil	(((m ei) 1) ((p o l) 0)))	;; oul
("maypoles"	nil	(((m ei) 1) ((p o l z) 0)))	;; oul
("mccabes"	nil	(((m @) 0) ((k ei b z) 1)))	;; unique
("mccaws"	nil	(((m @) 0) ((k oo z) 1)))	;; unique
("mccole"	nil	(((m @) 0) ((k o l) 1)))	;; oul
("mccullochs"	nil	(((m @) 0) ((k uh) 1) ((l @ k s) 0)))	;; unique
("mcdermotts"	nil	(((m @ k) 0) ((d @@r) 1) ((m @ t s) 0)))	;; unique
("mcdowells"	nil	(((m @ k) 0) ((d ow @ l z) 1)))	;; unique
("mcgregors"	nil	(((m @) 0) ((g r e) 1) ((g @ z) 0)))	;; unique
("mcgrews"	nil	(((m @) 0) ((g r uu z) 1)))	;; unique
("mcguires"	nil	(((m @) 0) ((g w ai @ z) 1)))	;; unique
("mcmullens"	nil	(((m @ k) 0) ((m uh) 1) ((l @ n z) 0)))	;; unique
("mcnallys"	nil	(((m @ k) 0) ((n a) 1) ((l ii z) 0)))	;; unique
("mcphersons"	nil	(((m @ k) 0) ((f @@r) 1) ((s n! z) 0)))	;; unique
("mea"	nil	(((m e) 1) ((@) 0)))	;; unique
("meandering"	nil	(((m iy )0)((a n )1)((d @ r )0)((i ng )0)))	;; ing
("meaning"	nil	(((m ii n )1)((i ng )0)))	;; ing
("measuring"	nil	(((m e )1)((zh r )0)((i ng )0)))	;; ing
("meatpacking"	nil	(((m ii t )1)((p a k )1)((i ng )0)))	;; ing
("mechanizing"	nil	(((m e )1)((k @ )0)((n ai z )1)((i ng )0)))	;; ing
("meddling"	nil	(((m e )1)((d l! )0)((i ng )0)))	;; ing
("mediating"	nil	(((m ii )1)((d iy )0)((ei t^ )1)((i ng )0)))	;; ing
("medicating"	nil	(((m e )1)((d @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("meditating"	nil	(((m e )1)((d @ )0)((t ei t^ )1)((i ng )0)))	;; ing
("meeting"	nil	(((m ii t^ )1)((i ng )0)))	;; ing
("megajoule"	nil	(((m e) 1) ((g @) 0) ((jh u l) 1)))	;; uul
("megajoules"	nil	(((m e) 1) ((g @) 0) ((jh u l z) 1)))	;; uul
("megavolt"	nil	(((m e) 1) ((g @) 0) ((v o l t) 1)))	;; oul
("megavolts"	nil	(((m e) 1) ((g @) 0) ((v o l t s) 1)))	;; oul
("melancholia"	nil	(((m a) 1) ((l @ ng) 0) ((k o) 1) ((l ii @) 0)))	;; oul
("melindas"	nil	(((m @) 0) ((l i n) 1) ((d @ z) 0)))	;; unique
("meliorating"	nil	(((m ii )1)((l iy @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("melling"	nil	(((m a )1)((l i ng )0)))	;; ing
("mellowing"	nil	(((m a )1)((l ou )0)((i ng )0)))	;; ing
("melting"	nil	(((m a l t )1)((i ng )0)))	;; ing
("melvilles"	nil	(((m a l) 1) ((v i l z) 0)))	;; unique
("membering"	nil	(((m e m )1)((b @ r )0)((i ng )0)))	;; ing
("memoing"	nil	(((m e )1)((m ou )0)((i ng )0)))	;; ing
("memorializing"	nil	(((m @ )0)((m oo )1)((r iy @ l )0)((ai z )1)((i ng )0)))	;; ing
("memorising"	nil	(((m e )1)((m @ )0)((r ai z )1)((i ng )0)))	;; ing
("memorizing"	nil	(((m e )1)((m @ )0)((r ai z )1)((i ng )0)))	;; ing
("memorys"	nil	(((m e) 1) ((m @) 0) ((r ii z) 0)))	;; unique
("men-o-war"	nil	(((m e n) 1) ((@) 0) ((w oo) 1)))	;; unique
("menacing"	nil	(((m e )1)((n @ s )0)((i ng )0)))	;; ing
("mendels"	nil	(((m e n) 1) ((d l! z) 0)))	;; unique
("mendelssohns"	nil	(((m e n) 1) ((d l!) 0) ((s n! z) 0)))	;; unique
("mending"	nil	(((m e n d )1)((i ng )0)))	;; ing
("mens"	nil	(((m e n z) 1)))	;; unique
("menstruating"	nil	(((m e n )1)((s t r uw )0)((ei t^ )1)((i ng )0)))	;; ing
("mentioning"	nil	(((m e n )1)((sh n! )0)((i ng )0)))	;; ing
("mentoring"	nil	(((m e n )1)((t @ r )0)((i ng )0)))	;; ing
("menuing"	nil	(((m e )1)((n y uw )0)((i ng )0)))	;; ing
("meowing"	nil	(((m iy )0)((ow )1)((i ng )0)))	;; ing
("mercators"	nil	(((m @@r) 0) ((k ei) 1) ((t^ @ z) 0)))	;; unique
("mercenarys"	nil	(((m @@r) 1) ((s @) 0) ((n @) 0) ((r ii z) 0)))	;; unique
("mercerizing"	nil	(((m @@r )1)((s @ r )0)((ai z )1)((i ng )0)))	;; ing
("mercers"	nil	(((m @@r) 1) ((s @ z) 0)))	;; unique
("merchandisers"	nil	(((m @@r) 1) ((ch @ n) 0) ((d ai z) 1) ((@ z) 0)))	;; unique
("merchandising"	nil	(((m @@r )1)((ch @ n )0)((d ai z )1)((i ng )0)))	;; ing
("merchandizing"	nil	(((m @@r )1)((ch @ n )0)((d ai z )1)((i ng )0)))	;; ing
("merchanting"	nil	(((m @@r )1)((ch @ n t )0)((i ng )0)))	;; ing
("mercurys"	nil	(((m @@r) 1) ((k y uw) 0) ((r ii z) 0)))	;; unique
("mercys"	nil	(((m @@r) 1) ((s ii z) 0)))	;; unique
("mere"	nil	(((m e) 1) ((r ii) 0))) 	;; maori
("merging"	nil	(((m @@r jh )1)((i ng )0)))	;; ing
("meriting"	nil	(((m e )1)((r @ t^ )0)((i ng )0)))	;; ing
("merlins"	nil	(((m @@r) 1) ((l i n z) 0)))	;; unique
("merrymaking"	nil	(((m e )1)((r iy )0)((m ei k )1)((i ng )0)))	;; ing
("mertons"	nil	(((m @@r) 1) ((t n! z) 0)))	;; unique
("meshing"	nil	(((m e sh )1)((i ng )0)))	;; ing
("mesmerising"	nil	(((m e z )1)((m @ )0)((r ai z )1)((i ng )0)))	;; ing
("mesmerizing"	nil	(((m e z )1)((m @ )0)((r ai z )1)((i ng )0)))	;; ing
("messaging"	nil	(((m e )1)((s @ jh )0)((i ng )0)))	;; ing
("messing"	nil	(((m e s )1)((i ng )0)))	;; ing
("metalling"	nil	(((m e )1)((t l! )0)((i ng )0)))	;; ing
("metalworking"	nil	(((m e )1)((t l! )0)((w @@r k )1)((i ng )0)))	;; ing
("metamorphosing"	nil	(((m e )1)((t^ @ )0)((m oo )1)((f ou z )0)((i ng )0)))	;; ing
("metering"	nil	(((m ii )1)((t^ @ r )0)((i ng )0)))	;; ing
("methodizing"	nil	(((m e )1)((th @ d )0)((ai z )1)((i ng )0)))	;; ing
("methodologys"	nil	(((m e) 1) ((th @ d) 0) ((o) 1) ((l @) 0) ((jh ii z) 0)))	;; unique
("meting"	nil	(((m e t^ )1)((i ng )0)))	;; ing
("metoprolol"	nil	(((m @) 0) ((t r o) 1) ((p @) 0) ((l o l) 1)))	;; unique
("metricising"	nil	(((m e )1)((t r @ s )0)((ai z )1)((i ng )0)))	;; ing
("metricizing"	nil	(((m e )1)((t r @ s )0)((ai z )1)((i ng )0)))	;; ing
("metropole"	nil	(((m e) 1) ((t r @) 0) ((p o l) 0)))	;; oul
("mewing"	nil	(((m y uu )1)((i ng )0)))	;; ing
("mewling"	nil	(((m y uu l )1)((i ng )0)))	;; ing
("mexicos"	nil	(((m e k) 1) ((s i) 0) ((k ou z) 0)))	;; unique
("miaowing"	nil	(((m iy )0)((ow )1)((i ng )0)))	;; ing
("michaels"	nil	(((m ai) 1) ((k l! z) 0)))	;; unique
("michelins"	nil	(((m i) 1) ((ch @) 0) ((l i n z) 1)))	;; unique
("mickeys"	nil	(((m i) 1) ((k ii z) 0)))	;; unique
("micks"	nil	(((m i k s) 1)))	;; unique
("microcoding"	nil	(((m ai )1)((k r ou )0)((k ou d )1)((i ng )0)))	;; ing
("microcomputing"	nil	(((m ai )1)((k r ou )0)((k @ m )0)((p y uu t^ )1)((i ng )0)))	;; ing
("microcontroller"	nil	(((m ai) 1) ((k r ou) 0) ((k @ n) 0) ((t r o l) 1) ((@) 0)))	;; oul
("microcontrollers"	nil	(((m ai) 1) ((k r ou) 0) ((k @ n) 0) ((t r o l) 1) ((@ z) 0)))	;; oul
("microcracking"	nil	(((m ai )1)((k r ou )0)((k r a k )1)((i ng )0)))	;; ing
("microfilming"	nil	(((m ai )1)((k r @ )0)((f i l m )1)((i ng )0)))	;; ing
("microfunds"	nil	(((m ai) 1) ((k r ou) 0) ((f uh n d z) 1)))	;; unique
("microjoule"	nil	(((m ai) 1) ((k r ou) 0) ((jh u l) 1)))	;; uul
("microjoules"	nil	(((m ai) 1) ((k r ou) 0) ((jh u l z) 1)))	;; uul
("microland"	nil	(((m ai) 1) ((k r o) 0) ((l a n d) 1)))	;; oul
("microlanders"	nil	(((m ai) 1) ((k r o) 0) ((l a n d) 1) ((@ z) 0)))	;; oul
("microlaser"	nil	(((m ai) 1) ((k r o) 0) ((l ei) 1) ((z @) 0)))	;; oul
("microlasers"	nil	(((m ai) 1) ((k r o) 0) ((l ei) 1) ((z @ z) 0)))	;; oul
("microlevel"	nil	(((m ai) 1) ((k r o) 0) ((l e) 1) ((v l!) 0)))	;; oul
("microline"	nil	(((m ai) 1) ((k r o) 0) ((l ai n) 1)))	;; oul
("microlinear"	nil	(((m ai) 1) ((k r o) 0) ((l i) 1) ((n ii @) 0)))	;; oul
("microlines"	nil	(((m ai) 1) ((k r o) 0) ((l ai n z) 1)))	;; oul
("microlithography"	nil	(((m ai) 1) ((k r o) 0) ((l i) 0) ((th o) 1) ((g r @) 0) ((f ii) 0)))	;; oul
("microlitre"	nil	(((m ai) 1) ((k r o) 0) ((l ii) 1) ((t^ @) 0)))	;; oul
("microlitres"	nil	(((m ai) 1) ((k r o) 0) ((l ii) 1) ((t^ @ z) 0)))	;; oul
("micromachining"	nil	(((m ai )1)((k r ou )0)((m @ )0)((sh ii n )1)((i ng )0)))	;; ing
("micromanaging"	nil	(((m ai )1)((k r ou )0)((m a )1)((n @ jh )0)((i ng )0)))	;; ing
("micronesias"	nil	(((m ai) 1) ((k r @) 0) ((n ii) 1) ((z ii @ z) 0)))	;; unique
("microplanning"	nil	(((m ai )1)((k r ou )0)((p l a n )1)((i ng )0)))	;; ing
("microprocessing"	nil	(((m ai )1)((k r ou )0)((p r ou )1)((s e s )0)((i ng )0)))	;; ing
("microsystemss"	nil	(((m ai) 1) ((k r ou) 0) ((s i) 1) ((s t @ m z) 0) ((@ z) 0)))	;; unique
("microvolt"	nil	(((m ai) 1) ((k r ou) 0) ((v o l t) 1)))	;; oul
("microvolts"	nil	(((m ai) 1) ((k r ou) 0) ((v o l t s) 1)))	;; oul
("microwaving"	nil	(((m ai )1)((k r @ )0)((w ei v )1)((i ng )0)))	;; ing
("microzoning"	nil	(((m ai )1)((k r ou )0)((z ou n )1)((i ng )0)))	;; ing
("mid-morning"	nil	(((m i d )1)((m oo )1)((n i ng )0)))	;; ing
("middle-ranking"	nil	(((m i )1)((d l! )0)((r a ng k )1)((i ng )0)))	;; ing
("middletons"	nil	(((m i) 1) ((d l!) 0) ((t @ n z) 0)))	;; unique
("middling"	nil	(((m i )1)((d l! )0)((i ng )0)))	;; ing
("midis"	nil	(((m i) 1) ((d ii z) 0)))	;; unique
("midmorning"	nil	(((m i d )1)((m oo )1)((n i ng )0)))	;; ing
("midwests"	nil	(((m i d) 0) ((w e s t s) 1)))	;; unique
("mightn't"	nil	(((m ai t) 1) ((n! t) 0)))	;; contraction
("mightve"	nil	(((m ai t^) 1) ((@ v) 0)))	;; unique
("migrating"	nil	(((m ai )0)((g r ei t^ )1)((i ng )0)))	;; ing
("miha"	nil	(((m ii) 1) ((h aa) 0)))	;; unique
("mihanere"	nil	(((m ii) 1) ((h aa) 0) ((n e) 0) ((r ei) 0)))	;; unique
("mihi"	nil	(((m ii) 1) ((h ii) 0)))	;; unique
("miki-miki"	nil	(((m ii) 1) ((k ii) 0) ((m ii) 0) ((k ii) 0)))	;; unique
("mikoikoi"	nil	(((m ii) 0) ((k oo) 1) ((ii) 0) ((k oo) 0) ((ii) 0)))	;; unique
("milans"	nil	(((m i) 0) ((l a n z) 1)))	;; unique
("militarys"	nil	(((m i) 1) ((l @) 0) ((t r ii z) 0)))	;; unique
("militating"	nil	(((m i )1)((l @ )0)((t ei t^ )1)((i ng )0)))	;; ing
("milking"	nil	(((m i l k )1)((i ng )0)))	;; ing
("millies"	nil	(((m i) 1) ((l ii z) 0)))	;; unique
("milling"	nil	(((m i l )1)((i ng )0)))	;; ing
("millionfold"	nil	(((m i) 1) ((l y @ n) 0) ((f o l d) 1)))	;; oul
("millivolt"	nil	(((m i) 1) ((l i) 0) ((v o l t) 1)))	;; oul
("millivolts"	nil	(((m i) 1) ((l i) 0) ((v o l t s) 1)))	;; oul
("miltons"	nil	(((m i l) 1) ((t @ n z) 0)))	;; unique
("milwaukees"	nil	(((m i l) 0) ((w oo) 1) ((k ii z) 0)))	;; unique
("mimeographing"	nil	(((m i )1)((m iy @ )0)((g r aa f )1)((i ng )0)))	;; ing
("mimicking"	nil	(((m i )1)((m i k )0)((i ng )0)))	;; ing
("miming"	nil	(((m ai m )1)((i ng )0)))	;; ing
("mincing"	nil	(((m i n s )1)((i ng )0)))	;; ing
("mind-boggling"	nil	(((m ai n d )1)((b o )1)((g l! )0)((i ng )0)))	;; ing
("mindboggling"	nil	(((m ai n d )1)((b o )1)((g l! )0)((i ng )0)))	;; ing
("minding"	nil	(((m ai n d )1)((i ng )0)))	;; ing
("minesweeping"	nil	(((m ai n )1)((s w ii p )1)((i ng )0)))	;; ing
("mingimingi"	nil	(((m ii ng) 1) ((ii) 0) ((m ii ng) 0) ((ii) 0)))	;; unique
("mingling"	nil	(((m i ng )1)((g l! )0)((i ng )0)))	;; ing
("miniaturising"	nil	(((m i )1)((n i )0)((ch @ r )0)((ai z )1)((i ng )0)))	;; ing
("miniaturizing"	nil	(((m i )1)((n i )0)((ch @ r )0)((ai z )1)((i ng )0)))	;; ing
("minimising"	nil	(((m i )1)((n @ )0)((m ai z )1)((i ng )0)))	;; ing
("minimizing"	nil	(((m i )1)((n i )0)((m ai z )1)((i ng )0)))	;; ing
("mining"	nil	(((m ai n )1)((i ng )0)))	;; ing
("ministering"	nil	(((m i )1)((n i )0)((s t @ r )0)((i ng )0)))	;; ing
("ministrys"	nil	(((m i) 1) ((n @) 0) ((s t r ii z) 0)))	;; unique
("minnesotas"	nil	(((m i) 1) ((n i) 0) ((s ou) 1) ((t^ @ z) 0)))	;; unique
("minnies"	nil	(((m i) 1) ((n ii z) 0)))	;; unique
("minoritys"	nil	(((m ai) 0) ((n o r) 1) ((@) 0) ((t^ ii z) 0)))	;; unique
("minting"	nil	(((m i n t )1)((i ng )0)))	;; ing
("miras"	nil	(((m ai) 1) ((r @ z) 0)))	;; unique
("mirimiri"	nil	(((m i) 1) ((r ii) 0) ((m i) 0) ((r ii) 0)))	;; unique
("miring"	nil	(((m ai @ r )1)((i ng )0)))	;; ing
("miro"	nil	(((m i) 1) ((r ou) 0))) 	;; maori
("miromiro"	nil	(((m ii) 1) ((r ou) 0) ((m ii) 0) ((r ou) 0)))	;; unique
("mirroring"	nil	(((m i )1)((r @ r )0)((i ng )0)))	;; ing
("mirtazapine"	nil	(((m @) 0) ((t a) 1) ((z @) 0) ((p ii n) 1)))	;; unique
("misadvising"	nil	(((m i s )1)((@ d )0)((v ai z )1)((i ng )0)))	;; ing
("misapplying"	nil	(((m i s )1)((@ )0)((p l ai )1)((i ng )0)))	;; ing
("misapprehending"	nil	(((m i s )1)((a )0)((p r i )0)((h e n d )1)((i ng )0)))	;; ing
("misappropriating"	nil	(((m i s )1)((@ )0)((p r ou )1)((p r iy )0)((ei t^ )1)((i ng )0)))	;; ing
("misbehaving"	nil	(((m i s )1)((b i )0)((h ei v )1)((i ng )0)))	;; ing
("misbeholden"	nil	(((m i s) 1) ((b i) 0) ((h o l d) 1) ((n!) 0)))	;; oul
("misbelieving"	nil	(((m i s )1)((b @ )0)((l ii v )1)((i ng )0)))	;; ing
("miscalculating"	nil	(((m i s )0)((k a l )1)((k y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("miscarrying"	nil	(((m i s )0)((k a )1)((r iy )0)((i ng )0)))	;; ing
("miscasting"	nil	(((m i s )1)((k aa s t )1)((i ng )0)))	;; ing
("mischanneling"	nil	(((m i s )0)((ch a )1)((n l! )0)((i ng )0)))	;; ing
("mischarging"	nil	(((m i s )0)((ch aa jh )1)((i ng )0)))	;; ing
("misclassifying"	nil	(((m i s )0)((k l a s )1)((i )0)((f ai )1)((i ng )0)))	;; ing
("miscoding"	nil	(((m i s )0)((k ou d )1)((i ng )0)))	;; ing
("miscomputing"	nil	(((m i s )1)((k @ m )0)((p y uu t^ )1)((i ng )0)))	;; ing
("misconceiving"	nil	(((m i s )1)((k @ n )0)((s ii v )1)((i ng )0)))	;; ing
("misconducting"	nil	(((m i s )1)((k @ n )0)((d uh k t )1)((i ng )0)))	;; ing
("misconfiguring"	nil	(((m i s )1)((k @ n )0)((f i )1)((g @ r )0)((i ng )0)))	;; ing
("misconstruing"	nil	(((m i s )1)((k @ n )0)((s t r uu )1)((i ng )0)))	;; ing
("miscopying"	nil	(((m i s )0)((k o )1)((p iy )0)((i ng )0)))	;; ing
("miscounting"	nil	(((m i s )1)((k ow n t )1)((i ng )0)))	;; ing
("misdealing"	nil	(((m i s )1)((d ii l )1)((i ng )0)))	;; ing
("misdescribing"	nil	(((m i s )1)((d i )0)((s k r ai b )1)((i ng )0)))	;; ing
("misdiagnosing"	nil	(((m i s )1)((d ai @ g )0)((n ou z )1)((i ng )0)))	;; ing
("misdirecting"	nil	(((m i s )1)((d ai )0)((r e k t )1)((i ng )0)))	;; ing
("misdocumenting"	nil	(((m i s )0)((d o )1)((k y uw )0)((m e n t )1)((i ng )0)))	;; ing
("misdoing"	nil	(((m i s )0)((d uu )1)((i ng )0)))	;; ing
("miserys"	nil	(((m i) 1) ((z @) 0) ((r ii z) 0)))	;; unique
("misfiling"	nil	(((m i s )0)((f ai l )1)((i ng )0)))	;; ing
("misfiring"	nil	(((m i s )0)((f ai @ r )1)((i ng )0)))	;; ing
("misgiving"	nil	(((m i s )0)((g i v )1)((i ng )0)))	;; ing
("mishandling"	nil	(((m i s )0)((h a n )1)((d l! )0)((i ng )0)))	;; ing
("mishearing"	nil	(((m i s )0)((h ir r )1)((i ng )0)))	;; ing
("misidentifying"	nil	(((m i s )1)((ai )0)((d e n )1)((t @ )0)((f ai )1)((i ng )0)))	;; ing
("misinforming"	nil	(((m i s )1)((i n )0)((f oo m )1)((i ng )0)))	;; ing
("misinstalling"	nil	(((m i s )1)((i n )0)((s t oo l )1)((i ng )0)))	;; ing
("misinterpreting"	nil	(((m i s )1)((i n )0)((t @@r )1)((p r i t^ )0)((i ng )0)))	;; ing
("misjudging"	nil	(((m i s )0)((jh uh jh )1)((i ng )0)))	;; ing
("mislabeling"	nil	(((m i s )0)((l ei )1)((b l! )0)((i ng )0)))	;; ing
("mislabelling"	nil	(((m i s )0)((l ei )1)((b l! )0)((i ng )0)))	;; ing
("mislaying"	nil	(((m i s )0)((l ei )1)((i ng )0)))	;; ing
("misleading"	nil	(((m i s )0)((l ii d )1)((i ng )0)))	;; ing
("mismanaging"	nil	(((m i s )0)((m a )1)((n i jh )0)((i ng )0)))	;; ing
("mismatching"	nil	(((m i s )0)((m a ch )1)((i ng )0)))	;; ing
("misnaming"	nil	(((m i s )0)((n ei m )1)((i ng )0)))	;; ing
("misplacing"	nil	(((m i s )0)((p l ei s )1)((i ng )0)))	;; ing
("misposting"	nil	(((m i s )0)((p ou s t )1)((i ng )0)))	;; ing
("misprinting"	nil	(((m i s )1)((p r i n t )1)((i ng )0)))	;; ing
("misprogramming"	nil	(((m i s )0)((p r ou )1)((g r a m )0)((i ng )0)))	;; ing
("mispronouncing"	nil	(((m i s )1)((p r @ )0)((n ow n s )1)((i ng )0)))	;; ing
("misquoting"	nil	(((m i s )0)((k w ou t^ )1)((i ng )0)))	;; ing
("misreading"	nil	(((m i s )0)((r ii d )1)((i ng )0)))	;; ing
("misreckoning"	nil	(((m i s )0)((r e )1)((k @ n )0)((i ng )0)))	;; ing
("misremembering"	nil	(((m i s )1)((r i )0)((m e m )1)((b @ r )0)((i ng )0)))	;; ing
("misreporting"	nil	(((m i s )1)((r i )0)((p oo t^ )1)((i ng )0)))	;; ing
("misrepresenting"	nil	(((m i s )1)((r e )0)((p r i )0)((z e n t )1)((i ng )0)))	;; ing
("misruling"	nil	(((m i s )0)((r @ l )1)((i ng )0)))	;; ing
("missing"	nil	(((m i s )1)((i ng )0)))	;; ing
("missouris"	nil	(((m i) 0) ((s uu) 1) ((r ii z) 0)))	;; unique
("misspelling"	nil	(((m i s )0)((s p a l )1)((i ng )0)))	;; ing
("misspending"	nil	(((m i s )1)((s p e n d )1)((i ng )0)))	;; ing
("misstating"	nil	(((m i s )0)((s t ei t^ )1)((i ng )0)))	;; ing
("mistaking"	nil	(((m i )0)((s t ei k )1)((i ng )0)))	;; ing
("mistiming"	nil	(((m i s )0)((t ai m )1)((i ng )0)))	;; ing
("misting"	nil	(((m i s t )1)((i ng )0)))	;; ing
("mistold"	nil	(((m i s) 0) ((t o l d) 1)))	;; oul
("mistranslating"	nil	(((m i s )1)((t r a n z )0)((l ei t^ )1)((i ng )0)))	;; ing
("mistreating"	nil	(((m i s )0)((t r ii t^ )1)((i ng )0)))	;; ing
("mistresss"	nil	(((m i) 1) ((s t r @ s) 0) ((@ z) 0)))	;; unique
("mistrusting"	nil	(((m i s )0)((t r uh s t )1)((i ng )0)))	;; ing
("mistyping"	nil	(((m i s )0)((t ai p )1)((i ng )0)))	;; ing
("misunderstanding"	nil	(((m i s )1)((uh n )0)((d @ )0)((s t a n d )1)((i ng )0)))	;; ing
("misusing"	nil	(((m i s )0)((y uu z )1)((i ng )0)))	;; ing
("miswording"	nil	(((m i s )0)((w @@r d )1)((i ng )0)))	;; ing
("mitering"	nil	(((m ai )1)((t^ @ r )0)((i ng )0)))	;; ing
("mitigating"	nil	(((m i )1)((t^ @ )0)((g ei t^ )1)((i ng )0)))	;; ing
("mitring"	nil	(((m ai )1)((t^ @ r )0)((i ng )0)))	;; ing
("mitsubishis"	nil	(((m i t) 1) ((s u) 0) ((b ii) 1) ((sh ii z) 0)))	;; unique
("mixing"	nil	(((m i k s )1)((i ng )0)))	;; ing
("moa"	nil	(((m ou) 1) ((@) 0)))	;; unique
("moana"	nil	(((m ou) 0) ((aa) 1) ((n @) 0)))	;; unique
("moaning"	nil	(((m ou n )1)((i ng )0)))	;; ing
("mobbing"	nil	(((m o b )1)((i ng )0)))	;; ing
("mobilising"	nil	(((m ou )1)((b i l )0)((ai z )1)((i ng )0)))	;; ing
("mobilizing"	nil	(((m ou )1)((b i l )0)((ai z )1)((i ng )0)))	;; ing
("mocking"	nil	(((m o k )1)((i ng )0)))	;; ing
("modeling"	nil	(((m o )1)((d l! )0)((i ng )0)))	;; ing
("modelling"	nil	(((m o )1)((d l! )0)((i ng )0)))	;; ing
("moderating"	nil	(((m o )1)((d @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("modernising"	nil	(((m o )1)((d n! )0)((ai z )1)((i ng )0)))	;; ing
("modernizing"	nil	(((m o )1)((d n! )0)((ai z )1)((i ng )0)))	;; ing
("modifying"	nil	(((m o )1)((d @ )0)((f ai )1)((i ng )0)))	;; ing
("modularising"	nil	(((m o )1)((jh @ l )0)((@ r )0)((ai z )1)((i ng )0)))	;; ing
("modularizing"	nil	(((m o )1)((jh @ l )0)((@ r )0)((ai z )1)((i ng )0)))	;; ing
("modulating"	nil	(((m o )1)((jh @ l )0)((ei t^ )1)((i ng )0)))	;; ing
("moeone"	nil	(((m oo) 1) ((e) 0) ((oo) 0) ((n ei) 0)))	;; unique
("moeraki"	nil	(((m oo) 1) ((e) 0) ((r aa) 0) ((k ii) 0)))	;; unique
("moeriki"	nil	(((m ou) 0) ((e) 0) ((r ii) 1) ((k ii) 0)))	;; unique
("mogadiscios"	nil	(((m o) 1) ((g @) 0) ((d i) 1) ((sh ii) 0) ((ou z) 0)))	;; unique
("mohimohi"	nil	(((m oo) 1) ((h ii) 0) ((m oo) 0) ((h ii) 0)))	;; unique
("moho"	nil	(((m oo) 1) ((h oo) 0)))	;; unique
("mohua"	nil	(((m oo) 1) ((h uu) 0) ((@) 0)))	;; unique
("moi"	nil	(((m ou) 1) ((ii) 0)))	;; unique
("moistening"	nil	(((m oi s )1)((n! )0)((i ng )0)))	;; ing
("moisturising"	nil	(((m oi s )1)((ch @ r )0)((ai z )1)((i ng )0)))	;; ing
("moisturizing"	nil	(((m oi s )1)((ch @ r )0)((ai z )1)((i ng )0)))	;; ing
("moki"	nil	(((m ou) 1) ((k ii) 0)))	;; unique
("mokihi"	nil	(((m oo) 1) ((k ii) 0) ((h ii) 0)))	;; unique
("mokimoki"	nil	(((m oo) 1) ((k ii) 0) ((m oo) 0) ((k ii) 0)))	;; unique
("moko"	nil	(((m oo) 1) ((k oo) 0)))	;; unique
("mokomoko"	nil	(((m oo) 1) ((k oo) 0) ((m oo) 0) ((k oo) 0)))	;; unique
("mokopuna"	nil	(((m oo) 1) ((k oo) 0) ((p uu) 0) ((n @) 0)))	;; unique
("molar"	nil	(((m o) 1) ((l @) 0)))	;; oul
("molars"	nil	(((m o) 1) ((l @ z) 0)))	;; oul
("mold"	nil	(((m o l d) 1)))	;; oul
("moldboard"	nil	(((m o l d) 1) ((b oo d) 0)))	;; oul
("moldboards"	nil	(((m o l d) 1) ((b oo d z) 0)))	;; oul
("molded"	nil	(((m o l d) 1) ((@ d) 0)))	;; oul
("moldier"	nil	(((m o l d) 1) ((ii @) 0)))	;; oul
("moldiest"	nil	(((m o l d) 1) ((ii @ s t) 0)))	;; oul
("moldiness"	nil	(((m o l d) 1) ((ii) 0) ((n @ s) 0)))	;; oul
("molding"	nil	(((m o l d) 1) ((i ng) 0)))	;; oul
("moldings"	nil	(((m o l d) 1) ((i ng z) 0)))	;; oul
("molds"	nil	(((m o l d z) 1)))	;; oul
("moldy"	nil	(((m o l d) 1) ((ii) 0)))	;; oul
("mole"	nil	(((m o l) 1)))	;; oul
("molecatcher"	nil	(((m o l) 1) ((k a ch) 1) ((@) 0)))	;; oul
("molecatchers"	nil	(((m o l) 1) ((k a ch) 1) ((@ z) 0)))	;; oul
("molehill"	nil	(((m o l) 1) ((h i l) 0)))	;; oul
("molehills"	nil	(((m o l) 1) ((h i l z) 0)))	;; oul
("molerat"	nil	(((m o l) 1) ((r a t) 0)))	;; oul
("molerats"	nil	(((m o l) 1) ((r a t s) 0)))	;; oul
("moles"	nil	(((m o l z) 1)))	;; oul
("moleskin"	nil	(((m o l) 1) ((s k i n) 0)))	;; oul
("moleskins"	nil	(((m o l) 1) ((s k i n z) 0)))	;; oul
("molesting"	nil	(((m @ )0)((l e s t )1)((i ng )0)))	;; ing
("mollifying"	nil	(((m o )1)((l @ )0)((f ai )1)((i ng )0)))	;; ing
("mollycoddling"	nil	(((m o )1)((l iy )0)((k o )1)((d l! )0)((i ng )0)))	;; ing
("mollys"	nil	(((m o) 1) ((l ii z) 0)))	;; unique
("moloch"	nil	(((m o) 1) ((l o k) 0)))	;; oul
("molten"	nil	(((m o l) 1) ((t n!) 0)))	;; oul
("moltenly"	nil	(((m o l) 1) ((t n!) 0) ((l ii) 0)))	;; oul
("mommas"	nil	(((m o) 1) ((m @ z) 0)))	;; unique
("monacos"	nil	(((m o) 1) ((n @) 0) ((k ou z) 0)))	;; unique
("monetizing"	nil	(((m uh )1)((n @ )0)((t ai z )1)((i ng )0)))	;; ing
("money-making"	nil	(((m uh )1)((n iy )0)((m ei k )1)((i ng )0)))	;; ing
("moneygrubbing"	nil	(((m uh )1)((n iy )0)((g r uh b )1)((i ng )0)))	;; ing
("moneylending"	nil	(((m uh )1)((n iy )0)((l e n d )1)((i ng )0)))	;; ing
("moneymaking"	nil	(((m uh )1)((n iy )0)((m ei k )1)((i ng )0)))	;; ing
("mongering"	nil	(((m uh ng )1)((g @ r )0)((i ng )0)))	;; ing
("mongolia"	nil	(((m o ng) 0) ((g o) 1) ((l ii @) 0)))	;; oul
("mongolian"	nil	(((m o ng) 0) ((g o) 1) ((l ii @ n) 0)))	;; oul
("mongolians"	nil	(((m o ng) 0) ((g o) 1) ((l ii @ n z) 0)))	;; oul
("mongolias"	nil	(((m o ng) 0) ((g o) 1) ((l ii @ z) 0)))	;; unique
("monitoring"	nil	(((m o )1)((n @ )0)((t^ @ r )0)((i ng )0)))	;; ing
("monkeying"	nil	(((m uh ng )1)((k iy )0)((i ng )0)))	;; ing
("monoao"	nil	(((m oo) 1) ((n oo) 0) ((ow) 0)))	;; unique
("monogramming"	nil	(((m o )1)((n @ )0)((g r a m )1)((i ng )0)))	;; ing
("mononitrate"	nil	(((m o) 2) ((n ou) 0) ((n ai) 1) ((t r ei t) 0)))	;; unique
("monopolising"	nil	(((m @ )0)((n o )1)((p @ )0)((l ai z )1)((i ng )0)))	;; ing
("monopolizing"	nil	(((m @ )0)((n o )1)((p @ )0)((l ai z )1)((i ng )0)))	;; ing
("montagus"	nil	(((m o n) 1) ((t @) 0) ((g y uu z) 0)))	;; unique
("montgomerys"	nil	(((m o n t) 0) ((g o) 1) ((m @) 0) ((r ii z) 0)))	;; unique
("montreals"	nil	(((m o n) 1) ((t r ii) 0) ((oo l z) 1)))	;; unique
("mooching"	nil	(((m uu ch )1)((i ng )0)))	;; ing
("mooing"	nil	(((m uu )1)((i ng )0)))	;; ing
("mooning"	nil	(((m uu n )1)((i ng )0)))	;; ing
("moonlighting"	nil	(((m uu n )1)((l - ai t^ )0)((i ng )0)))	;; ing
("moonraking"	nil	(((m uu n )1)((r ei k )1)((i ng )0)))	;; ing
("moonwalking"	nil	(((m uu n )1)((w oo k )1)((i ng )0)))	;; ing
("mooring"	nil	(((m ur r )1)((i ng )0)))	;; ing
("mooting"	nil	(((m uu t^ )1)((i ng )0)))	;; ing
("moping"	nil	(((m ou p )1)((i ng )0)))	;; ing
("mopping"	nil	(((m o p )1)((i ng )0)))	;; ing
("moralising"	nil	(((m o )1)((r @ l )0)((ai z )1)((i ng )0)))	;; ing
("moralizing"	nil	(((m o )1)((r @ l )0)((ai z )1)((i ng )0)))	;; ing
("morena"	nil	(((m oo) 0) ((r e) 1) ((n @) 0)))	;; unique
("moriartys"	nil	(((m o) 1) ((r ii) 0) ((aa) 1) ((t^ ii z) 0)))	;; unique
("moriori"	nil	(((m oo) 1) ((r ii) 0) ((oo) 1) ((r ii) 0)))	;; unique
("morleys"	nil	(((m oo) 1) ((l ii z) 0)))	;; unique
("morning"	nil	(((m oo )1)((n i ng )0)))	;; ing
("morphing"	nil	(((m oo f )1)((i ng )0)))	;; ing
("morriss"	nil	(((m o) 1) ((r i s) 0) ((@ z) 0)))	;; unique
("mortaring"	nil	(((m oo )1)((t^ @ r )0)((i ng )0)))	;; ing
("mortgaging"	nil	(((m oo )1)((g @ jh )0)((i ng )0)))	;; ing
("morticing"	nil	(((m oo )1)((t^ i s )0)((i ng )0)))	;; ing
("mortifying"	nil	(((m oo )1)((t^ @ )0)((f ai )1)((i ng )0)))	;; ing
("mortons"	nil	(((m oo) 1) ((t n! z) 0)))	;; unique
("moscows"	nil	(((m o) 1) ((s k ou z) 0)))	;; unique
("moseying"	nil	(((m ou )1)((z iy )0)((i ng )0)))	;; ing
("moteatea"	nil	(((m ou) 0) ((t e) 1) ((aa) 0) ((t e) 0) ((@) 0)))	;; unique
("mothering"	nil	(((m uh )1)((dh @ r )0)((i ng )0)))	;; ing
("mothproofing"	nil	(((m o th )1)((p r uu f )1)((i ng )0)))	;; ing
("motilium"	nil	(((m ou) 0) ((t i) 1) ((l ii) 0) ((@ m) 0)))	;; unique
("motioning"	nil	(((m ou )1)((sh n! )0)((i ng )0)))	;; ing
("motivating"	nil	(((m ou )1)((t^ @ v )0)((ei t^ )1)((i ng )0)))	;; ing
("motorcycling"	nil	(((m ou )1)((t^ @ )0)((s ai )1)((k l! )0)((i ng )0)))	;; ing
("motoring"	nil	(((m ou )1)((t^ @ r )0)((i ng )0)))	;; ing
("motorising"	nil	(((m ou )1)((t^ @ r )0)((ai z )1)((i ng )0)))	;; ing
("motorizing"	nil	(((m ou )1)((t^ @ r )0)((ai z )1)((i ng )0)))	;; ing
("motorola"	nil	(((m ou) 1) ((t^ @) 0) ((r o) 1) ((l @) 0)))	;; oul
("motorolas"	nil	(((m ou) 1) ((t^ @) 0) ((r o) 1) ((l @ z) 0)))	;; oul
("mottling"	nil	(((m o )1)((t l! )0)((i ng )0)))	;; ing
("motts"	nil	(((m o t s) 1)))	;; unique
("mould"	nil	(((m o l d) 1)))	;; oul
("mouldable"	nil	(((m o l d) 1) ((@) 0) ((b l!) 0)))	;; oul
("moulded"	nil	(((m o l d) 1) ((@ d) 0)))	;; oul
("moulder"	nil	(((m o l d) 1) ((@) 0)))	;; oul
("mouldered"	nil	(((m o l d) 1) ((@ d) 0)))	;; oul
("mouldering"	nil	(((m o l d) 1) ((@ r) 0) ((i ng) 0)))	;; oul
("moulders"	nil	(((m o l d) 1) ((@ z) 0)))	;; oul
("mouldier"	nil	(((m o l d) 1) ((ii @) 0)))	;; oul
("mouldiest"	nil	(((m o l d) 1) ((ii @ s t) 0)))	;; oul
("mouldiness"	nil	(((m o l d) 1) ((ii) 0) ((n @ s) 0)))	;; oul
("moulding"	nil	(((m o l d) 1) ((i ng) 0)))	;; oul
("mouldings"	nil	(((m o l d) 1) ((i ng z) 0)))	;; oul
("moulds"	nil	(((m o l d z) 1)))	;; oul
("mouldy"	nil	(((m o l d) 1) ((ii) 0)))	;; oul
("moult"	nil	(((m o l t) 1)))	;; oul
("moulted"	nil	(((m o l t) 1) ((@ d) 0)))	;; oul
("moulting"	nil	(((m o l t) 1) ((i ng) 0)))	;; oul
("moults"	nil	(((m o l t s) 1)))	;; oul
("mountaineering"	nil	(((m ow n )1)((t i n )0)((ir r )1)((i ng )0)))	;; ing
("mounting"	nil	(((m ow n t )1)((i ng )0)))	;; ing
("mourning"	nil	(((m oo n )1)((i ng )0)))	;; ing
("mouses"	nil	(((m ow s) 1) ((@ z) 0)))	;; unique
("mousing"	nil	(((m ow s )1)((i ng )0)))	;; ing
("mouthing"	nil	(((m ow dh )1)((i ng )0)))	;; ing
("movicol"	nil	(((m o v) 1) ((i) 0) ((k o l) 1)))	;; unique
("moving"	nil	(((m uu v )1)((i ng )0)))	;; ing
("mowing"	nil	(((m ou )1)((i ng )0)))	;; ing
("mozambiques"	nil	(((m ou) 1) ((z a m) 0) ((b ii k s) 1)))	;; unique
("mozarts"	nil	(((m ou t) 1) ((s aa t s) 0)))	;; unique
("mucking"	nil	(((m uh k )1)((i ng )0)))	;; ing
("muckraking"	nil	(((m uh k )1)((r ei k )1)((i ng )0)))	;; ing
("muckspreading"	nil	(((m uh k )1)((s p r e d )1)((i ng )0)))	;; ing
("muckying"	nil	(((m uh k )1)((iy )0)((i ng )0)))	;; ing
("mudding"	nil	(((m uh d )1)((i ng )0)))	;; ing
("muddling"	nil	(((m uh )1)((d l! )0)((i ng )0)))	;; ing
("muddying"	nil	(((m uh d )1)((iy )0)((i ng )0)))	;; ing
("mudpacking"	nil	(((m uh d )1)((p a k )1)((i ng )0)))	;; ing
("mudslinging"	nil	(((m uh d )1)((s l i ng )1)((i ng )0)))	;; ing
("muffling"	nil	(((m uh )1)((f l! )0)((i ng )0)))	;; ing
("mugging"	nil	(((m uh g )1)((i ng )0)))	;; ing
("muka"	nil	(((m uu) 1) ((k @) 0)))	;; unique
("mulching"	nil	(((m o l ch )1)((i ng )0)))	;; ing
("mulling"	nil	(((m uh l )1)((i ng )0)))	;; ing
("multibuffering"	nil	(((m o l )1)((t iy )0)((b uh )1)((f @ r )0)((i ng )0)))	;; ing
("multiplexing"	nil	(((m o l )1)((t iy )0)((p l e k s )1)((i ng )0)))	;; ing
("multiplying"	nil	(((m o l )1)((t @ )0)((p l ai )1)((i ng )0)))	;; ing
("multipolarisation"	nil	(((m o l) 1) ((t ii) 0) ((p o l) 1) ((@ r) 0) ((i z) 0) ((ei) 1) ((sh n!) 0)))	;; oul
("multipolarization"	nil	(((m o l) 1) ((t ii) 0) ((p o l) 1) ((@ r) 0) ((i z) 0) ((ei) 1) ((sh n!) 0)))	;; oul
("multiprocessing"	nil	(((m o l )1)((t iy )0)((p r ou )1)((s e s )0)((i ng )0)))	;; ing
("multitasking"	nil	(((m o l )1)((t iy )0)((t aa s k )1)((i ng )0)))	;; ing
("mumbling"	nil	(((m uh m )1)((b l! )0)((i ng )0)))	;; ing
("mummifying"	nil	(((m uh )1)((m @ )0)((f ai )1)((i ng )0)))	;; ing
("mumming"	nil	(((m uh m )1)((i ng )0)))	;; ing
("mummying"	nil	(((m uh m )1)((iy )0)((i ng )0)))	;; ing
("munching"	nil	(((m uh n ch )1)((i ng )0)))	;; ing
("municipalitys"	nil	(((m y uw) 0) ((n i) 1) ((s @) 0) ((p a l) 1) ((@) 0) ((t^ ii z) 0)))	;; unique
("municipals"	nil	(((m y uw) 0) ((n i) 1) ((s @) 0) ((p l! z) 0)))	;; unique
("murdering"	nil	(((m @@r )1)((d @ r )0)((i ng )0)))	;; ing
("murdochs"	nil	(((m @@r) 1) ((d o k s) 0)))	;; unique
("murihiku"	nil	(((m uu) 1) ((r ii) 0) ((h ii) 1) ((k uu) 0)))	;; unique
("murmuring"	nil	(((m @@r )1)((m @ r )0)((i ng )0)))	;; ing
("murphys"	nil	(((m @@r) 1) ((f ii z) 0)))	;; unique
("murrays"	nil	(((m uh) 1) ((r ii z) 0)))	;; unique
("muru"	nil	(((m uu) 1) ((r uu) 0)))	;; unique
("mus"	nil	(((m y uu z) 1)))	;; unique
("muscle-building"	nil	(((m uh )1)((s l! )0)((b i l d )1)((i ng )0)))	;; ing
("muscling"	nil	(((m uh )1)((s l! )0)((i ng )0)))	;; ing
("mushing"	nil	(((m uh sh )1)((i ng )0)))	;; ing
("mushrooming"	nil	(((m uh sh )1)((r uw m )0)((i ng )0)))	;; ing
("musing"	nil	(((m y uu z )1)((i ng )0)))	;; ing
("mussing"	nil	(((m uh s )1)((i ng )0)))	;; ing
("mustering"	nil	(((m uh )1)((s t @ r )0)((i ng )0)))	;; ing
("mustn't"	nil	(((m uh s) 1) ((n! t) 0)))	;; contraction
("mustve"	nil	(((m uh s t) 1) ((@ v) 0)))	;; unique
("mutating"	nil	(((m y uw )0)((t ei t^ )1)((i ng )0)))	;; ing
("mutilating"	nil	(((m y uu )1)((t^ i l )0)((ei t^ )1)((i ng )0)))	;; ing
("muting"	nil	(((m y uu t^ )1)((i ng )0)))	;; ing
("mutinying"	nil	(((m y uu )1)((t^ i n )0)((iy )0)((i ng )0)))	;; ing
("muttering"	nil	(((m uh )1)((t^ @ r )0)((i ng )0)))	;; ing
("muzzling"	nil	(((m uh )1)((z l! )0)((i ng )0)))	;; ing
("mystifying"	nil	(((m i )1)((s t @ )0)((f ai )1)((i ng )0)))	;; ing
("mythologizing"	nil	(((m i th )0)((o )1)((l @ )0)((jh ai z )1)((i ng )0)))	;; ing
("nabbing"	nil	(((n a b )1)((i ng )0)))	;; ing
("nagging"	nil	(((n a g )1)((i ng )0)))	;; ing
("nahui"	nil	(((n aa) 1) ((h uu) 0) ((ii) 0)))	;; unique
("nail-biting"	nil	(((n ei l )1)((b ai t^ )1)((i ng )0)))	;; ing
("nailing"	nil	(((n ei l )1)((i ng )0)))	;; ing
("nairobis"	nil	(((n ai) 0) ((r ou) 1) ((b ii z) 0)))	;; unique
("name-calling"	nil	(((n ei m )1)((k oo l )1)((i ng )0)))	;; ing
("namibias"	nil	(((n @) 0) ((m i) 1) ((b ii @ z) 0)))	;; unique
("naming"	nil	(((n ei m )1)((i ng )0)))	;; ing
("nams"	nil	(((n aa m z) 1)))	;; unique
("namu"	nil	(((n aa) 1) ((m uu) 0)))	;; unique
("nancys"	nil	(((n a n) 1) ((s ii z) 0)))	;; unique
("nanking"	nil	(((n a ng )1)((k i ng )0)))	;; ing
("nannying"	nil	(((n a )1)((n iy )0)((i ng )0)))	;; ing
("nanua"	nil	(((n a) 1) ((n uu) 0) ((@) 0)))	;; unique
("napalming"	nil	(((n ei )1)((p aa m )0)((i ng )0)))	;; ing
("napoleon"	nil	(((n @) 0) ((p o) 1) ((l ii @ n) 0)))	;; oul
("napoleonic"	nil	(((n @) 0) ((p o) 1) ((l ii) 0) ((o n) 1) ((i k) 0)))	;; oul
("napoleons"	nil	(((n @) 0) ((p o) 1) ((l ii @ n z) 0)))	;; oul
("napping"	nil	(((n a p )1)((i ng )0)))	;; ing
("naprosyn"	nil	(((n a p) 1) ((r @) 0) ((s i n) 1)))	;; unique
("naproxen"	nil	(((n @) 0) ((p r o k) 1) ((s @ n) 0)))	;; unique
("narking"	nil	(((n aa k )1)((i ng )0)))	;; ing
("narrating"	nil	(((n @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("narrowing"	nil	(((n a )1)((r ou )0)((i ng )0)))	;; ing
("nasalising"	nil	(((n ei )1)((z l! )0)((ai z )1)((i ng )0)))	;; ing
("nasalizing"	nil	(((n ei )1)((z l! )0)((ai z )1)((i ng )0)))	;; ing
("nasas"	nil	(((n a) 1) ((s @ z) 0)))	;; unique
("nashs"	nil	(((n a sh) 1) ((@ z) 0)))	;; unique
("nathans"	nil	(((n ei) 1) ((th @ n z) 0)))	;; unique
("nationalising"	nil	(((n a sh )1)((n l! )0)((ai z )1)((i ng )0)))	;; ing
("nationalizing"	nil	(((n a sh )1)((n l! )0)((ai z )1)((i ng )0)))	;; ing
("natos"	nil	(((n ei) 1) ((t^ ou z) 0)))	;; unique
("nats"	nil	(((n a t s) 1)))	;; unique
("nattering"	nil	(((n a )1)((t^ @ r )0)((i ng )0)))	;; ing
("naturalising"	nil	(((n a ch )1)((r @ l )0)((ai z )1)((i ng )0)))	;; ing
("naturalizing"	nil	(((n a ch )1)((r @ l )0)((ai z )1)((i ng )0)))	;; ing
("naturing"	nil	(((n ei )1)((ch @ r )0)((i ng )0)))	;; ing
("nau"	nil	(((n ow) 1)))	;; unique
("nauseating"	nil	(((n oo )1)((z iy )0)((ei t^ )1)((i ng )0)))	;; ing
("navigating"	nil	(((n a )1)((v @ )0)((g ei t^ )1)((i ng )0)))	;; ing
("navys"	nil	(((n ei) 1) ((v ii z) 0)))	;; unique
("nazareths"	nil	(((n a) 1) ((z @) 0) ((r @ th s) 0)))	;; unique
("nearing"	nil	(((n ir r )1)((i ng )0)))	;; ing
("neatening"	nil	(((n ii t )1)((n! )0)((i ng )0)))	;; ing
("nebulising"	nil	(((n e )1)((b y @ )0)((l ai z )1)((i ng )0)))	;; ing
("nebulizing"	nil	(((n e )1)((b y @ )0)((l ai z )1)((i ng )0)))	;; ing
("necessitating"	nil	(((n @ )0)((s e )1)((s @ )0)((t ei t^ )1)((i ng )0)))	;; ing
("neckers"	nil	(((n e k) 1) ((@ z) 0)))	;; unique
("necking"	nil	(((n e k )1)((i ng )0)))	;; ing
("necklacing"	nil	(((n e k )1)((l @ s )0)((i ng )0)))	;; ing
("needing"	nil	(((n ii d )1)((i ng )0)))	;; ing
("needle-sharing"	nil	(((n ii )1)((d l! )0)((sh ir r )1)((i ng )0)))	;; ing
("needling"	nil	(((n ii )1)((d l! )0)((i ng )0)))	;; ing
("neednt"	nil	(((n ii d) 1) ((n! t) 0)))	;; unique
("neer"	nil	(((n ir) 1)))	;; unique
("negating"	nil	(((n @ )0)((g ei t^ )1)((i ng )0)))	;; ing
("neglecting"	nil	(((n i )0)((g l e k t )1)((i ng )0)))	;; ing
("negotiating"	nil	(((n i )0)((g ou )1)((sh iy )0)((ei t^ )1)((i ng )0)))	;; ing
("nehrus"	nil	(((n ir) 1) ((r uu z) 0)))	;; unique
("neighboring"	nil	(((n ei )1)((b @ r )0)((i ng )0)))	;; ing
("neighbouring"	nil	(((n ei )1)((b @ r )0)((i ng )0)))	;; ing
("neighing"	nil	(((n ei )1)((i ng )0)))	;; ing
("neills"	nil	(((n ii l z) 1)))	;; unique
("neils"	nil	(((n ii l z) 1)))	;; unique
("neinei"	nil	(((n e) 0) ((ii) 1) ((n e) 0) ((ii) 0)))	;; unique
("nelsons"	nil	(((n a l) 1) ((s n! z) 0)))	;; unique
("neoliberalism"	nil	(((n ii) 1) ((o) 0) ((l i) 1) ((b @) 0) ((r @ l) 0) ((i) 1) ((z m!) 0)))	;; oul
("neologizing"	nil	(((n iy )0)((o )1)((l @ )0)((jh ai z )1)((i ng )0)))	;; ing
("nepals"	nil	(((n @) 0) ((p oo l z) 1)))	;; unique
("neptunes"	nil	(((n e p) 1) ((ch uu n z) 0)))	;; unique
("nerve-racking"	nil	(((n @@r v )1)((r a k )1)((i ng )0)))	;; ing
("nerve-straining"	nil	(((n @@r v )1)((s t r ei n )1)((i ng )0)))	;; ing
("nerving"	nil	(((n @@r v )1)((i ng )0)))	;; ing
("nest-building"	nil	(((n e s t )1)((b i l d )1)((i ng )0)))	;; ing
("nesting"	nil	(((n e s t )1)((i ng )0)))	;; ing
("nestling"	nil	(((n e s )1)((l i ng )0)))	;; ing
("netting"	nil	(((n e t^ )1)((i ng )0)))	;; ing
("nettlefolds"	nil	(((n e) 1) ((t l!) 0) ((f o l d z) 0)))	;; oul
("networking"	nil	(((n e t )1)((w - @@r k )0)((i ng )0)))	;; ing
("neuroimaging"	nil	(((n y ur )1)((r ou )0)((i )1)((m i jh )0)((i ng )0)))	;; ing
("neutering"	nil	(((n y uu )1)((t^ @ r )0)((i ng )0)))	;; ing
("neutralising"	nil	(((n y uu )1)((t r @ l )0)((ai z )1)((i ng )0)))	;; ing
("neutralizing"	nil	(((n y uu )1)((t r @ l )0)((ai z )1)((i ng )0)))	;; ing
("nevadas"	nil	(((n @) 0) ((v aa) 1) ((d @ z) 0)))	;; unique
("never-ending"	nil	(((n e )1)((v @ r )0)((e n d )1)((i ng )0)))	;; ing
("newbold"	nil	(((n y uu) 1) ((b o l d) 0)))	;; oul
("newells"	nil	(((n y uu @ l z) 1)))	;; unique
("newmans"	nil	(((n y uu) 1) ((m @ n z) 0)))	;; unique
("newscasting"	nil	(((n y uu z )1)((k aa s t )1)((i ng )0)))	;; ing
("newsgathering"	nil	(((n y uu z )1)((g a )1)((dh @ r )0)((i ng )0)))	;; ing
("newsmongering"	nil	(((n y uu z )1)((m uh ng )1)((g @ r )0)((i ng )0)))	;; ing
("newsreading"	nil	(((n y uu z )1)((r ii d )1)((i ng )0)))	;; ing
("nga"	nil	(((n aa) 1)))	;; unique
("ngai"	nil	(((ng ai) 1)))	;; unique
("ngaio"	nil	(((n aa) 1) ((i) 0) ((ou) 0)))	;; unique
("ngamotu"	nil	(((ng aa) 1) ((m ou) 0) ((t uu) 0)))	;; unique
("ngarara"	nil	(((ng aa) 1) ((r aa) 0) ((r @) 0)))	;; unique
("ngati"	nil	(((n aa) 1) ((t^ ii) 0)))	;; unique
("ngawha"	nil	(((ng aa) 1) ((f @) 0)))	;; unique
("ngeri"	nil	(((ng e) 1) ((r ii) 0)))	;; unique
("ngirungiru"	nil	(((ng ii) 1) ((r uu ng) 0) ((ii) 0) ((r uu) 0)))	;; unique
("ngoiro"	nil	(((ng oo) 1) ((ii) 0) ((r ou) 0)))	;; unique
("nguru"	nil	(((ng uu) 1) ((r uu) 0)))	;; unique
("ngutu-parore"	nil	(((ng uu) 1) ((t uu) 0) ((p aa) 1) ((r ou) 0) ((r ei) 0)))	;; unique
("ngutukaka"	nil	(((ng uu) 1) ((t uu) 0) ((k aa) 0) ((k @) 0)))	;; unique
("nibbing"	nil	(((n i b )1)((i ng )0)))	;; ing
("nibbling"	nil	(((n i )1)((b l! )0)((i ng )0)))	;; ing
("nicaraguas"	nil	(((n i) 1) ((k @) 0) ((r a) 1) ((g y i@ z) 0)))	;; unique
("nice-looking"	nil	(((n ai s )1)((l u k )1)((i ng )0)))	;; ing
("nicing"	nil	(((n ai s )1)((i ng )0)))	;; ing
("nicking"	nil	(((n i k )1)((i ng )0)))	;; ing
("nicknaming"	nil	(((n i k )1)((n ei m )1)((i ng )0)))	;; ing
("nicole"	nil	(((n i) 0) ((k o l) 1)))	;; oul
("nigerias"	nil	(((n ai) 0) ((jh ir) 1) ((r ii @ z) 0)))	;; unique
("nigers"	nil	(((n ai) 1) ((jh @ z) 0)))	;; unique
("niggling"	nil	(((n i )1)((g l! )0)((i ng )0)))	;; ing
("nikau"	nil	(((n ii) 1) ((k ow) 0)))	;; unique
("ninefold"	nil	(((n ai n) 1) ((f o l d) 0)))	;; oul
("nipping"	nil	(((n i p )1)((i ng )0)))	;; ing
("nissans"	nil	(((n i) 1) ((s a n z) 0)))	;; unique
("nitpicking"	nil	(((n i t )1)((p i k )1)((i ng )0)))	;; ing
("nitrolingual"	nil	(((n ai) 1) ((t r @) 0) ((l i ng) 1) ((w u l) 0)))	;; unique
("niu"	nil	(((n ii) 1) ((uu) 0)))	;; unique
("nixdorfs"	nil	(((n i k s) 1) ((d oo f s) 0)))	;; unique
("nixing"	nil	(((n i k s )1)((i ng )0)))	;; ing
("no-mans-land"	nil	(((n ou) 1) ((m a n z) 0) ((l a n d) 1)))	;; unique
("noa"	nil	(((n oo) 1) ((@) 0)))	;; unique
("noahs"	nil	(((n ou @ z) 1)))	;; unique
("nobbling"	nil	(((n o )1)((b l! )0)((i ng )0)))	;; ing
("noblemans"	nil	(((n ou) 1) ((b l!) 0) ((m @ n z) 0)))	;; unique
("nobodyd"	nil	(((n ou) 1) ((b @) 0) ((d ii d) 0)))	;; unique
("nobodys"	nil	(((n ou) 1) ((b @) 0) ((d ii z) 0)))	;; unique
("nodding"	nil	(((n o d )1)((i ng )0)))	;; ing
("nohi"	nil	(((n ou) 1) ((h ii) 0)))	;; unique
("nohoanga"	nil	(((n oo) 1) ((h oo) 0) ((uh ng) 0) ((@) 0)))	;; unique
("noisemaking"	nil	(((n oi z )1)((m ei k )1)((i ng )0)))	;; ing
("nolan"	nil	(((n o) 1) ((l @ n) 0)))	;; oul
("nominalising"	nil	(((n o )1)((m @ )0)((n l! )0)((ai z )1)((i ng )0)))	;; ing
("nominalizing"	nil	(((n o )1)((m @ )0)((n l! )0)((ai z )1)((i ng )0)))	;; ing
("nominating"	nil	(((n o )1)((m @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("non-complying"	nil	(((n o n )1)((k @ m )0)((p l ai )1)((i ng )0)))	;; ing
("non-conducting"	nil	(((n o n )1)((k @ n )0)((d uh k t )1)((i ng )0)))	;; ing
("non-conforming"	nil	(((n o n )1)((k @ n )0)((f oo m )1)((i ng )0)))	;; ing
("non-forfeiting"	nil	(((n o n )0)((f oo )1)((f @ t^ )0)((i ng )0)))	;; ing
("non-marrying"	nil	(((n o n )0)((m a )1)((r iy )0)((i ng )0)))	;; ing
("non-participating"	nil	(((n o n )1)((p aa )0)((t i )1)((s @ )0)((p ei t^ )1)((i ng )0)))	;; ing
("non-playing"	nil	(((n o n )0)((p l ei )1)((i ng )0)))	;; ing
("non-profit-making"	nil	(((n o n )0)((p r o )1)((f @ t )0)((m ei k )1)((i ng )0)))	;; ing
("non-resisting"	nil	(((n o n )1)((r i )0)((z i s t )1)((i ng )0)))	;; ing
("non-smoking"	nil	(((n o n )0)((s m ou k )1)((i ng )0)))	;; ing
("non-voting"	nil	(((n o n )0)((v ou t^ )1)((i ng )0)))	;; ing
("nonaccruing"	nil	(((n o n )1)((@ )0)((k r uu )1)((i ng )0)))	;; ing
("nonblinking"	nil	(((n o n )0)((b l i ng k )1)((i ng )0)))	;; ing
("nonblocking"	nil	(((n o n )0)((b l o k )1)((i ng )0)))	;; ing
("noncommunicating"	nil	(((n o n )1)((k @ )0)((m y uu )1)((n @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("noncompeting"	nil	(((n o n )1)((k @ m )0)((p ii t^ )1)((i ng )0)))	;; ing
("noncondensing"	nil	(((n o n )1)((k @ n )0)((d e n s )1)((i ng )0)))	;; ing
("nonconducting"	nil	(((n o n )1)((k @ n )0)((d uh k t )1)((i ng )0)))	;; ing
("nonconforming"	nil	(((n o n )1)((k @ n )0)((f oo m )1)((i ng )0)))	;; ing
("nondeforming"	nil	(((n o n )1)((d i )0)((f oo m )1)((i ng )0)))	;; ing
("nonflaming"	nil	(((n o n )0)((f l ei m )1)((i ng )0)))	;; ing
("noninteracting"	nil	(((n o n )1)((i n )0)((t @ r )0)((a k t )1)((i ng )0)))	;; ing
("nonintersecting"	nil	(((n o n )1)((i n )0)((t @ )0)((s e k t )1)((i ng )0)))	;; ing
("noninverting"	nil	(((n o n )1)((i n )0)((v @@r t^ )1)((i ng )0)))	;; ing
("nonplussing"	nil	(((n o n )0)((p l uh s )1)((i ng )0)))	;; ing
("nonpolar"	nil	(((n o n) 0) ((p o l) 1) ((@) 0)))	;; oul
("nonprofessing"	nil	(((n o n )1)((p r @ )0)((f e s )1)((i ng )0)))	;; ing
("nonrecognizing"	nil	(((n o n )0)((r e )1)((k @ g )0)((n ai z )1)((i ng )0)))	;; ing
("nonrepeating"	nil	(((n o n )1)((r i )0)((p ii t^ )1)((i ng )0)))	;; ing
("nonsampling"	nil	(((n o n )0)((s aa m )1)((p l! )0)((i ng )0)))	;; ing
("nonsmoking"	nil	(((n o n )0)((s m ou k )1)((i ng )0)))	;; ing
("nonthreatening"	nil	(((n o n )0)((th r e t )1)((n! )0)((i ng )0)))	;; ing
("nonvoting"	nil	(((n o n )0)((v ou t^ )1)((i ng )0)))	;; ing
("nonworking"	nil	(((n o n )0)((w @@r k )1)((i ng )0)))	;; ing
("noodling"	nil	(((n uu )1)((d l! )0)((i ng )0)))	;; ing
("noones"	nil	(((n ou) 1) ((w uh n z) 0)))	;; unique
("noons"	nil	(((n uu n z) 1)))	;; unique
("noras"	nil	(((n oo) 1) ((r @ z) 0)))	;; unique
("normalising"	nil	(((n oo )1)((m l! )0)((ai z )1)((i ng )0)))	;; ing
("normalizing"	nil	(((n oo )1)((m l! )0)((ai z )1)((i ng )0)))	;; ing
("northerns"	nil	(((n oo dh) 1) ((n! z) 0)))	;; unique
("northwesterns"	nil	(((n oo th) 1) ((w e s t) 1) ((@ n z) 0)))	;; unique
("norways"	nil	(((n oo) 1) ((w ei z) 0)))	;; unique
("nosediving"	nil	(((n ou z )1)((d ai v )1)((i ng )0)))	;; ing
("noshing"	nil	(((n o sh )1)((i ng )0)))	;; ing
("nosing"	nil	(((n ou z )1)((i ng )0)))	;; ing
("notarising"	nil	(((n ou )1)((t^ @ )0)((r ai z )1)((i ng )0)))	;; ing
("notarizing"	nil	(((n ou )1)((t^ @ )0)((r ai z )1)((i ng )0)))	;; ing
("notarys"	nil	(((n ou) 1) ((t^ @) 0) ((r ii z) 0)))	;; unique
("notching"	nil	(((n o ch )1)((i ng )0)))	;; ing
("nothing"	nil	(((n uh )1)((th i ng )0)))	;; ing
("noticing"	nil	(((n ou )1)((t^ @ s )0)((i ng )0)))	;; ing
("notifying"	nil	(((n ou t^ )1)((@ )0)((f ai )1)((i ng )0)))	;; ing
("noting"	nil	(((n ou t^ )1)((i ng )0)))	;; ing
("notting"	nil	(((n o )1)((t^ i ng )0)))	;; ing
("nottinghams"	nil	(((n o) 1) ((t^ i ng) 0) ((@ m z) 0)))	;; unique
("notwithstanding"	nil	(((n o t )1)((w - i dh )0)((s t a n d )1)((i ng )0)))	;; ing
("nourishing"	nil	(((n uh )1)((r i sh )0)((i ng )0)))	;; ing
("ns"	nil	(((e n z) 1)))	;; unique
("nucleating"	nil	(((n y uu )1)((k l iy )0)((ei t^ )1)((i ng )0)))	;; ing
("nudging"	nil	(((n uh jh )1)((i ng )0)))	;; ing
("nui"	nil	(((n uu) 1) ((ii) 0)))	;; unique
("nuking"	nil	(((n y uu k )1)((i ng )0)))	;; ing
("nullifying"	nil	(((n uh l )1)((@ )0)((f ai )1)((i ng )0)))	;; ing
("nulling"	nil	(((n uh l )1)((i ng )0)))	;; ing
("numbering"	nil	(((n uh m )1)((b @ r )0)((i ng )0)))	;; ing
("numbing"	nil	(((n uh m )1)((i ng )0)))	;; ing
("numerating"	nil	(((n y uu )1)((m @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("nunns"	nil	(((n uh n z) 1)))	;; unique
("nursemaiding"	nil	(((n @@r s )1)((m ei d )1)((i ng )0)))	;; ing
("nursing"	nil	(((n @@r s )1)((i ng )0)))	;; ing
("nursling"	nil	(((n @@r s )1)((l i ng )0)))	;; ing
("nurturing"	nil	(((n @@r )1)((ch @ r )0)((i ng )0)))	;; ing
("nus"	nil	(((n y uu z) 1)))	;; unique
("nutcracking"	nil	(((n uh t )1)((k r a k )1)((i ng )0)))	;; ing
("nutting"	nil	(((n uh t^ )1)((i ng )0)))	;; ing
("nuzzling"	nil	(((n uh )1)((z l! )0)((i ng )0)))	;; ing
("o"	nil	(((oo) 1))) 	;; maori
("oamaru"	nil	(((oo) 1) ((m @) 0) ((r uu) 0)))	;; unique
("oatess"	nil	(((ou t s) 1) ((@ z) 0)))	;; unique
("obeying"	nil	(((@ )0)((b ei )1)((i ng )0)))	;; ing
("obfuscating"	nil	(((o b )1)((f @ )0)((s k ei t^ )1)((i ng )0)))	;; ing
("objectifying"	nil	(((@ b )0)((jh e k t )1)((@ )0)((f ai )1)((i ng )0)))	;; ing
("objecting"	nil	(((@ b )0)((jh e k t )1)((i ng )0)))	;; ing
("obligating"	nil	(((o )1)((b l @ )0)((g ei t^ )1)((i ng )0)))	;; ing
("obliging"	nil	(((@ )0)((b l ai jh )1)((i ng )0)))	;; ing
("obliquely"	nil	(((@) 0) ((b l ii k) 1) ((l ii) 0)))	;; uul
("obliterating"	nil	(((@ )0)((b l i )1)((t^ @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("obrien"	nil	(((ou) 0) ((b r ai @ n) 1)))	;; unique
("obriens"	nil	(((ou) 0) ((b r ai @ n z) 1)))	;; unique
("obscuring"	nil	(((@ b )0)((s k y ur r )1)((i ng )0)))	;; ing
("observatorys"	nil	(((@ b) 0) ((z @@r v) 1) ((@) 0) ((t r ii z) 0)))	;; unique
("observing"	nil	(((@ b )0)((z @@r v )1)((i ng )0)))	;; ing
("obsessing"	nil	(((@ b )0)((s e s )1)((i ng )0)))	;; ing
("obsolescing"	nil	(((o b )1)((s @ )0)((l e s )1)((i ng )0)))	;; ing
("obstructing"	nil	(((@ b )0)((s t r uh k t )1)((i ng )0)))	;; ing
("obtaining"	nil	(((@ b )0)((t ei n )1)((i ng )0)))	;; ing
("obtruding"	nil	(((@ b )0)((t r uu d )1)((i ng )0)))	;; ing
("obviating"	nil	(((o b )1)((v iy )0)((ei t^ )1)((i ng )0)))	;; ing
("occams"	nil	(((o) 1) ((k @ m z) 0)))	;; unique
("occasioning"	nil	(((@ )0)((k ei )1)((zh n! )0)((i ng )0)))	;; ing
("occluding"	nil	(((@ )0)((k l uu d )1)((i ng )0)))	;; ing
("occupying"	nil	(((o )1)((k y uw )0)((p ai )1)((i ng )0)))	;; ing
("occurring"	nil	(((@ )0)((k @@r r )1)((i ng )0)))	;; ing
("oceangoing"	nil	(((ou )1)((sh n! )0)((g ou )1)((i ng )0)))	;; ing
("oclock"	nil	(((@) 0) ((k l o k) 1)))	;; unique
("oconnell"	nil	(((ou) 0) ((k o) 1) ((n l!) 0)))	;; unique
("oconner"	nil	(((ou) 0) ((k o) 1) ((n @) 0)))	;; unique
("oconnor"	nil	(((ou) 0) ((k o) 1) ((n @) 0)))	;; unique
("oconnors"	nil	(((ou) 0) ((k o) 1) ((n @ z) 0)))	;; unique
("odell"	nil	(((ou) 0) ((d a l) 1)))	;; unique
("odonnell"	nil	(((ou) 0) ((d o) 1) ((n l!) 0)))	;; unique
("odwyer"	nil	(((ou) 0) ((d w ai @) 1)))	;; unique
("oer"	nil	(((ou @) 1)))	;; unique
("oeuvre"	nil	(((@@r v) 1) ((r @) 0)))	;; unique
("off-putting"	nil	(((- o f )0)((p u t^ )1)((i ng )0)))	;; ing
("offending"	nil	(((@ )0)((f e n d )1)((i ng )0)))	;; ing
("offering"	nil	(((o )1)((f @ r )0)((i ng )0)))	;; ing
("office-holder"	nil	(((o) 1) ((f @ s) 0) ((h o l d) 1) ((@) 0)))	;; oul
("office-holders"	nil	(((o) 1) ((f @ s) 0) ((h o l d) 1) ((@ z) 0)))	;; oul
("officeholder"	nil	(((o) 1) ((f @ s) 0) ((h o l d) 1) ((@) 0)))	;; oul
("officeholders"	nil	(((o) 1) ((f @ s) 0) ((h o l d) 1) ((@ z) 0)))	;; oul
("official-looking"	nil	(((@ )0)((f i )1)((sh l! )0)((l u k )1)((i ng )0)))	;; ing
("officiating"	nil	(((@ )0)((f i )1)((sh iy )0)((ei t^ )1)((i ng )0)))	;; ing
("offing"	nil	(((o f )1)((i ng )0)))	;; ing
("offloading"	nil	(((o f )1)((l ou d )1)((i ng )0)))	;; ing
("offputting"	nil	(((o f )1)((p u t^ )1)((i ng )0)))	;; ing
("offsetting"	nil	(((o f )1)((s e t^ )1)((i ng )0)))	;; ing
("ogling"	nil	(((ou )1)((g l! )0)((i ng )0)))	;; ing
("ohare"	nil	(((ou) 0) ((h ir) 1)))	;; unique
("ohares"	nil	(((ou) 0) ((h ir z) 1)))	;; unique
("ohau"	nil	(((oo) 1) ((h ow) 0)))	;; unique
("ohu"	nil	(((ou) 1) ((h uu) 0)))	;; unique
("oi"	nil	(((oo) 1) ((ii) 0))) 	;; maori
("oia"	nil	(((oo) 1) ((ii) 0) ((@) 0)))	;; unique
("oil-bearing"	nil	(((oi l )1)((b ir r )1)((i ng )0)))	;; ing
("oiling"	nil	(((oi l )1)((i ng )0)))	;; ing
("oioi"	nil	(((oo) 1) ((ii) 0) ((oo) 0) ((ii) 0)))	;; unique
("okaying"	nil	(((- ou )0)((k ei )1)((i ng )0)))	;; ing
("okeefe"	nil	(((ou) 0) ((k ii f) 1)))	;; unique
("okeoke"	nil	(((oo) 1) ((k e) 0) ((oo) 0) ((k ei) 0)))	;; unique
("olaf"	nil	(((o) 1) ((l a f) 0)))	;; oul
("olav"	nil	(((o) 1) ((l a v) 0)))	;; oul
("old"	nil	(((o l d) 1)))	;; oul
("old-fashioned"	nil	((( o l d) 0) ((f a) 1) ((sh n! d) 0)))	;; oul
("old-fashionedness"	nil	((( o l d) 0) ((f a) 1) ((sh n! d) 0) ((n @ s) 0)))	;; oul
("old-fogeyish"	nil	((( o l d) 0) ((f ou) 1) ((g ii) 0) ((i sh) 0)))	;; oul
("old-fogyish"	nil	((( o l d) 0) ((f ou) 1) ((g ii) 0) ((i sh) 0)))	;; oul
("old-style"	nil	(((o l d) 1) ((s t ai l) 0)))	;; oul
("old-time"	nil	((( o l d) 0) ((t ai m) 1)))	;; oul
("old-timer"	nil	((( o l d) 0) ((t ai m) 1) ((@) 0)))	;; oul
("old-timers"	nil	((( o l d) 0) ((t ai m) 1) ((@ z) 0)))	;; oul
("old-world"	nil	((( o l d) 0) ((w @@r l d) 1)))	;; oul
("olde"	nil	(((o l) 1) ((d ii) 0)))	;; oul
("olden"	nil	(((o l d) 1) ((n!) 0)))	;; oul
("oldenburg"	nil	(((o l) 1) ((d n!) 0) ((b @@r g) 1)))	;; oul
("older"	nil	(((o l d) 1) ((@) 0)))	;; oul
("oldest"	nil	(((o l d) 1) ((@ s t) 0)))	;; oul
("oldfashioned"	nil	((( o l d) 0) ((f a) 1) ((sh n! d) 0)))	;; oul
("oldfield"	nil	(((o l d) 1) ((f ii l d) 0)))	;; oul
("oldham"	nil	(((o l) 1) ((d @ m) 0)))	;; oul
("oldie"	nil	(((o l d) 1) ((ii) 0)))	;; oul
("oldies"	nil	(((o l d) 1) ((ii z) 0)))	;; oul
("oldish"	nil	(((o l d) 1) ((i sh) 0)))	;; oul
("oldmore"	nil	(((o l d) 1) ((m oo) 0)))	;; oul
("oldness"	nil	(((o l d) 1) ((n @ s) 0)))	;; oul
("olds"	nil	(((o l d z) 1)))	;; oul
("oldsmobile"	nil	(((o l d z) 1) ((m @) 0) ((b ii l) 1)))	;; oul
("oldster"	nil	(((o l d) 1) ((s t @) 0)))	;; oul
("oldsters"	nil	(((o l d) 1) ((s t @ z) 0)))	;; oul
("oldtimer"	nil	(((o l d) 1) ((t ai m) 1) ((@) 0)))	;; oul
("oldtimers"	nil	(((o l d) 1) ((t ai m) 1) ((@ z) 0)))	;; oul
("oldworld"	nil	((( o l d) 0) ((w @@r l d) 1)))	;; oul
("oldy"	nil	(((o l d) 1) ((ii) 0)))	;; oul
("ole"	nil	(((o) 0) ((l ei) 1)))	;; oul
("oleaginous"	nil	(((o) 1) ((l ii) 0) ((a) 1) ((jh i) 0) ((n @ s) 0)))	;; oul
("oleander"	nil	(((o) 1) ((l ii) 0) ((a n) 1) ((d @) 0)))	;; oul
("oleanders"	nil	(((o) 1) ((l ii) 0) ((a n) 1) ((d @ z) 0)))	;; oul
("oleary"	nil	(((o) 0) ((l ir) 1) ((r ii) 0)))	;; unique
("oleg"	nil	(((o) 1) ((l e g) 0)))	;; oul
("oleomargarine"	nil	(((o) 1) ((l ii) 0) ((ou) 0) ((m aa) 1) ((jh @) 0) ((r ii n) 0)))	;; oul
("oleomargarines"	nil	(((o) 1) ((l ii) 0) ((ou) 0) ((m aa) 1) ((jh @) 0) ((r ii n z) 1)))	;; oul
("olin"	nil	(((o) 1) ((l i n) 0)))	;; oul
("olivettis"	nil	(((o) 1) ((l i) 0) ((v e) 1) ((t^ ii z) 0)))	;; unique
("olsen"	nil	(((o l) 1) ((s n!) 0)))	;; oul
("olson"	nil	(((o l) 1) ((s n!) 0)))	;; oul
("olsons"	nil	(((o l) 1) ((s n! z) 0)))	;; unique
("olsson"	nil	(((o l) 1) ((s n!) 0)))	;; oul
("omalley"	nil	(((ou) 0) ((m a) 1) ((l ii) 0)))	;; unique
("ombudsmans"	nil	(((o m) 1) ((b u d z) 0) ((m @ n z) 0)))	;; unique
("omeprazole"	nil	(((@) 0) ((m e) 1) ((p r @) 0) ((z ou l) 1)))	;; unique
("omitting"	nil	(((@ )0)((m i t^ )1)((i ng )0)))	;; ing
("on-going"	nil	(((o n )1)((g ou )1)((i ng )0)))	;; ing
("on-looking"	nil	(((o n )1)((l u k )1)((i ng )0)))	;; ing
("oncoming"	nil	(((o n )1)((k - uh m )0)((i ng )0)))	;; ing
("one-year-old"	nil	(((w uh n) 1) ((y ir r) 0) ((o l d) 1)))	;; oul
("onehunga"	nil	(((ou) 0) ((n ii) 0) ((h uh ng) 1) ((@) 0)))	;; unique
("oneill"	nil	(((ou) 0) ((n ii l) 1)))	;; unique
("ongaonga"	nil	(((o ng) 1) ((ow ng) 0) ((@) 0)))	;; unique
("ongoing"	nil	(((o n )1)((g ou )1)((i ng )0)))	;; ing
("onlooking"	nil	(((o n )1)((l u k )1)((i ng )0)))	;; ing
("onrushing"	nil	(((o n )1)((r uh sh )1)((i ng )0)))	;; ing
("ontarios"	nil	(((o n) 0) ((t ir) 1) ((r ii) 0) ((ou z) 0)))	;; unique
("onyxs"	nil	(((o) 1) ((n i k s) 0) ((@ z) 0)))	;; unique
("oozing"	nil	(((uu z )1)((i ng )0)))	;; ing
("opening"	nil	(((ou )1)((p @ n )0)((i ng )0)))	;; ing
("operating"	nil	(((o )1)((p @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("operationalizing"	nil	(((o )1)((p @ )0)((r ei )1)((sh n! )0)((@ l )0)((ai z )1)((i ng )0)))	;; ing
("opining"	nil	(((@ )0)((p ai n )1)((i ng )0)))	;; ing
("oppenheims"	nil	(((o) 1) ((p @ n) 0) ((h ai m z) 1)))	;; unique
("opposing"	nil	(((@ )0)((p ou z )1)((i ng )0)))	;; ing
("oppressing"	nil	(((@ )0)((p r e s )1)((i ng )0)))	;; ing
("optimalising"	nil	(((o p )1)((t @ )0)((m l! )0)((ai z )1)((i ng )0)))	;; ing
("optimalizing"	nil	(((o p )1)((t @ )0)((m l! )0)((ai z )1)((i ng )0)))	;; ing
("optimas"	nil	(((o p) 1) ((t @) 0) ((m @ z) 0)))	;; unique
("optimising"	nil	(((o p )1)((t @ )0)((m ai z )1)((i ng )0)))	;; ing
("optimizing"	nil	(((o p )1)((t @ )0)((m ai z )1)((i ng )0)))	;; ing
("opting"	nil	(((o p t )1)((i ng )0)))	;; ing
("ora"	nil	(((oo) 1) ((r @) 0)))	;; unique
("orating"	nil	(((oo )0)((r ei t^ )1)((i ng )0)))	;; ing
("orbiting"	nil	(((oo )1)((b @ t^ )0)((i ng )0)))	;; ing
("orcharding"	nil	(((oo )1)((ch @ d )0)((i ng )0)))	;; ing
("orchestrating"	nil	(((oo )1)((k i )0)((s t r ei t^ )1)((i ng )0)))	;; ing
("ordaining"	nil	(((oo )0)((d ei n )1)((i ng )0)))	;; ing
("ordering"	nil	(((oo )1)((d @ r )0)((i ng )0)))	;; ing
("ordinating"	nil	(((oo )1)((d i n )0)((ei t^ )1)((i ng )0)))	;; ing
("oreilly"	nil	(((ou) 0) ((r ai) 1) ((l ii) 0)))	;; unique
("oreillys"	nil	(((ou) 0) ((r ai) 1) ((l ii z) 0)))	;; unique
("oreily"	nil	(((ou) 0) ((r ai) 1) ((l ii) 0)))	;; unique
("orere"	nil	(((oo) 1) ((r e) 0) ((r ei) 0)))	;; unique
("organising"	nil	(((oo )1)((g @ )0)((n ai z )1)((i ng )0)))	;; ing
("organizing"	nil	(((oo )1)((g @ )0)((n ai z )1)((i ng )0)))	;; ing
("orientating"	nil	(((oo )1)((r iy @ n t )0)((ei t^ )1)((i ng )0)))	;; ing
("orienteering"	nil	(((oo )1)((r iy @ n t )0)((ir r )1)((i ng )0)))	;; ing
("orienting"	nil	(((oo )1)((r iy )0)((e n t )1)((i ng )0)))	;; ing
("originating"	nil	(((@ )0)((r i )1)((jh @ n )0)((ei t^ )1)((i ng )0)))	;; ing
("orihou"	nil	(((oo) 1) ((r ii) 0) ((h ou) 0)))	;; unique
("oriole"	nil	(((oo) 1) ((r ii) 0) ((o l) 0)))	;; oul
("orioles"	nil	(((oo) 1) ((r ii) 0) ((o l z) 0)))	;; oul
("oriori"	nil	(((oo) 1) ((r ii) 0) ((oo) 0) ((r ii) 0)))	;; unique
("ornamenting"	nil	(((oo )1)((n @ )0)((m e n t )1)((i ng )0)))	;; ing
("oro-oro"	nil	(((oo) 1) ((r ou) 0) ((oo) 0) ((r ou) 0)))	;; unique
("orphaning"	nil	(((oo )1)((f n! )0)((i ng )0)))	;; ing
("orrs"	nil	(((oo z) 1)))	;; unique
("ortegas"	nil	(((oo) 0) ((t ei) 1) ((g @ z) 0)))	;; unique
("orthodoxys"	nil	(((oo) 1) ((th @) 0) ((d o k s) 1) ((ii z) 0)))	;; unique
("orthogonalising"	nil	(((oo )0)((th o )1)((g @ )0)((n l! )0)((ai z )1)((i ng )0)))	;; ing
("orthogonalizing"	nil	(((oo )0)((th o )1)((g @ )0)((n l! )0)((ai z )1)((i ng )0)))	;; ing
("orwells"	nil	(((oo) 1) ((w a l z) 0)))	;; unique
("os"	nil	(((ou z) 1)))	;; unique
("osakas"	nil	(((ou) 0) ((s aa) 1) ((k @ z) 0)))	;; unique
("osbornes"	nil	(((o z) 1) ((b oo n z) 0)))	;; unique
("oscillating"	nil	(((o )1)((s @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("oshea"	nil	(((ou) 0) ((sh ei) 1)))	;; unique
("ossifying"	nil	(((o )1)((s @ )0)((f ai )1)((i ng )0)))	;; ing
("ostling"	nil	(((o s )1)((l i ng )0)))	;; ing
("ostracizing"	nil	(((o )1)((s t r @ )0)((s ai z )1)((i ng )0)))	;; ing
("osullivan"	nil	(((ou) 0) ((s uh) 1) ((l @) 0) ((v n!) 0)))	;; unique
("otautahi"	nil	(((oo) 1) ((t ow) 0) ((t aa) 0) ((h ii) 0)))	;; unique
("otepoti"	nil	(((oo) 1) ((t e) 0) ((p oo) 0) ((t ii) 0)))	;; unique
("otolaryngology"	nil	(((ou) 1) ((t^ o) 0) ((l a) 1) ((r i ng) 0) ((g o) 1) ((l @) 0) ((jh ii) 0)))	;; oul
("otoole"	nil	(((ou) 0) ((t u l) 1)))	;; unique
("ottos"	nil	(((o) 1) ((t^ ou z) 0)))	;; unique
("oughtnt"	nil	(((oo t) 1) ((n! t) 0)))	;; unique
("ousting"	nil	(((ow s t )1)((i ng )0)))	;; ing
("out-performing"	nil	(((ow t )1)((p @ )0)((f oo m )1)((i ng )0)))	;; ing
("outbalancing"	nil	(((- ow t )0)((b a )1)((l @ n s )0)((i ng )0)))	;; ing
("outbargaining"	nil	(((- ow t )0)((b aa )1)((g @ n )0)((i ng )0)))	;; ing
("outbidding"	nil	(((- ow t )0)((b i d )1)((i ng )0)))	;; ing
("outbreaking"	nil	(((ow t )1)((b r ei k )1)((i ng )0)))	;; ing
("outbreeding"	nil	(((- ow t )0)((b r ii d )1)((i ng )0)))	;; ing
("outbuilding"	nil	(((ow t )1)((b i l d )1)((i ng )0)))	;; ing
("outclassing"	nil	(((- ow t )0)((k l aa s )1)((i ng )0)))	;; ing
("outcropping"	nil	(((ow t )1)((k r o p )1)((i ng )0)))	;; ing
("outdating"	nil	(((- ow t )0)((d ei t^ )1)((i ng )0)))	;; ing
("outdistancing"	nil	(((- ow t )0)((d i )1)((s t n! s )0)((i ng )0)))	;; ing
("outdoing"	nil	(((- ow t )0)((d uu )1)((i ng )0)))	;; ing
("outdrawing"	nil	(((- ow t )0)((d r oo )1)((i ng )0)))	;; ing
("outfacing"	nil	(((- ow t )0)((f ei s )1)((i ng )0)))	;; ing
("outfalling"	nil	(((- ow t )0)((f oo l )1)((i ng )0)))	;; ing
("outfitting"	nil	(((ow t )1)((f - i t^ )0)((i ng )0)))	;; ing
("outflanking"	nil	(((- ow t )0)((f l a ng k )1)((i ng )0)))	;; ing
("outflowing"	nil	(((ow t )1)((f l - ou )0)((i ng )0)))	;; ing
("outfolder"	nil	(((ow t) 1) ((f o l d) 1) ((@) 0)))	;; oul
("outfoxing"	nil	(((- ow t )0)((f o k s )1)((i ng )0)))	;; ing
("outgassing"	nil	(((- ow t )0)((g a s )1)((i ng )0)))	;; ing
("outgoing"	nil	(((- ow t )0)((g ou )1)((i ng )0)))	;; ing
("outgrowing"	nil	(((- ow t )0)((g r ou )1)((i ng )0)))	;; ing
("outguessing"	nil	(((- ow t )0)((g e s )1)((i ng )0)))	;; ing
("outgunning"	nil	(((- ow t )0)((g uh n )1)((i ng )0)))	;; ing
("outing"	nil	(((ow t^ )1)((i ng )0)))	;; ing
("outlasting"	nil	(((- ow t )0)((l aa s t )1)((i ng )0)))	;; ing
("outlawing"	nil	(((ow t )1)((l - oo )0)((i ng )0)))	;; ing
("outlaying"	nil	(((ow t )1)((l ei )1)((i ng )0)))	;; ing
("outlining"	nil	(((ow t )1)((l - ai n )0)((i ng )0)))	;; ing
("outliving"	nil	(((- ow t )0)((l i v )1)((i ng )0)))	;; ing
("outlying"	nil	(((ow t )1)((l ai )1)((i ng )0)))	;; ing
("outmaneuvering"	nil	(((ow t )1)((m @ )0)((n uu )1)((v @ r )0)((i ng )0)))	;; ing
("outmanoeuvreing"	nil	(((ow t )1)((m @ )0)((n uu )1)((v @ r )0)((i ng )0)))	;; ing
("outmanoeuvring"	nil	(((ow t )1)((m @ )0)((n uu )1)((v @ r )0)((i ng )0)))	;; ing
("outmatching"	nil	(((- ow t )0)((m a ch )1)((i ng )0)))	;; ing
("outnumbering"	nil	(((- ow t )0)((n uh m )1)((b @ r )0)((i ng )0)))	;; ing
("outpacing"	nil	(((- ow t )0)((p ei s )1)((i ng )0)))	;; ing
("outperforming"	nil	(((ow t )1)((p @ )0)((f oo m )1)((i ng )0)))	;; ing
("outplaying"	nil	(((- ow t )0)((p l ei )1)((i ng )0)))	;; ing
("outposting"	nil	(((ow t )1)((p ou s t )1)((i ng )0)))	;; ing
("outpouring"	nil	(((ow t )1)((p oo r )1)((i ng )0)))	;; ing
("outpricing"	nil	(((- ow t )0)((p r ai s )1)((i ng )0)))	;; ing
("outputting"	nil	(((ow t )1)((p - u t^ )0)((i ng )0)))	;; ing
("outracing"	nil	(((- ow t )0)((r ei s )1)((i ng )0)))	;; ing
("outraging"	nil	(((- ow t )0)((r ei jh )1)((i ng )0)))	;; ing
("outranking"	nil	(((- ow t )0)((r a ng k )1)((i ng )0)))	;; ing
("outreaching"	nil	(((ow t )1)((r ii ch )1)((i ng )0)))	;; ing
("outriding"	nil	(((- ow t )0)((r ai d )1)((i ng )0)))	;; ing
("outrunning"	nil	(((- ow t )0)((r uh n )1)((i ng )0)))	;; ing
("outselling"	nil	(((- ow t )0)((s a l )1)((i ng )0)))	;; ing
("outshining"	nil	(((- ow t )0)((sh ai n )1)((i ng )0)))	;; ing
("outsmarting"	nil	(((- ow t )0)((s m aa t^ )1)((i ng )0)))	;; ing
("outsold"	nil	((( ow t) 0) ((s o l d) 1)))	;; oul
("outsourcing"	nil	(((ow t )1)((s oo s )1)((i ng )0)))	;; ing
("outspending"	nil	(((- ow t )0)((s p e n d )1)((i ng )0)))	;; ing
("outspreading"	nil	(((- ow t )0)((s p r e d )1)((i ng )0)))	;; ing
("outstanding"	nil	(((- ow t )0)((s t a n d )1)((i ng )0)))	;; ing
("outstaring"	nil	(((- ow t )0)((s t ir r )1)((i ng )0)))	;; ing
("outstaying"	nil	(((- ow t )0)((s t ei )1)((i ng )0)))	;; ing
("outstretching"	nil	(((- ow t )0)((s t r e ch )1)((i ng )0)))	;; ing
("outstripping"	nil	(((- ow t )0)((s t r i p )1)((i ng )0)))	;; ing
("outtaking"	nil	(((ow t )1)((t ei k )1)((i ng )0)))	;; ing
("outvoting"	nil	(((- ow t )0)((v ou t^ )1)((i ng )0)))	;; ing
("outwalking"	nil	(((- ow t )0)((w oo k )1)((i ng )0)))	;; ing
("outweighing"	nil	(((- ow t )0)((w ei )1)((i ng )0)))	;; ing
("outwitting"	nil	(((- ow t )0)((w i t^ )1)((i ng )0)))	;; ing
("outworking"	nil	(((- ow t )0)((w @@r k )1)((i ng )0)))	;; ing
("over-emphasizing"	nil	(((ou )1)((v @ r )0)((e m )1)((f @ )0)((s ai z )1)((i ng )0)))	;; ing
("overachieving"	nil	(((ou )1)((v @ r )0)((@ )0)((ch ii v )1)((i ng )0)))	;; ing
("overacting"	nil	(((ou )1)((v @ r )0)((a k t )1)((i ng )0)))	;; ing
("overarching"	nil	(((ou )1)((v @ r )0)((aa ch )1)((i ng )0)))	;; ing
("overarming"	nil	(((ou )1)((v @ r )0)((aa m )1)((i ng )0)))	;; ing
("overawing"	nil	(((ou )1)((v @ r )0)((oo )1)((i ng )0)))	;; ing
("overbalancing"	nil	(((ou )1)((v @ )0)((b a )1)((l @ n s )0)((i ng )0)))	;; ing
("overbearing"	nil	(((ou )1)((v @ )0)((b ir r )1)((i ng )0)))	;; ing
("overbidding"	nil	(((ou )1)((v @ )0)((b i d )1)((i ng )0)))	;; ing
("overbooking"	nil	(((ou )1)((v @ )0)((b u k )1)((i ng )0)))	;; ing
("overbrimming"	nil	(((ou )1)((v @ )0)((b r i m )1)((i ng )0)))	;; ing
("overbudgeting"	nil	(((ou )1)((v @ )0)((b uh )1)((jh @ t^ )0)((i ng )0)))	;; ing
("overbuilding"	nil	(((ou )1)((v @ )0)((b i l d )1)((i ng )0)))	;; ing
("overburdening"	nil	(((ou )1)((v @ )0)((b @@r )1)((d n! )0)((i ng )0)))	;; ing
("overcapitalizing"	nil	(((ou )1)((v @ )0)((k a )1)((p @ )0)((t l! )0)((ai z )1)((i ng )0)))	;; ing
("overcharging"	nil	(((ou )1)((v @ )0)((ch aa jh )1)((i ng )0)))	;; ing
("overclocking"	nil	(((ou )1)((v @ )0)((k l o k )1)((i ng )0)))	;; ing
("overcoating"	nil	(((ou )1)((v @ )0)((k ou t^ )1)((i ng )0)))	;; ing
("overcoming"	nil	(((ou )1)((v @ )0)((k uh m )1)((i ng )0)))	;; ing
("overcommitting"	nil	(((ou )1)((v @ )0)((k @ )0)((m i t^ )1)((i ng )0)))	;; ing
("overcompensating"	nil	(((ou )1)((v @ )0)((k o m )1)((p @ n )0)((s ei t^ )1)((i ng )0)))	;; ing
("overcomplicating"	nil	(((ou )1)((v @ )0)((k o m )1)((p l @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("overcooking"	nil	(((ou )1)((v @ )0)((k u k )1)((i ng )0)))	;; ing
("overcosting"	nil	(((ou )1)((v @ )0)((k o s t )1)((i ng )0)))	;; ing
("overcrowding"	nil	(((ou )1)((v @ )0)((k r ow d )1)((i ng )0)))	;; ing
("overcutting"	nil	(((ou )1)((v @ )0)((k uh t^ )1)((i ng )0)))	;; ing
("overdetermining"	nil	(((ou )1)((v @ )0)((d i )0)((t @@r )1)((m i n )0)((i ng )0)))	;; ing
("overdoing"	nil	(((ou )1)((v @ )0)((d uu )1)((i ng )0)))	;; ing
("overdosing"	nil	(((ou )1)((v @ )0)((d ou s )1)((i ng )0)))	;; ing
("overdrawing"	nil	(((ou )1)((v @ )0)((d r oo )1)((i ng )0)))	;; ing
("overdressing"	nil	(((ou )1)((v @ )0)((d r e s )1)((i ng )0)))	;; ing
("overdriving"	nil	(((ou )1)((v @ )0)((d r ai v )1)((i ng )0)))	;; ing
("overeating"	nil	(((ou )1)((v @ r )0)((ii t^ )1)((i ng )0)))	;; ing
("overemphasizing"	nil	(((ou )1)((v @ r )0)((e m )1)((f @ )0)((s ai z )1)((i ng )0)))	;; ing
("overestimating"	nil	(((ou )1)((v @ r )0)((e )1)((s t @ )0)((m ei t^ )1)((i ng )0)))	;; ing
("overexciting"	nil	(((ou )1)((v @ r )0)((@ k )0)((s ai t^ )1)((i ng )0)))	;; ing
("overexerting"	nil	(((ou )1)((v @ r )0)((@ g )0)((z @@r t^ )1)((i ng )0)))	;; ing
("overexpanding"	nil	(((ou )1)((v @ r )0)((@ k )0)((s p a n d )1)((i ng )0)))	;; ing
("overexpending"	nil	(((ou )1)((v @ r )0)((@ k )0)((s p e n d )1)((i ng )0)))	;; ing
("overexploiting"	nil	(((ou )1)((v @ r )0)((@ k )0)((s p l oi t^ )1)((i ng )0)))	;; ing
("overexposing"	nil	(((ou )1)((v @ r )0)((@ k )0)((s p ou z )1)((i ng )0)))	;; ing
("overextending"	nil	(((ou )1)((v @ r )0)((@ k )0)((s t e n d )1)((i ng )0)))	;; ing
("overfeeding"	nil	(((ou )1)((v @ )0)((f ii d )1)((i ng )0)))	;; ing
("overfilling"	nil	(((ou )1)((v @ )0)((f i l )1)((i ng )0)))	;; ing
("overfinancing"	nil	(((ou )1)((v @ )0)((f ai )1)((n a n s )0)((i ng )0)))	;; ing
("overfinishing"	nil	(((ou )1)((v @ )0)((f i )1)((n i sh )0)((i ng )0)))	;; ing
("overfishing"	nil	(((ou )1)((v @ )0)((f i sh )1)((i ng )0)))	;; ing
("overfitting"	nil	(((ou )1)((v @ )0)((f i t^ )1)((i ng )0)))	;; ing
("overflourishing"	nil	(((ou )1)((v @ )0)((f l uh )1)((r i sh )0)((i ng )0)))	;; ing
("overflowing"	nil	(((ou )1)((v @ )0)((f l ou )1)((i ng )0)))	;; ing
("overflying"	nil	(((ou )1)((v @ )0)((f l ai )1)((i ng )0)))	;; ing
("overfunding"	nil	(((ou )1)((v @ )0)((f uh n d )1)((i ng )0)))	;; ing
("overgeneralizing"	nil	(((ou )1)((v @ )0)((jh e n )1)((r @ l )0)((ai z )1)((i ng )0)))	;; ing
("overgenerating"	nil	(((ou )1)((v @ )0)((jh e )1)((n @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("overgrazing"	nil	(((ou )1)((v @ )0)((g r ei z )1)((i ng )0)))	;; ing
("overgrowing"	nil	(((ou )1)((v @ )0)((g r ou )1)((i ng )0)))	;; ing
("overhanging"	nil	(((ou )1)((v @ )0)((h a ng )1)((i ng )0)))	;; ing
("overhauling"	nil	(((ou )1)((v @ )0)((h oo l )1)((i ng )0)))	;; ing
("overhearing"	nil	(((ou )1)((v @ )0)((h ir r )1)((i ng )0)))	;; ing
("overheating"	nil	(((ou )1)((v @ )0)((h ii t^ )1)((i ng )0)))	;; ing
("overinflating"	nil	(((ou )1)((v @ r )0)((i n )0)((f l ei t^ )1)((i ng )0)))	;; ing
("overinsuring"	nil	(((ou )1)((v @ r )0)((i n )0)((sh ur r )1)((i ng )0)))	;; ing
("overinvesting"	nil	(((ou )1)((v @ r )0)((i n )0)((v e s t )1)((i ng )0)))	;; ing
("overinvoicing"	nil	(((ou )1)((v @ r )0)((i n )1)((v oi s )0)((i ng )0)))	;; ing
("overkilling"	nil	(((ou )1)((v @ )0)((k i l )1)((i ng )0)))	;; ing
("overlapping"	nil	(((ou )1)((v @ )0)((l a p )1)((i ng )0)))	;; ing
("overlaying"	nil	(((ou )1)((v @ )0)((l ei )1)((i ng )0)))	;; ing
("overloading"	nil	(((ou )1)((v @ )0)((l ou d )1)((i ng )0)))	;; ing
("overlooking"	nil	(((ou )1)((v @ )0)((l u k )1)((i ng )0)))	;; ing
("overlording"	nil	(((ou )1)((v @ )0)((l oo d )1)((i ng )0)))	;; ing
("overlying"	nil	(((ou )1)((v @ )0)((l ai )1)((i ng )0)))	;; ing
("overmanning"	nil	(((ou )1)((v @ )0)((m a n )1)((i ng )0)))	;; ing
("overmastering"	nil	(((ou )1)((v @ )0)((m aa )1)((s t @ r )0)((i ng )0)))	;; ing
("overmatching"	nil	(((ou )1)((v @ )0)((m a ch )1)((i ng )0)))	;; ing
("overmining"	nil	(((ou )1)((v @ )0)((m ai n )1)((i ng )0)))	;; ing
("overmultiplying"	nil	(((ou )1)((v @ )0)((m o l )1)((t @ )0)((p l ai )1)((i ng )0)))	;; ing
("overnighting"	nil	(((ou )1)((v @ )0)((n ai t^ )1)((i ng )0)))	;; ing
("overobligating"	nil	(((ou )1)((v @ r )0)((o )1)((b l @ )0)((g ei t^ )1)((i ng )0)))	;; ing
("overpaying"	nil	(((ou )1)((v @ )0)((p ei )1)((i ng )0)))	;; ing
("overpitching"	nil	(((ou )1)((v @ )0)((p i ch )1)((i ng )0)))	;; ing
("overplaying"	nil	(((ou )1)((v @ )0)((p l ei )1)((i ng )0)))	;; ing
("overplotting"	nil	(((ou )1)((v @ )0)((p l o t^ )1)((i ng )0)))	;; ing
("overpopulating"	nil	(((ou )1)((v @ )0)((p o )1)((p y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("overpowering"	nil	(((ou )1)((v @ )0)((p ow @ r )1)((i ng )0)))	;; ing
("overpraising"	nil	(((ou )1)((v @ )0)((p r ei z )1)((i ng )0)))	;; ing
("overprescribing"	nil	(((ou )1)((v @ )0)((p r i )0)((s k r ai b )1)((i ng )0)))	;; ing
("overpricing"	nil	(((ou )1)((v @ )0)((p r ai s )1)((i ng )0)))	;; ing
("overprinting"	nil	(((ou )1)((v @ )0)((p r i n t )1)((i ng )0)))	;; ing
("overproducing"	nil	(((ou )1)((v @ )0)((p r @ )0)((d y uu s )1)((i ng )0)))	;; ing
("overprogrammeing"	nil	(((ou )1)((v @ )0)((p r ou )1)((g r a m )0)((i ng )0)))	;; ing
("overprogramming"	nil	(((ou )1)((v @ )0)((p r ou )1)((g r a m )0)((i ng )0)))	;; ing
("overpronouncing"	nil	(((ou )1)((v @ )0)((p r @ )0)((n ow n s )1)((i ng )0)))	;; ing
("overprotecting"	nil	(((ou )1)((v @ )0)((p r @ )0)((t e k t )1)((i ng )0)))	;; ing
("overpumping"	nil	(((ou )1)((v @ )0)((p uh m p )1)((i ng )0)))	;; ing
("overranking"	nil	(((ou )1)((v @ )0)((r a ng k )1)((i ng )0)))	;; ing
("overrating"	nil	(((ou )1)((v @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("overreaching"	nil	(((ou )1)((v @ )0)((r ii ch )1)((i ng )0)))	;; ing
("overreacting"	nil	(((ou )1)((v @ )0)((r iy )0)((a k t )1)((i ng )0)))	;; ing
("overrefining"	nil	(((ou )1)((v @ )0)((r i )0)((f ai n )1)((i ng )0)))	;; ing
("overregulating"	nil	(((ou )1)((v @ )0)((r e )1)((g y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("overriding"	nil	(((ou )1)((v @ )0)((r ai d )1)((i ng )0)))	;; ing
("overruling"	nil	(((ou )1)((v @ )0)((r @ l )1)((i ng )0)))	;; ing
("overrunning"	nil	(((ou )1)((v @ )0)((r uh n )1)((i ng )0)))	;; ing
("oversampling"	nil	(((ou )1)((v @ )0)((s aa m )1)((p l! )0)((i ng )0)))	;; ing
("oversaturating"	nil	(((ou )1)((v @ )0)((s a )1)((ch @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("overseeing"	nil	(((ou )1)((v @ )0)((s ii )1)((i ng )0)))	;; ing
("overselling"	nil	(((ou )1)((v @ )0)((s a l )1)((i ng )0)))	;; ing
("oversewing"	nil	(((ou )1)((v @ )0)((s ou )1)((i ng )0)))	;; ing
("overshadowing"	nil	(((ou )1)((v @ )0)((sh a )1)((d ou )0)((i ng )0)))	;; ing
("overshooting"	nil	(((ou )1)((v @ )0)((sh uu t^ )1)((i ng )0)))	;; ing
("oversimplifying"	nil	(((ou )1)((v @ )0)((s i m )1)((p l @ )0)((f ai )1)((i ng )0)))	;; ing
("oversizing"	nil	(((ou )1)((v @ )0)((s ai z )1)((i ng )0)))	;; ing
("oversleeping"	nil	(((ou )1)((v @ )0)((s l ii p )1)((i ng )0)))	;; ing
("oversold"	nil	(((ou) 1) ((v @) 0) ((s o l d) 1)))	;; oul
("overspecializing"	nil	(((ou )1)((v @ )0)((s p e )1)((sh l! )0)((ai z )1)((i ng )0)))	;; ing
("overspecifying"	nil	(((ou )1)((v @ )0)((s p e )1)((s @ )0)((f ai )1)((i ng )0)))	;; ing
("overspeculating"	nil	(((ou )1)((v @ )0)((s p e )1)((k y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("overspending"	nil	(((ou )1)((v @ )0)((s p e n d )1)((i ng )0)))	;; ing
("overspilling"	nil	(((ou )1)((v @ )0)((s p i l )1)((i ng )0)))	;; ing
("overspreading"	nil	(((ou )1)((v @ )0)((s p r e d )1)((i ng )0)))	;; ing
("overstaffing"	nil	(((ou )1)((v @ )0)((s t aa f )1)((i ng )0)))	;; ing
("overstating"	nil	(((ou )1)((v @ )0)((s t ei t^ )1)((i ng )0)))	;; ing
("overstaying"	nil	(((ou )1)((v @ )0)((s t ei )1)((i ng )0)))	;; ing
("overstepping"	nil	(((ou )1)((v @ )0)((s t e p )1)((i ng )0)))	;; ing
("overstocking"	nil	(((ou )1)((v @ )0)((s t o k )1)((i ng )0)))	;; ing
("overstraining"	nil	(((ou )1)((v @ )0)((s t r ei n )1)((i ng )0)))	;; ing
("overstressing"	nil	(((ou )1)((v @ )0)((s t r e s )1)((i ng )0)))	;; ing
("overstretching"	nil	(((ou )1)((v @ )0)((s t r e ch )1)((i ng )0)))	;; ing
("overstriking"	nil	(((ou )1)((v @ )0)((s t r ai k )1)((i ng )0)))	;; ing
("overstuffing"	nil	(((ou )1)((v @ )0)((s t uh f )1)((i ng )0)))	;; ing
("oversubscribing"	nil	(((ou )1)((v @ )0)((s @ b )0)((s k r ai b )1)((i ng )0)))	;; ing
("oversupplying"	nil	(((ou )1)((v @ )0)((s @ )0)((p l ai )1)((i ng )0)))	;; ing
("overtaking"	nil	(((ou )1)((v @ )0)((t ei k )1)((i ng )0)))	;; ing
("overtaxing"	nil	(((ou )1)((v @ )0)((t a k s )1)((i ng )0)))	;; ing
("overthrowing"	nil	(((ou )1)((v @ )0)((th r ou )1)((i ng )0)))	;; ing
("overtons"	nil	(((ou) 1) ((v @) 0) ((t^ @ n z) 0)))	;; unique
("overtopping"	nil	(((ou )1)((v @ )0)((t o p )1)((i ng )0)))	;; ing
("overtrading"	nil	(((ou )1)((v @ )0)((t r ei d )1)((i ng )0)))	;; ing
("overturning"	nil	(((ou )1)((v @ )0)((t @@r n )1)((i ng )0)))	;; ing
("overusing"	nil	(((ou )1)((v @ )0)((y uu z )1)((i ng )0)))	;; ing
("overweening"	nil	(((ou )1)((v @ )0)((w ii n )1)((i ng )0)))	;; ing
("overweighting"	nil	(((ou )1)((v @ )0)((w ei t^ )1)((i ng )0)))	;; ing
("overwhelming"	nil	(((ou )1)((v @ )0)((w a l m )1)((i ng )0)))	;; ing
("overworking"	nil	(((ou )1)((v @ )0)((w @@r k )1)((i ng )0)))	;; ing
("overwriting"	nil	(((ou )1)((v @ )0)((r ai t^ )1)((i ng )0)))	;; ing
("ovulating"	nil	(((o )1)((v y @ l )0)((ei t^ )1)((i ng )0)))	;; ing
("owing"	nil	(((ou )1)((i ng )0)))	;; ing
("owning"	nil	(((ou n )1)((i ng )0)))	;; ing
("oxidating"	nil	(((o k )1)((s @ d )0)((ei t^ )1)((i ng )0)))	;; ing
("oxidising"	nil	(((o k )1)((s @ d )0)((ai z )1)((i ng )0)))	;; ing
("oxidizing"	nil	(((o k )1)((s @ d )0)((ai z )1)((i ng )0)))	;; ing
("oxygenating"	nil	(((o k )1)((s i )0)((jh @ n )0)((ei t^ )1)((i ng )0)))	;; ing
("oxygenising"	nil	(((o k )1)((s i )0)((jh @ n )0)((ai z )1)((i ng )0)))	;; ing
("oxygenizing"	nil	(((o k )1)((s i )0)((jh @ n )0)((ai z )1)((i ng )0)))	;; ing
("pacemaking"	nil	(((p ei s )1)((m ei k )1)((i ng )0)))	;; ing
("pacesetting"	nil	(((p ei s )1)((s e t^ )1)((i ng )0)))	;; ing
("pacifying"	nil	(((p a )1)((s @ )0)((f ai )1)((i ng )0)))	;; ing
("pacing"	nil	(((p ei s )1)((i ng )0)))	;; ing
("packaging"	nil	(((p a k )1)((@ jh )0)((i ng )0)))	;; ing
("packards"	nil	(((p a) 1) ((k aa d z) 0)))	;; unique
("packeting"	nil	(((p a k )1)((@ t^ )0)((i ng )0)))	;; ing
("packetizing"	nil	(((p a k )1)((@ t )0)((ai z )1)((i ng )0)))	;; ing
("packing"	nil	(((p a k )1)((i ng )0)))	;; ing
("pacs"	nil	(((p a k s) 1)))	;; unique
("padding"	nil	(((p a d )1)((i ng )0)))	;; ing
("paddling"	nil	(((p a )1)((d l! )0)((i ng )0)))	;; ing
("padlocking"	nil	(((p a d )1)((l o k )1)((i ng )0)))	;; ing
("paepae"	nil	(((p aa) 1) ((e) 0) ((p aa) 0) ((ei) 0)))	;; unique
("pagebreaking"	nil	(((p ei jh )1)((b r ei k )1)((i ng )0)))	;; ing
("pageing"	nil	(((p ei jh )1)((i ng )0)))	;; ing
("pagemakers"	nil	(((p ei jh) 1) ((m ei k) 1) ((@ z) 0)))	;; unique
("paginating"	nil	(((p a )1)((jh @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("paging"	nil	(((p ei jh )1)((i ng )0)))	;; ing
("pahautea"	nil	(((p aa) 1) ((h ow) 0) ((t e) 1) ((@) 0)))	;; unique
("pai"	nil	(((p ai) 1)))	;; unique
("paikaka"	nil	(((p ai) 0) ((k aa) 1) ((k @) 0)))	;; unique
("paining"	nil	(((p ei n )1)((i ng )0)))	;; ing
("painstaking"	nil	(((p ei n )1)((s t ei k )1)((i ng )0)))	;; ing
("painting"	nil	(((p ei n t )1)((i ng )0)))	;; ing
("pairing"	nil	(((p ir r )1)((i ng )0)))	;; ing
("pakaha"	nil	(((p aa) 0) ((k aa) 0) ((h aa) 1)))	;; unique
("pakaru"	nil	(((p aa) 1) ((k aa) 0) ((r uu) 0)))	;; unique
("pake"	nil	(((p aa) 1) ((k ii  ) 0)))	;; unique
("pakeha"	nil	(((p aa) 1) ((k ii) 0) ((h aa) 0)))	;; unique
("paketi"	nil	(((p aa) 1) ((k @) 0) ((t ii) 0)))	;; unique
("pakihi"	nil	(((p aa) 1) ((k @) 0) ((h ii) 0)))	;; unique
("pakipaki"	nil	(((p aa) 1) ((k ii) 0) ((p aa) 1) ((k ii) 0)))	;; unique
("pakirikiri"	nil	(((p aa) 1) ((k ii) 0) ((r ii) 0) ((k ii) 0) ((r ii) 0)))	;; unique
("pakistans"	nil	(((p a) 1) ((k i) 0) ((s t aa n z) 1)))	;; unique
("pakurakura"	nil	(((p aa) 1) ((k uu) 0) ((r aa) 0) ((k uu) 0) ((r @) 0)))	;; unique
("palatalising"	nil	(((p a )1)((l @ t )0)((l! )0)((ai z )1)((i ng )0)))	;; ing
("palatalizing"	nil	(((p a )1)((l @ t )0)((l! )0)((ai z )1)((i ng )0)))	;; ing
("palestines"	nil	(((p a) 1) ((l @) 0) ((s t ai n z) 0)))	;; unique
("paling"	nil	(((p ei l )1)((i ng )0)))	;; ing
("palliating"	nil	(((p a )1)((l iy )0)((ei t^ )1)((i ng )0)))	;; ing
("palling"	nil	(((p oo l )1)((i ng )0)))	;; ing
("palmers"	nil	(((p aa) 1) ((m @ z) 0)))	;; unique
("palming"	nil	(((p aa m )1)((i ng )0)))	;; ing
("palpitating"	nil	(((p a l )1)((p @ )0)((t ei t^ )1)((i ng )0)))	;; ing
("pampering"	nil	(((p a m )1)((p @ r )0)((i ng )0)))	;; ing
("pamphleteering"	nil	(((p a m )1)((f l @ t )0)((ir r )1)((i ng )0)))	;; ing
("pams"	nil	(((p a m z) 1)))	;; unique
("panamas"	nil	(((p a) 1) ((n @) 0) ((m aa z) 0)))	;; unique
("panapana"	nil	(((p aa) 1) ((n @) 0) ((p aa) 1) ((n @) 0)))	;; unique
("panasonics"	nil	(((p a) 1) ((n @) 0) ((s o) 1) ((n i k s) 0)))	;; unique
("pancaking"	nil	(((p a ng )1)((k ei k )1)((i ng )0)))	;; ing
("pandemics"	nil	(((p a n) 0) ((d e) 1) ((m i k s) 0)))	;; unique
("pandering"	nil	(((p a n )1)((d @ r )0)((i ng )0)))	;; ing
("pandoras"	nil	(((p a n) 0) ((d oo) 1) ((r @ z) 0)))	;; unique
("paneling"	nil	(((p a )1)((n l! )0)((i ng )0)))	;; ing
("panelling"	nil	(((p a )1)((n l! )0)((i ng )0)))	;; ing
("panhandling"	nil	(((p a n )1)((h a n )1)((d l! )0)((i ng )0)))	;; ing
("panicking"	nil	(((p a )1)((n i k )0)((i ng )0)))	;; ing
("panning"	nil	(((p a n )1)((i ng )0)))	;; ing
("panokonoko"	nil	(((p aa) 0) ((n oo) 1) ((k oo) 0) ((n oo) 0) ((k oo) 0)))	;; unique
("panting"	nil	(((p a n t )1)((i ng )0)))	;; ing
("pantomiming"	nil	(((p a n )1)((t @ )0)((m ai m )1)((i ng )0)))	;; ing
("panui"	nil	(((p aa) 1) ((n uu) 0) ((ii) 0)))	;; unique
("papa"	nil	(((p aa) 1) ((p @) 0))) 	;; maori
("papa-i-oea"	nil	(((p aa) 0) ((p ai) 0) ((oo) 0) ((e) 0) ((@) 0)))	;; unique
("papakainga"	nil	(((p aa) 1) ((p aa) 0) ((k ai ng) 1) ((@) 0)))	;; unique
("papango"	nil	(((p aa) 1) ((p uh ng) 0) ((oo) 0)))	;; unique
("papanoko"	nil	(((p aa) 1) ((p aa) 0) ((n oo) 0) ((k oo) 0)))	;; unique
("papataniwhaniwha"	nil	(((p aa) 1) ((p aa) 0) ((t aa) 0) ((n ii) 1) ((f aa) 0) ((n ii) 0) ((f @) 0)))	;; unique
("papatuanuku"	nil	(((p aa) 1) ((p @) 0) ((t uu) 1) ((@) 0) ((n uu) 1) ((k uu) 0)))	;; unique
("papauma"	nil	(((p aa) 1) ((p ow) 0) ((m @) 0)))	;; unique
("paperfolding"	nil	(((p ei) 1) ((p @) 0) ((f o l d) 1) ((i ng) 0)))	;; oul
("paperhanging"	nil	(((p ei )1)((p @ )0)((h a ng )1)((i ng )0)))	;; ing
("papering"	nil	(((p ei )1)((p @ r )0)((i ng )0)))	;; ing
("papermaking"	nil	(((p ei )1)((p @ )0)((m ei k )1)((i ng )0)))	;; ing
("paracetamol"	nil	(((p a) 1) ((r @) 0) ((s ii) 1) ((t @) 0) ((m o l) 0)))	;; unique
("parachuting"	nil	(((p a )1)((r @ )0)((sh uu t^ )1)((i ng )0)))	;; ing
("parading"	nil	(((p @ )0)((r ei d )1)((i ng )0)))	;; ing
("paradoxs"	nil	(((p a) 1) ((r @) 0) ((d o k s) 0) ((@ z) 0)))	;; unique
("paraerae"	nil	(((p aa) 0) ((r aa) 1) ((e) 0) ((r aa) 0) ((ei) 0)))	;; unique
("paragliding"	nil	(((p a )1)((r @ )0)((g l ai d )1)((i ng )0)))	;; ing
("paragraphing"	nil	(((p a )1)((r @ )0)((g r aa f )1)((i ng )0)))	;; ing
("paraguays"	nil	(((p a) 1) ((r @) 0) ((g w ai z) 1)))	;; unique
("paraha"	nil	(((p aa) 1) ((r aa) 0) ((h aa) 0)))	;; unique
("paraki"	nil	(((p aa) 1) ((r aa) 0) ((k ii) 0)))	;; unique
("parallaxs"	nil	(((p a) 1) ((r @) 0) ((l a k s) 1) ((@ z) 0)))	;; unique
("paralleling"	nil	(((p a )1)((r @ )0)((l a l )1)((i ng )0)))	;; ing
("parallelising"	nil	(((p a )1)((r @ )0)((l a l )0)((ai z )1)((i ng )0)))	;; ing
("parallelizing"	nil	(((p a )1)((r @ )0)((l a l )0)((ai z )1)((i ng )0)))	;; ing
("parallelling"	nil	(((p a )1)((r @ )0)((l a l )1)((i ng )0)))	;; ing
("paralysing"	nil	(((p a )1)((r @ )0)((l ai z )1)((i ng )0)))	;; ing
("paralyzing"	nil	(((p a )1)((r @ )0)((l ai z )1)((i ng )0)))	;; ing
("parameterizing"	nil	(((p @ )0)((r a )1)((m @ )0)((t^ @ r )0)((ai z )1)((i ng )0)))	;; ing
("parani"	nil	(((p aa) 1) ((r aa) 0) ((n ii) 0)))	;; unique
("paraoa"	nil	(((p aa) 0) ((r aa) 1) ((oo) 0) ((@) 0)))	;; unique
("parapara"	nil	(((p aa) 1) ((r aa) 0) ((p aa) 0) ((r @) 0)))	;; unique
("paraphrasing"	nil	(((p a )1)((r @ )0)((f r ei z )1)((i ng )0)))	;; ing
("parara"	nil	(((p aa) 0) ((r aa) 0) ((r aa) 1)))	;; unique
("parascending"	nil	(((p a )1)((r @ )0)((s e n d )1)((i ng )0)))	;; ing
("parasiting"	nil	(((p a )1)((r @ )0)((s ai t^ )1)((i ng )0)))	;; ing
("parasitizing"	nil	(((p a )1)((r @ )0)((s i t )0)((ai z )1)((i ng )0)))	;; ing
("parataniwha"	nil	(((p aa) 1) ((r aa) 0) ((t aa) 1) ((n ii) 0) ((f @) 0)))	;; unique
("parawai"	nil	(((p aa) 1) ((r aa) 0) ((w ai) 0)))	;; unique
("parboiling"	nil	(((p aa )1)((b oi l )1)((i ng )0)))	;; ing
("parceling"	nil	(((p aa )1)((s l! )0)((i ng )0)))	;; ing
("parcelling"	nil	(((p aa )1)((s l! )0)((i ng )0)))	;; ing
("parching"	nil	(((p aa ch )1)((i ng )0)))	;; ing
("pardoning"	nil	(((p aa )1)((d n! )0)((i ng )0)))	;; ing
("parekareka"	nil	(((p aa) 0) ((r e) 1) ((k aa) 0) ((r e) 0) ((k @) 0)))	;; unique
("paremoremo"	nil	(((p aa) 0) ((r e) 1) ((m oo) 0) ((r e) 0) ((m oo) 0)))	;; unique
("parengo"	nil	(((p aa) 1) ((r e ng) 0) ((oo) 0)))	;; unique
("parenthesising"	nil	(((p @ )0)((r e n )1)((th @ )0)((s ai z )1)((i ng )0)))	;; ing
("parenthesizing"	nil	(((p @ )0)((r e n )1)((th @ )0)((s ai z )1)((i ng )0)))	;; ing
("parenting"	nil	(((p ir )1)((r @ n t )0)((i ng )0)))	;; ing
("parera"	nil	(((p aa) 1) ((r e) 0) ((r @) 0)))	;; unique
("parihaka"	nil	(((p aa) 1) ((r ii) 0) ((h aa) 0) ((k @) 0)))	;; unique
("paring"	nil	(((p ir r )1)((i ng )0)))	;; ing
("parking"	nil	(((p aa k )1)((i ng )0)))	;; ing
("parkinsons"	nil	(((p aa) 1) ((k i n) 0) ((s n! z) 0)))	;; unique
("parleying"	nil	(((p aa )1)((l iy )0)((i ng )0)))	;; ing
("parodying"	nil	(((p a )1)((r @ )0)((d iy )0)((i ng )0)))	;; ing
("parole"	nil	(((p @) 0) ((r o l) 1)))	;; oul
("paroled"	nil	(((p @) 0) ((r o l d) 1)))	;; oul
("parolee"	nil	(((p @) 0) ((r o l) 1) ((ii) 1)))	;; oul
("parolees"	nil	(((p @) 0) ((r o l) 1) ((ii z) 1)))	;; oul
("paroles"	nil	(((p @) 0) ((r o l z) 1)))	;; oul
("parore"	nil	(((p @) 0) ((r ou) 1) ((r ii) 0)))	;; unique
("paroxetine"	nil	(((p @) 0) ((r o k) 1) ((s @) 0) ((t ii n) 1)))	;; unique
("parroting"	nil	(((p a )1)((r @ t^ )0)((i ng )0)))	;; ing
("parrs"	nil	(((p aa z) 1)))	;; unique
("parrying"	nil	(((p a )1)((r iy )0)((i ng )0)))	;; ing
("parsing"	nil	(((p aa z )1)((i ng )0)))	;; ing
("partaking"	nil	(((p aa )0)((t ei k )1)((i ng )0)))	;; ing
("participating"	nil	(((p aa )0)((t i )1)((s @ )0)((p ei t^ )1)((i ng )0)))	;; ing
("particularising"	nil	(((p @ )0)((t i )1)((k y @ )0)((l @ r )0)((ai z )1)((i ng )0)))	;; ing
("particularizing"	nil	(((p @ )0)((t i )1)((k y @ )0)((l @ r )0)((ai z )1)((i ng )0)))	;; ing
("parting"	nil	(((p aa t^ )1)((i ng )0)))	;; ing
("partitioning"	nil	(((p aa t )0)((i )1)((sh n! )0)((i ng )0)))	;; ing
("partnering"	nil	(((p aa t )1)((n @ r )0)((i ng )0)))	;; ing
("partying"	nil	(((p aa )1)((t^ iy )0)((i ng )0)))	;; ing
("partys"	nil	(((p aa) 1) ((t^ ii z) 0)))	;; unique
("paruwhatitiri"	nil	(((p aa) 1) ((r uu) 0) ((f aa) 1) ((t ii) 0) ((t ii) 0) ((r ii) 0)))	;; unique
("passing"	nil	(((p aa s )1)((i ng )0)))	;; ing
("passwording"	nil	(((p aa s )1)((w - @@r d )0)((i ng )0)))	;; ing
("pasteurising"	nil	(((p aa s )1)((ch @ )0)((r ai z )1)((i ng )0)))	;; ing
("pasteurizing"	nil	(((p aa s )1)((ch @ )0)((r ai z )1)((i ng )0)))	;; ing
("pasting"	nil	(((p ei s t )1)((i ng )0)))	;; ing
("pasturing"	nil	(((p aa s )1)((ch @ r )0)((i ng )0)))	;; ing
("pataka"	nil	(((p aa) 1) ((t aa) 0) ((k @) 0)))	;; unique
("patching"	nil	(((p a ch )1)((i ng )0)))	;; ing
("pateke"	nil	(((p aa) 1) ((t e) 0) ((k ei) 0)))	;; unique
("pateketeke"	nil	(((p aa) 0) ((t e) 1) ((k e) 0) ((t e) 0) ((k ei) 0)))	;; unique
("patenting"	nil	(((p ei )1)((t n! t )0)((i ng )0)))	;; ing
("paternalizing"	nil	(((p @ )0)((t @@r )1)((n l! )0)((ai z )1)((i ng )0)))	;; ing
("patete"	nil	(((p aa) 1) ((t e) 0) ((t ei) 0)))	;; unique
("pathfinding"	nil	(((p aa th )1)((f ai n d )1)((i ng )0)))	;; ing
("patiki"	nil	(((p aa) 1) ((t ii) 0) ((k ii) 0)))	;; unique
("patiti"	nil	(((p aa) 1) ((t i) 0) ((t ii) 0)))	;; unique
("patotara"	nil	(((p aa) 0) ((t oo) 1) ((t aa) 0) ((r @) 0)))	;; unique
("patricias"	nil	(((p @) 0) ((t r i) 1) ((sh @ z) 0)))	;; unique
("patricks"	nil	(((p a) 1) ((t r i k s) 0)))	;; unique
("patrol"	nil	(((p @) 0) ((t r o l) 1)))	;; oul
("patroled"	nil	(((p @) 0) ((t r o l d) 1)))	;; oul
("patroling"	nil	(((p @) 0) ((t r o l) 1) ((i ng) 0)))	;; oul
("patrolled"	nil	(((p @) 0) ((t r o l d) 1)))	;; oul
("patroller"	nil	(((p @) 0) ((t r o l) 1) ((@) 0)))	;; oul
("patrollers"	nil	(((p @) 0) ((t r o l) 1) ((@ z) 0)))	;; oul
("patrolling"	nil	(((p @) 0) ((t r o l) 1) ((i ng) 0)))	;; oul
("patrolman"	nil	(((p @) 0) ((t r o l) 1) ((m @ n) 0)))	;; oul
("patrolmen"	nil	(((p @) 0) ((t r o l) 1) ((m @ n) 0)))	;; oul
("patrols"	nil	(((p @) 0) ((t r o l z) 1)))	;; oul
("patronising"	nil	(((p a )1)((t r @ n )0)((ai z )1)((i ng )0)))	;; ing
("patronizing"	nil	(((p a )1)((t r @ n )0)((ai z )1)((i ng )0)))	;; ing
("pattering"	nil	(((p a )1)((t^ @ r )0)((i ng )0)))	;; ing
("patterning"	nil	(((p a )1)((t n! )0)((i ng )0)))	;; ing
("pattersons"	nil	(((p a) 1) ((t^ @) 0) ((s n! z) 0)))	;; unique
("patting"	nil	(((p a t^ )1)((i ng )0)))	;; ing
("pattons"	nil	(((p a) 1) ((t n! z) 0)))	;; unique
("patu"	nil	(((p aa) 1) ((t uu) 0)))	;; unique
("patupaiarehe"	nil	(((p aa) 0) ((t uu) 0) ((p ai) 1) ((aa) 0) ((r e) 0) ((h ei) 0)))	;; unique
("pau"	nil	(((p ow) 1)))	;; unique
("paua"	nil	(((p aa) 1) ((w @) 0)))	;; unique
("pauling"	nil	(((p oo )1)((l i ng )0)))	;; ing
("pauperising"	nil	(((p oo )1)((p @ r )0)((ai z )1)((i ng )0)))	;; ing
("pauperizing"	nil	(((p oo )1)((p @ r )0)((ai z )1)((i ng )0)))	;; ing
("pausing"	nil	(((p oo z )1)((i ng )0)))	;; ing
("paving"	nil	(((p ei v )1)((i ng )0)))	;; ing
("pawing"	nil	(((p oo )1)((i ng )0)))	;; ing
("pawnbrokering"	nil	(((p oo n )1)((b r ou k )1)((@ r )0)((i ng )0)))	;; ing
("pawnbroking"	nil	(((p oo n )1)((b r ou k )1)((i ng )0)))	;; ing
("pawning"	nil	(((p oo n )1)((i ng )0)))	;; ing
("paying"	nil	(((p ei )1)((i ng )0)))	;; ing
("payroll"	nil	(((p ei) 1) ((r o l) 0)))	;; oul
("payrolled"	nil	(((p ei) 1) ((r o l d) 0)))	;; oul
("payrolls"	nil	(((p ei) 1) ((r o l z) 0)))	;; oul
("peace-keeping"	nil	(((p ii s )1)((k ii p )1)((i ng )0)))	;; ing
("peace-offering"	nil	(((p ii s )1)((o )1)((f @ r )0)((i ng )0)))	;; ing
("peacekeeping"	nil	(((p ii s )1)((k ii p )1)((i ng )0)))	;; ing
("peaceloving"	nil	(((p ii s )1)((l uh v )1)((i ng )0)))	;; ing
("peacemaking"	nil	(((p ii s )1)((m ei k )1)((i ng )0)))	;; ing
("peaking"	nil	(((p ii k )1)((i ng )0)))	;; ing
("pealing"	nil	(((p ii l )1)((i ng )0)))	;; ing
("pearling"	nil	(((p @@r l )1)((i ng )0)))	;; ing
("pearsons"	nil	(((p ir) 1) ((s n! z) 0)))	;; unique
("pebbling"	nil	(((p e )1)((b l! )0)((i ng )0)))	;; ing
("pecking"	nil	(((p e k )1)((i ng )0)))	;; ing
("peculating"	nil	(((p e )1)((k y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("pedaling"	nil	(((p e )1)((d l! )0)((i ng )0)))	;; ing
("pedalling"	nil	(((p e )1)((d l! )0)((i ng )0)))	;; ing
("peddling"	nil	(((p e )1)((d l! )0)((i ng )0)))	;; ing
("pedestrianising"	nil	(((p @ )0)((d e )1)((s t r iy @ n )0)((ai z )1)((i ng )0)))	;; ing
("pedestrianizing"	nil	(((p @ )0)((d e )1)((s t r iy @ n )0)((ai z )1)((i ng )0)))	;; ing
("pedros"	nil	(((p e) 1) ((d r ou z) 0)))	;; unique
("peeing"	nil	(((p ii )1)((i ng )0)))	;; ing
("peeking"	nil	(((p ii k )1)((i ng )0)))	;; ing
("peeling"	nil	(((p ii l )1)((i ng )0)))	;; ing
("peep-hole"	nil	(((p ii p) 1) ((h o l) 0)))	;; oul
("peep-holes"	nil	(((p ii p) 1) ((h o l z) 0)))	;; oul
("peephole"	nil	(((p ii p) 1) ((h o l) 0)))	;; oul
("peepholed"	nil	(((p ii p) 1) ((h o l d) 0)))	;; oul
("peepholes"	nil	(((p ii p) 1) ((h o l z) 0)))	;; oul
("peeping"	nil	(((p ii p )1)((i ng )0)))	;; ing
("peering"	nil	(((p ir r )1)((i ng )0)))	;; ing
("pegging"	nil	(((p e g )1)((i ng )0)))	;; ing
("pekapeka"	nil	(((p e) 1) ((k aa) 0) ((p e) 0) ((k @) 0)))	;; unique
("pelleting"	nil	(((p a )1)((l @ t^ )0)((i ng )0)))	;; ing
("pelting"	nil	(((p a l t )1)((i ng )0)))	;; ing
("pembrokes"	nil	(((p e m) 1) ((b r u k s) 0)))	;; unique
("pen-holder"	nil	(((p e n) 1) ((h o l d) 1) ((@) 0)))	;; oul
("penalising"	nil	(((p ii )1)((n l! )0)((ai z )1)((i ng )0)))	;; ing
("penalizing"	nil	(((p ii )1)((n l! )0)((ai z )1)((i ng )0)))	;; ing
("penaltys"	nil	(((p e) 1) ((n l!) 0) ((t ii z) 0)))	;; unique
("penciling"	nil	(((p e n )1)((s l! )0)((i ng )0)))	;; ing
("pencilling"	nil	(((p e n )1)((s l! )0)((i ng )0)))	;; ing
("pending"	nil	(((p e n d )1)((i ng )0)))	;; ing
("penetrating"	nil	(((p e )1)((n @ )0)((t r ei t^ )1)((i ng )0)))	;; ing
("penholder"	nil	(((p e n) 1) ((h o l d) 1) ((@) 0)))	;; oul
("penholders"	nil	(((p e n) 1) ((h o l d) 1) ((@ z) 0)))	;; oul
("penitentiarys"	nil	(((p e) 1) ((n i) 0) ((t e n) 1) ((sh @) 0) ((r ii z) 0)))	;; unique
("penning"	nil	(((p e n )1)((i ng )0)))	;; ing
("penny-pinching"	nil	(((p e )1)((n iy )0)((p i n ch )1)((i ng )0)))	;; ing
("penroses"	nil	(((p e n) 1) ((r ou z) 0) ((@ z) 0)))	;; unique
("peopling"	nil	(((p ii )1)((p l! )0)((i ng )0)))	;; ing
("peppering"	nil	(((p e )1)((p @ r )0)((i ng )0)))	;; ing
("pepping"	nil	(((p e p )1)((i ng )0)))	;; ing
("pepsicola"	nil	(((p e p) 1) ((s ii) 0) ((k o) 1) ((l @) 0)))	;; oul
("perambulating"	nil	(((p @ r )0)((a m )1)((b y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("perceiving"	nil	(((p @ )0)((s ii v )1)((i ng )0)))	;; ing
("perching"	nil	(((p @@r ch )1)((i ng )0)))	;; ing
("percolating"	nil	(((p @@r )1)((k @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("perei"	nil	(((p e) 1) ((r e) 0) ((ii) 0)))	;; unique
("perfecting"	nil	(((p @ )0)((f e k t )1)((i ng )0)))	;; ing
("perfectioning"	nil	(((p @ )0)((f e k )1)((sh n! )0)((i ng )0)))	;; ing
("perforating"	nil	(((p @@r )1)((f @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("performing"	nil	(((p @ )0)((f oo m )1)((i ng )0)))	;; ing
("perfuming"	nil	(((p @ )0)((f y uu m )1)((i ng )0)))	;; ing
("perilling"	nil	(((p e )1)((r @ l )0)((i ng )0)))	;; ing
("periperi"	nil	(((p e) 1) ((r ii) 0) ((p e) 1) ((r ii) 0)))	;; unique
("perishing"	nil	(((p e )1)((r i sh )0)((i ng )0)))	;; ing
("perjuring"	nil	(((p @@r )1)((jh @ r )0)((i ng )0)))	;; ing
("perking"	nil	(((p @@r k )1)((i ng )0)))	;; ing
("permeating"	nil	(((p @@r )1)((m iy )0)((ei t^ )1)((i ng )0)))	;; ing
("perming"	nil	(((p @@r m )1)((i ng )0)))	;; ing
("permitting"	nil	(((p @ )0)((m i t^ )1)((i ng )0)))	;; ing
("perpetrating"	nil	(((p @@r )1)((p @ )0)((t r ei t^ )1)((i ng )0)))	;; ing
("perpetuating"	nil	(((p @ )0)((p e )1)((ch uw )0)((ei t^ )1)((i ng )0)))	;; ing
("perplexing"	nil	(((p @ )0)((p l e k s )1)((i ng )0)))	;; ing
("perrys"	nil	(((p e) 1) ((r ii z) 0)))	;; unique
("persching"	nil	(((p @@r )1)((sh i ng )0)))	;; ing
("persecuting"	nil	(((p @@r )1)((s @ )0)((k y uu t^ )1)((i ng )0)))	;; ing
("persevering"	nil	(((p @@r )1)((s @ )0)((v ir r )1)((i ng )0)))	;; ing
("pershing"	nil	(((p @@r )1)((sh i ng )0)))	;; ing
("persistences"	nil	(((p @) 0) ((s i s t) 1) ((n! s) 0) ((@ z) 0)))	;; unique
("persisting"	nil	(((p @ )0)((s i s t )1)((i ng )0)))	;; ing
("personalising"	nil	(((p @@r )1)((s n! )0)((@ l )0)((ai z )1)((i ng )0)))	;; ing
("personalizing"	nil	(((p @@r )1)((s n! )0)((@ l )0)((ai z )1)((i ng )0)))	;; ing
("personating"	nil	(((p @@r )1)((s n! )0)((ei t^ )1)((i ng )0)))	;; ing
("personifying"	nil	(((p @ )0)((s o n )1)((@ )0)((f ai )1)((i ng )0)))	;; ing
("personnels"	nil	(((p @@r) 1) ((s n!) 0) ((a l z) 1)))	;; unique
("perspiring"	nil	(((p @ )0)((s p ai @ r )1)((i ng )0)))	;; ing
("persuading"	nil	(((p @ )0)((s w ei d )1)((i ng )0)))	;; ing
("pertaining"	nil	(((p @ )0)((t ei n )1)((i ng )0)))	;; ing
("perturbing"	nil	(((p @ )0)((t @@r b )1)((i ng )0)))	;; ing
("perus"	nil	(((p @) 0) ((r uu z) 1)))	;; unique
("perusing"	nil	(((p @ )0)((r uu z )1)((i ng )0)))	;; ing
("pervading"	nil	(((p @ )0)((v ei d )1)((i ng )0)))	;; ing
("perverting"	nil	(((p @ )0)((v @@r t^ )1)((i ng )0)))	;; ing
("pestering"	nil	(((p e )1)((s t @ r )0)((i ng )0)))	;; ing
("petering"	nil	(((p ii )1)((t^ @ r )0)((i ng )0)))	;; ing
("petersens"	nil	(((p ii) 1) ((t^ @) 0) ((s n! z) 0)))	;; unique
("petes"	nil	(((p ii t s) 1)))	;; unique
("petitioning"	nil	(((p @ )0)((t i )1)((sh n! )0)((i ng )0)))	;; ing
("petrifying"	nil	(((p e )1)((t r @ )0)((f ai )1)((i ng )0)))	;; ing
("petroleum"	nil	(((p @) 0) ((t r o) 1) ((l ii @ m) 0)))	;; oul
("petroleum-based"	nil	(((p @) 0) ((t r o) 1) ((l ii @ m) 0) ((b ei s t) 1)))	;; oul
("petroleums"	nil	(((p @) 0) ((t r o) 1) ((l ii @ m z) 0)))	;; oul
("petting"	nil	(((p e t^ )1)((i ng )0)))	;; ing
("phasing"	nil	(((f ei z )1)((i ng )0)))	;; ing
("phelpss"	nil	(((f a l p s) 1) ((@ z) 0)))	;; unique
("philadelphias"	nil	(((f i) 1) ((l @) 0) ((d a l) 1) ((f ii @ z) 0)))	;; unique
("philandering"	nil	(((f i )0)((l a n )1)((d @ r )0)((i ng )0)))	;; ing
("philosophising"	nil	(((f @ )0)((l o )1)((s @ )0)((f ai z )1)((i ng )0)))	;; ing
("philosophizing"	nil	(((f @ )0)((l o )1)((s @ )0)((f ai z )1)((i ng )0)))	;; ing
("phoenixs"	nil	(((f ii) 1) ((n i k s) 0) ((@ z) 0)))	;; unique
("phoning"	nil	(((f ou n )1)((i ng )0)))	;; ing
("photocopying"	nil	(((f ou )1)((t^ @ )0)((k o )1)((p iy )0)((i ng )0)))	;; ing
("photographing"	nil	(((f ou )1)((t^ @ )0)((g r aa f )1)((i ng )0)))	;; ing
("photoing"	nil	(((f ou )1)((t^ ou )0)((i ng )0)))	;; ing
("photolithographic"	nil	(((f ou) 1) ((t^ o) 0) ((l i) 1) ((th @) 0) ((g r a) 1) ((f i k) 0)))	;; oul
("photolithographically"	nil	(((f ou) 1) ((t^ o) 0) ((l i) 1) ((th @) 0) ((g r a) 1) ((f i k) 0) ((l ii) 0)))	;; oul
("photolithography"	nil	(((f ou) 1) ((t^ o) 0) ((l i) 0) ((th o) 1) ((g r @) 0) ((f ii) 0)))	;; oul
("photoluminescence"	nil	(((f ou) 1) ((t^ o) 0) ((l uu) 1) ((m @) 0) ((n e s) 1) ((n! s) 0)))	;; oul
("photosensitizing"	nil	(((f ou )1)((t^ ou )0)((s e n )1)((s @ )0)((t ai z )1)((i ng )0)))	;; ing
("photosynthesizing"	nil	(((f ou )1)((t^ ou )0)((s i n )1)((th @ )0)((s ai z )1)((i ng )0)))	;; ing
("phrase-making"	nil	(((f r ei z )1)((m ei k )1)((i ng )0)))	;; ing
("phrasemaking"	nil	(((f r ei z )1)((m ei k )1)((i ng )0)))	;; ing
("phrasing"	nil	(((f r ei z )1)((i ng )0)))	;; ing
("physicking"	nil	(((f i )1)((z i k )0)((i ng )0)))	;; ing
("pia"	nil	(((p ii) 1) ((@) 0)))	;; unique
("pianola"	nil	(((p ii @) 0) ((n o) 1) ((l @) 0)))	;; oul
("pianolas"	nil	(((p ii @) 0) ((n o) 1) ((l @ z) 0)))	;; oul
("pickd"	nil	(((p i k t) 1)))	;; unique
("pickering"	nil	(((p i )1)((k @ )0)((r i ng )0)))	;; ing
("picketing"	nil	(((p i )1)((k @ t^ )0)((i ng )0)))	;; ing
("picketting"	nil	(((p i )1)((k @ t^ )0)((i ng )0)))	;; ing
("picking"	nil	(((p i k )1)((i ng )0)))	;; ing
("pickling"	nil	(((p i )1)((k l! )0)((i ng )0)))	;; ing
("pickpocketing"	nil	(((p i k )1)((p o )1)((k @ t^ )0)((i ng )0)))	;; ing
("picnicking"	nil	(((p i k )1)((n i k )0)((i ng )0)))	;; ing
("picojoule"	nil	(((p ii) 1) ((k ou) 0) ((jh u l) 1)))	;; uul
("picojoules"	nil	(((p ii) 1) ((k ou) 0) ((jh u l z) 1)))	;; uul
("picturing"	nil	(((p i k )1)((ch @ r )0)((i ng )0)))	;; ing
("piddling"	nil	(((p i )1)((d l! )0)((i ng )0)))	;; ing
("piecing"	nil	(((p ii s )1)((i ng )0)))	;; ing
("piercing"	nil	(((p ir s )1)((i ng )0)))	;; ing
("pierres"	nil	(((p ii) 0) ((ir z) 1)))	;; unique
("piffling"	nil	(((p i )1)((f l! )0)((i ng )0)))	;; ing
("pigeon-hole"	nil	(((p i) 1) ((jh @ n) 0) ((h o l) 1)))	;; oul
("pigeon-holed"	nil	(((p i) 1) ((jh @ n) 0) ((h o l d) 1)))	;; oul
("pigeon-holes"	nil	(((p i) 1) ((jh @ n) 0) ((h o l z) 1)))	;; oul
("pigeon-holing"	nil	(((p i) 1) ((jh @ ng) 0) ((h o l) 1) ((i ng) 0)))	;; oul
("pigeonhole"	nil	(((p i) 1) ((jh @ n) 0) ((h o l) 1)))	;; oul
("pigeonholed"	nil	(((p i) 1) ((jh @ n) 0) ((h o l d) 1)))	;; oul
("pigeonholer"	nil	(((p i) 1) ((jh @ n) 0) ((h o l) 1) ((@) 0)))	;; oul
("pigeonholes"	nil	(((p i) 1) ((jh @ n) 0) ((h o l z) 1)))	;; oul
("pigeonholing"	nil	(((p i) 1) ((jh @ ng) 0) ((h o l) 1) ((i ng) 0)))	;; oul
("pigging"	nil	(((p i g )1)((i ng )0)))	;; ing
("piggybacking"	nil	(((p i g )1)((iy )0)((b a k )1)((i ng )0)))	;; ing
("pigmenting"	nil	(((p i g )0)((m e n t )1)((i ng )0)))	;; ing
("pihapiharau"	nil	(((p ii) 1) ((h aa) 0) ((p ii) 1) ((h aa) 0) ((r ow) 0)))	;; unique
("pihoihoi"	nil	(((p ii) 0) ((h oo) 1) ((ii) 0) ((h oo) 0) ((ii) 0)))	;; unique
("pikau"	nil	(((p ii) 1) ((k ow) 0)))	;; unique
("pikiarero"	nil	(((p ii) 1) ((k ii) 0) ((aa) 1) ((r e) 0) ((r ou) 0)))	;; unique
("pikopiko"	nil	(((p ii) 1) ((k oo) 0) ((p ii) 0) ((k oo) 0)))	;; unique
("pikopo"	nil	(((p ii) 1) ((k oo) 0) ((p oo) 0)))	;; unique
("pilfering"	nil	(((p i l )1)((f @ r )0)((i ng )0)))	;; ing
("piling"	nil	(((p ai l )1)((i ng )0)))	;; ing
("pillaging"	nil	(((p i )1)((l i jh )0)((i ng )0)))	;; ing
("pilling"	nil	(((p i l )1)((i ng )0)))	;; ing
("pillorying"	nil	(((p i )1)((l @ )0)((r iy )0)((i ng )0)))	;; ing
("pillowing"	nil	(((p i )1)((l ou )0)((i ng )0)))	;; ing
("piloting"	nil	(((p ai )1)((l @ t^ )0)((i ng )0)))	;; ing
("pimping"	nil	(((p i m p )1)((i ng )0)))	;; ing
("pimpling"	nil	(((p i m )1)((p l! )0)((i ng )0)))	;; ing
("pinching"	nil	(((p i n ch )1)((i ng )0)))	;; ing
("pinchs"	nil	(((p i n ch) 1) ((@ z) 0)))	;; unique
("pindling"	nil	(((p i n d )1)((l i ng )0)))	;; ing
("pingao"	nil	(((p ii ng) 1) ((ow) 0)))	;; unique
("pinging"	nil	(((p i ng )1)((i ng )0)))	;; ing
("pinholder"	nil	(((p i n) 1) ((h o l d) 1) ((@) 0)))	;; oul
("pinholders"	nil	(((p i n) 1) ((h o l d) 1) ((@ z) 0)))	;; oul
("pinhole"	nil	(((p i n) 1) ((h o l) 0)))	;; oul
("pinholes"	nil	(((p i n) 1) ((h o l z) 0)))	;; oul
("pining"	nil	(((p ai n )1)((i ng )0)))	;; ing
("pinioning"	nil	(((p i )1)((n y @ n )0)((i ng )0)))	;; ing
("pinking"	nil	(((p i ng k )1)((i ng )0)))	;; ing
("pinning"	nil	(((p i n )1)((i ng )0)))	;; ing
("pinpointing"	nil	(((p i n )1)((p oi n t )1)((i ng )0)))	;; ing
("pinpricking"	nil	(((p i n )1)((p r i k )1)((i ng )0)))	;; ing
("pioke"	nil	(((p ii) 1) ((oo) 0) ((k ei) 0)))	;; unique
("pioneering"	nil	(((p ai @ )0)((n ir r )1)((i ng )0)))	;; ing
("piopio"	nil	(((p ii) 1) ((oo) 0) ((p ii) 0) ((oo) 0)))	;; unique
("pipelining"	nil	(((p ai p )1)((l ai n )1)((i ng )0)))	;; ing
("pipi"	nil	(((p i) 1) ((p ii) 0)))	;; unique
("pipiharau"	nil	(((p i) 0) ((p ii) 0) ((h aa) 1) ((r ow) 0)))	;; unique
("piping"	nil	(((p ai p )1)((i ng )0)))	;; ing
("pipipi"	nil	(((p ii) 1) ((p ii) 0) ((p ii) 0)))	;; unique
("pipiwharauroa"	nil	(((p ii) 1) ((p ii) 0) ((f aa) 0) ((r ow) 1) ((r ou) 0) ((@) 0)))	;; unique
("pipping"	nil	(((p i p )1)((i ng )0)))	;; ing
("piquing"	nil	(((p ii k )1)((i ng )0)))	;; ing
("pirating"	nil	(((p ai )1)((r @ t^ )0)((i ng )0)))	;; ing
("pirikahu"	nil	(((p i) 0) ((r ii) 0) ((k aa) 1) ((h uu) 0)))	;; unique
("piripiri"	nil	(((p ii) 1) ((r ii) 0) ((p ii) 0) ((r ii) 0)))	;; unique
("piripiriwhata"	nil	(((p ii) 1) ((r ii) 0) ((p ii) 0) ((r ii) 0) ((f aa) 1) ((t^ @) 0)))	;; unique
("pirita"	nil	(((p ii) 1) ((r ii) 0) ((t^ @) 0)))	;; unique
("pirouetting"	nil	(((p i )1)((r uw )0)((e t^ )1)((i ng )0)))	;; ing
("pis"	nil	(((p ai z) 1)))	;; unique
("pissing"	nil	(((p i s )1)((i ng )0)))	;; ing
("pistole"	nil	(((p i) 0) ((s t o l) 1)))	;; oul
("pistolling"	nil	(((p i )1)((s t l! )0)((i ng )0)))	;; ing
("pitau"	nil	(((p ii) 1) ((t ow) 0)))	;; unique
("pitching"	nil	(((p i ch )1)((i ng )0)))	;; ing
("pitoitoi"	nil	(((p ii) 0) ((t oo) 1) ((ii) 0) ((t oo) 0) ((ii) 0)))	;; unique
("pitting"	nil	(((p i t^ )1)((i ng )0)))	;; ing
("pitying"	nil	(((p i )1)((t^ iy )0)((i ng )0)))	;; ing
("pitys"	nil	(((p i) 1) ((t^ ii z) 0)))	;; unique
("piupiu"	nil	(((p y uu) 1) ((p y uu) 0)))	;; unique
("pivoting"	nil	(((p i )1)((v @ t^ )0)((i ng )0)))	;; ing
("piwaiwaka"	nil	(((p ii) 1) ((w ai) 0) ((w o) 1) ((k @) 0)))	;; unique
("piwakawaka"	nil	(((p ii) 0) ((w o) 1) ((k @) 0) ((w o) 0) ((k @) 0)))	;; unique
("piwauwau"	nil	(((p ii) 0) ((w ow) 1) ((w ow) 0)))	;; unique
("placarding"	nil	(((p l a )1)((k aa d )0)((i ng )0)))	;; ing
("placating"	nil	(((p l @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("placeholder"	nil	(((p l ei s) 1) ((h o l d) 1) ((@) 0)))	;; oul
("placeholders"	nil	(((p l ei s) 1) ((h o l d) 1) ((@ z) 0)))	;; oul
("placing"	nil	(((p l ei s )1)((i ng )0)))	;; ing
("plagiarising"	nil	(((p l ei )1)((jh @ )0)((r ai z )1)((i ng )0)))	;; ing
("plagiarizing"	nil	(((p l ei )1)((jh @ )0)((r ai z )1)((i ng )0)))	;; ing
("plagueing"	nil	(((p l ei g )1)((i ng )0)))	;; ing
("plaguing"	nil	(((p l ei g )1)((i ng )0)))	;; ing
("plain-looking"	nil	(((p l ei n )1)((l u k )1)((i ng )0)))	;; ing
("plaiting"	nil	(((p l a t^ )1)((i ng )0)))	;; ing
("planetarians"	nil	(((p l a) 1) ((n @ t) 0) ((ir) 1) ((r ii @ n z) 0)))	;; unique
("planing"	nil	(((p l ei n )1)((i ng )0)))	;; ing
("planking"	nil	(((p l a ng k )1)((i ng )0)))	;; ing
("planning"	nil	(((p l a n )1)((i ng )0)))	;; ing
("planting"	nil	(((p l aa n t )1)((i ng )0)))	;; ing
("plashing"	nil	(((p l a sh )1)((i ng )0)))	;; ing
("plastering"	nil	(((p l aa )1)((s t @ r )0)((i ng )0)))	;; ing
("plateauing"	nil	(((p l a )1)((t^ ou )0)((i ng )0)))	;; ing
("plating"	nil	(((p l ei t^ )1)((i ng )0)))	;; ing
("platitudinizing"	nil	(((p l a )1)((t^ @ )0)((t y uu d )1)((i )0)((n ai z )1)((i ng )0)))	;; ing
("platooning"	nil	(((p l @ )0)((t uu n )1)((i ng )0)))	;; ing
("platos"	nil	(((p l ei) 1) ((t^ ou z) 0)))	;; unique
("play-acting"	nil	(((p l ei )1)((a k t )1)((i ng )0)))	;; ing
("playacting"	nil	(((p l ei )1)((a k t )1)((i ng )0)))	;; ing
("playing"	nil	(((p l ei )1)((i ng )0)))	;; ing
("playschool"	nil	(((p l ei) 1) ((s k u l) 0)))	;; uul
("playschools"	nil	(((p l ei) 1) ((s k u l z) 0)))	;; uul
("playwriting"	nil	(((p l ei )1)((r ai t^ )1)((i ng )0)))	;; ing
("pleading"	nil	(((p l ii d )1)((i ng )0)))	;; ing
("pleasing"	nil	(((p l ii z )1)((i ng )0)))	;; ing
("pleasure-loving"	nil	(((p l e )1)((zh )0)((l uh v )1)((i ng )0)))	;; ing
("pleasuring"	nil	(((p l e )1)((zh r )0)((i ng )0)))	;; ing
("pleating"	nil	(((p l ii t^ )1)((i ng )0)))	;; ing
("pledging"	nil	(((p l e jh )1)((i ng )0)))	;; ing
("plodding"	nil	(((p l o d )1)((i ng )0)))	;; ing
("plonking"	nil	(((p l o ng k )1)((i ng )0)))	;; ing
("plopping"	nil	(((p l o p )1)((i ng )0)))	;; ing
("plotting"	nil	(((p l o t^ )1)((i ng )0)))	;; ing
("ploughing"	nil	(((p l ow )1)((i ng )0)))	;; ing
("ploughmans"	nil	(((p l ow) 1) ((m @ n z) 0)))	;; unique
("plowing"	nil	(((p l ow )1)((i ng )0)))	;; ing
("plucking"	nil	(((p l uh k )1)((i ng )0)))	;; ing
("plugging"	nil	(((p l uh g )1)((i ng )0)))	;; ing
("plughole"	nil	(((p l uh g) 1) ((h o l) 0)))	;; oul
("plugholes"	nil	(((p l uh g) 1) ((h o l z) 0)))	;; oul
("plumbing"	nil	(((p l uh m )1)((i ng )0)))	;; ing
("pluming"	nil	(((p l uu m )1)((i ng )0)))	;; ing
("plummeting"	nil	(((p l uh )1)((m @ t^ )0)((i ng )0)))	;; ing
("plummetting"	nil	(((p l uh )1)((m @ t^ )0)((i ng )0)))	;; ing
("plumping"	nil	(((p l uh m p )1)((i ng )0)))	;; ing
("plundering"	nil	(((p l uh n )1)((d @ r )0)((i ng )0)))	;; ing
("plunging"	nil	(((p l uh n jh )1)((i ng )0)))	;; ing
("plunking"	nil	(((p l uh ng k )1)((i ng )0)))	;; ing
("pluralising"	nil	(((p l ur )1)((r @ l )0)((ai z )1)((i ng )0)))	;; ing
("pluralizing"	nil	(((p l ur )1)((r @ l )0)((ai z )1)((i ng )0)))	;; ing
("pluss"	nil	(((p l uh s) 1) ((@ z) 0)))	;; unique
("plutarchs"	nil	(((p l uu) 1) ((t^ aa k s) 0)))	;; unique
("plutos"	nil	(((p l uu) 1) ((t^ ou z) 0)))	;; unique
("plying"	nil	(((p l ai )1)((i ng )0)))	;; ing
("poaching"	nil	(((p ou ch )1)((i ng )0)))	;; ing
("poaka"	nil	(((p oo) 1) ((aa) 0) ((k @) 0)))	;; unique
("pocketing"	nil	(((p o )1)((k @ t^ )0)((i ng )0)))	;; ing
("pockmarking"	nil	(((p o k )1)((m aa k )1)((i ng )0)))	;; ing
("poes"	nil	(((p ou z) 1)))	;; unique
("pogoing"	nil	(((p ou )1)((g ou )0)((i ng )0)))	;; ing
("poha"	nil	(((p oo) 1) ((h aa) 0)))	;; unique
("pohowera"	nil	(((p oo) 1) ((h oo) 0) ((w e) 0) ((r @) 0)))	;; unique
("pohue"	nil	(((p oo) 1) ((h uu) 0) ((ei) 0)))	;; unique
("pohuiakaroa"	nil	(((p oo) 1) ((h uu) 0) ((ii) 0) ((aa) 0) ((k aa) 0) ((r ou) 0) ((@) 0)))	;; unique
("pohutukawa"	nil	(((p @) 0) ((h uu) 0) ((t^ @) 0) ((k aa) 1) ((w @) 0)))	;; unique
("poi"	nil	(((p oi) 1)))	;; unique
("point-scoring"	nil	(((p oi n t )1)((s k oo r )1)((i ng )0)))	;; ing
("pointing"	nil	(((p oi n t )1)((i ng )0)))	;; ing
("poising"	nil	(((p oi z )1)((i ng )0)))	;; ing
("poisoning"	nil	(((p oi )1)((z n! )0)((i ng )0)))	;; ing
("pokaka"	nil	(((p oo) 1) ((k aa) 0) ((k @) 0)))	;; unique
("pokarekare"	nil	(((p ou) 0) ((k aa) 1) ((r e) 0) ((k aa) 1) ((r ei) 0)))	;; unique
("pokeka"	nil	(((p oo) 1) ((k e) 0) ((k @) 0)))	;; unique
("poking"	nil	(((p ou k )1)((i ng )0)))	;; ing
("poland"	nil	(((p o) 1) ((l @ n d) 0)))	;; oul
("polands"	nil	(((p o) 1) ((l @ n d z) 0)))	;; unique
("polar"	nil	(((p o l) 1) ((@) 0)))	;; oul
("polarbear"	nil	(((p o l) 1) ((@) 0) ((b e @) 1)))	;; beer-bear, oul
("polarbears"	nil	(((p o l) 1) ((@) 0) ((b e @ z) 1)))	;; beer-bear, oul
("polarimeter"	nil	(((p o l) 1) ((@ r) 0) ((i) 1) ((m @) 0) ((t^ @) 0)))	;; oul
("polarimeters"	nil	(((p o l) 1) ((@ r) 0) ((i) 1) ((m @) 0) ((t^ @ z) 0)))	;; oul
("polarisable"	nil	(((p o l) 1) ((@ r) 0) ((ai z) 1) ((@) 0) ((b l!) 0)))	;; oul
("polarisation"	nil	(((p o l) 1) ((@ r) 0) ((i z) 0) ((ei) 1) ((sh n!) 0)))	;; oul
("polariscope"	nil	(((p o l) 0) ((a) 1) ((r @) 0) ((s k ou p) 1)))	;; oul
("polarise"	nil	(((p o l) 1) ((@ r) 0) ((ai z) 0)))	;; oul
("polarised"	nil	(((p o l) 1) ((@ r) 0) ((ai z d) 0)))	;; oul
("polariser"	nil	(((p o l) 1) ((@ r) 0) ((ai z) 1) ((@) 0)))	;; oul
("polarisers"	nil	(((p o l) 1) ((@ r) 0) ((ai z) 1) ((@ z) 0)))	;; oul
("polarises"	nil	(((p o l) 1) ((@ r) 0) ((ai z) 1) ((@ z) 0)))	;; oul
("polarising"	nil	(((p o l) 1) ((@ r) 0) ((ai z) 1) ((i ng) 0)))	;; oul
("polarities"	nil	(((p o l) 0) ((a r) 1) ((@) 0) ((t^ ii z) 0)))	;; oul
("polarity"	nil	(((p o l) 0) ((a r) 1) ((@) 0) ((t^ ii) 0)))	;; oul
("polarizability"	nil	(((p o l) 1) ((@ r) 0) ((ai z) 1) ((@) 0) ((b i l) 1) ((@) 0) ((t^ ii) 0)))	;; oul
("polarizable"	nil	(((p o l) 1) ((@ r) 0) ((i z) 0) ((@) 0) ((b l!) 0)))	;; oul
("polarization"	nil	(((p o l) 1) ((@ r) 0) ((i z) 0) ((ei) 1) ((sh n!) 0)))	;; oul
("polarizations"	nil	(((p o l) 1) ((@ r) 0) ((i z) 0) ((ei) 1) ((sh n! z) 0)))	;; oul
("polarize"	nil	(((p o l) 1) ((@ r) 0) ((ai z) 0)))	;; oul
("polarized"	nil	(((p o l) 1) ((@ r) 0) ((ai z d) 0)))	;; oul
("polarizer"	nil	(((p o l) 1) ((@ r) 0) ((ai z) 1) ((@) 0)))	;; oul
("polarizers"	nil	(((p o l) 1) ((@ r) 0) ((ai z) 1) ((@ z) 0)))	;; oul
("polarizes"	nil	(((p o l) 1) ((@ r) 0) ((ai z) 1) ((@ z) 0)))	;; oul
("polarizing"	nil	(((p o l) 1) ((@ r) 0) ((ai z) 1) ((i ng) 0)))	;; oul
("polarogram"	nil	(((p o l) 0) ((a r) 1) ((@) 0) ((g r a m) 1)))	;; oul
("polarograph"	nil	(((p o l) 0) ((a r) 1) ((@) 0) ((g r aa f) 1)))	;; oul
("polarographs"	nil	(((p o l) 0) ((a r) 1) ((@) 0) ((g r aa f s) 1)))	;; oul
("polarography"	nil	(((p o l) 1) ((@ r) 0) ((o) 1) ((g r @) 0) ((f ii) 0)))	;; oul
("polaroid"	nil	(((p o) 1) ((l @) 0) ((r oi d) 0)))	;; oul
("pole"	nil	(((p o l) 1)))	;; oul
("poleax"	nil	(((p o l) 1) (( a k s) 0)))	;; oul
("poleaxe"	nil	(((p o l) 1) (( a k s) 0)))	;; oul
("poleaxed"	nil	(((p o l) 1) (( a k s t) 0)))	;; oul
("poleaxes"	nil	(((p o l) 1) ((a k s) 1) ((@ z) 0)))	;; oul
("polecat"	nil	(((p o l) 1) ((k a t) 0)))	;; oul
("polecats"	nil	(((p o l) 1) ((k a t s) 0)))	;; oul
("poles"	nil	(((p o l z) 1)))	;; oul
("policemans"	nil	(((p @) 0) ((l ii s) 1) ((m @ n z) 0)))	;; unique
("policemens"	nil	(((p @) 0) ((l ii s) 1) ((m @ n z) 0)))	;; unique
("policing"	nil	(((p @ )0)((l ii s )1)((i ng )0)))	;; ing
("policy-making"	nil	(((p o )1)((l @ )0)((s iy )0)((m ei k )1)((i ng )0)))	;; ing
("policyholder"	nil	(((p o) 1) ((l @) 0) ((s ii) 0) ((h o l d) 1) ((@) 0)))	;; oul
("policyholders"	nil	(((p o) 1) ((l @) 0) ((s ii) 0) ((h o l d) 1) ((@ z) 0)))	;; oul
("policymaking"	nil	(((p o )1)((l @ )0)((s iy )0)((m ei k )1)((i ng )0)))	;; ing
("polio"	nil	(((p o) 1) ((l ii) 0) ((ou) 0)))	;; oul
("poliomyelitis"	nil	(((p o) 1) ((l ii) 0) ((ou) 0) ((m ai @) 1) ((l ai) 1) ((t^ @ s) 0)))	;; oul
("polis"	nil	(((p o) 1) ((l i s) 0)))	;; oul
("polishing"	nil	(((p o )1)((l i sh )0)((i ng )0)))	;; ing
("politicising"	nil	(((p o )1)((l @ )0)((t^ i s )0)((ai z )1)((i ng )0)))	;; ing
("politicizing"	nil	(((p @ )0)((l i )1)((t^ i s )0)((ai z )1)((i ng )0)))	;; ing
("politicking"	nil	(((p o )1)((l @ )0)((t i k )1)((i ng )0)))	;; ing
("poll"	nil	(((p o l) 1)))	;; oul
("poll-tax"	nil	(((p o l) 1) ((t a k s) 0)))	;; oul
("poll-taxes"	nil	(((p o l) 1) ((t a k s) 1) ((@ z) 0)))	;; oul
("pollable"	nil	(((p o l) 1) ((@) 0) ((b l!) 0)))	;; oul
("polled"	nil	(((p o l d) 1)))	;; oul
("poller"	nil	(((p o l) 1) ((@) 0)))	;; oul
("pollers"	nil	(((p o l) 1) ((@ z) 0)))	;; oul
("pollinating"	nil	(((p o )1)((l @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("polling"	nil	(((p o l) 1) ((i ng) 0)))	;; oul
("polls"	nil	(((p o l z) 1)))	;; oul
("pollster"	nil	(((p o l) 1) ((s t @) 0)))	;; oul
("pollsters"	nil	(((p o l) 1) ((s t @ z) 0)))	;; oul
("polluting"	nil	(((p @ )0)((l uu t^ )1)((i ng )0)))	;; ing
("polo"	nil	(((p o) 1) ((l ou) 0)))	;; oul
("poloponies"	nil	(((p o) 1) ((l ou) 0) ((p ou) 1) ((n ii z) 0)))	;; oul
("polopony"	nil	(((p o) 1) ((l ou) 0) ((p ou) 1) ((n ii) 0)))	;; oul
("polos"	nil	(((p o) 1) ((l ou z) 0)))	;; oul
("polson"	nil	(((p o l) 1) ((s n!) 0)))	;; oul
("polymerizing"	nil	(((p o )1)((l @ )0)((m @ r )0)((ai z )1)((i ng )0)))	;; ing
("polymorphs"	nil	(((p o) 1) ((l ii) 0) ((m oo f s) 1)))	;; unique
("pondering"	nil	(((p o n )1)((d @ r )0)((i ng )0)))	;; ing
("poneke"	nil	(((p @) 0) ((n ii) 1) ((k ii) 0)))	;; unique
("ponga"	nil	(((p o ng) 1) ((@) 0)))	;; unique
("ponging"	nil	(((p o ng )1)((i ng )0)))	;; ing
("pontificating"	nil	(((p o n )0)((t i f )1)((@ k )0)((ei t^ )1)((i ng )0)))	;; ing
("ponting"	nil	(((p o n )1)((t i ng )0)))	;; ing
("ponts"	nil	(((p o n t s) 1)))	;; unique
("ponys"	nil	(((p ou) 1) ((n ii z) 0)))	;; unique
("poo-pooing"	nil	(((p uu )1)((p uu )1)((i ng )0)))	;; ing
("poohing"	nil	(((p uu )1)((i ng )0)))	;; ing
("pooing"	nil	(((p uu )1)((i ng )0)))	;; ing
("pool"	nil	(((p u l) 1)))	;; uul
("poole"	nil	(((p u l) 1)))	;; uul
("pooled"	nil	(((p u l d) 1)))	;; uul
("pooles"	nil	(((p u l z) 1)))	;; unique
("pooling"	nil	(((p u l) 1) ((i ng) 0)))	;; uul
("poolroom"	nil	(((p u l) 1) ((r uu m) 0)))	;; uul
("poolrooms"	nil	(((p u l) 1) ((r uu m z) 0)))	;; uul
("pools"	nil	(((p u l z) 1)))	;; uul
("poolside"	nil	(((p u l) 1) ((s ai d) 0)))	;; uul
("poolsides"	nil	(((p u l) 1) ((s ai d z) 0)))	;; uul
("pooltable"	nil	(((p u l) 1) ((t ei) 1) ((b l!) 0)))	;; uul
("pooltables"	nil	(((p u l) 1) ((t ei) 1) ((b l! z) 0)))	;; uul
("pooping"	nil	(((p uu p )1)((i ng )0)))	;; ing
("poors"	nil	(((p uu @ z) 1)))	;; unique
("popcorns"	nil	(((p o p) 1) ((k oo n z) 0)))	;; unique
("popokotea"	nil	(((p oo) 1) ((p oo) 0) ((k oo) 0) ((t e) 0) ((@) 0)))	;; unique
("popotea"	nil	(((p ou) 0) ((p ou) 0) ((t e) 0) ((@) 0)))	;; unique
("popping"	nil	(((p o p )1)((i ng )0)))	;; ing
("poppys"	nil	(((p o) 1) ((p ii z) 0)))	;; unique
("popularising"	nil	(((p o )1)((p y @ )0)((l @ r )0)((ai z )1)((i ng )0)))	;; ing
("popularizing"	nil	(((p o )1)((p y @ )0)((l @ r )0)((ai z )1)((i ng )0)))	;; ing
("populating"	nil	(((p o )1)((p y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("porae"	nil	(((p oo) 1) ((r aa) 0) ((ei) 0)))	;; unique
("porangi"	nil	(((p oo) 1) ((r uh ng) 0) ((ii) 0)))	;; unique
("poring"	nil	(((p oo r )1)((i ng )0)))	;; ing
("porirua"	nil	(((p o) 0) ((r @) 0) ((r uu) 1) ((@) 0)))	;; unique
("porking"	nil	(((p oo k )1)((i ng )0)))	;; ing
("poroaki"	nil	(((p ou) 0) ((r ou) 0) ((aa) 0) ((k ii) 0)))	;; unique
("porokaiwhiri"	nil	(((p oo) 1) ((r ou) 0) ((k ai) 0) ((f ii) 0) ((r ii) 0)))	;; unique
("poroporo"	nil	(((p oo) 1) ((r ou) 0) ((p oo) 0) ((r ou) 0)))	;; unique
("poroporoaki"	nil	(((p oo) 1) ((r ou) 0) ((p oo) 0) ((r ou) 0) ((aa) 0) ((k ii) 1)))	;; unique
("portending"	nil	(((p oo )0)((t e n d )1)((i ng )0)))	;; ing
("portering"	nil	(((p oo t^ )1)((@ r )0)((i ng )0)))	;; ing
("portfolio"	nil	(((p oo t) 0) ((f o) 1) ((l ii) 0) ((ou) 0)))	;; oul
("portfolios"	nil	(((p oo t) 0) ((f o) 1) ((l ii) 0) ((ou z) 0)))	;; oul
("porthole"	nil	(((p oo t) 1) ((h o l) 0)))	;; oul
("portholes"	nil	(((p oo t) 1) ((h o l z) 0)))	;; oul
("porting"	nil	(((p oo t^ )1)((i ng )0)))	;; ing
("portlands"	nil	(((p oo t) 1) ((l @ n d z) 0)))	;; unique
("portraying"	nil	(((p oo )0)((t r ei )1)((i ng )0)))	;; ing
("portugals"	nil	(((p oo) 1) ((ch uw) 0) ((g @ l z) 0)))	;; unique
("pos"	nil	(((p ou z) 1)))	;; unique
("poshing"	nil	(((p o sh )1)((i ng )0)))	;; ing
("posing"	nil	(((p ou z )1)((i ng )0)))	;; ing
("positing"	nil	(((p o )1)((z @ t^ )0)((i ng )0)))	;; ing
("positioning"	nil	(((p @ )0)((z i )1)((sh n! )0)((i ng )0)))	;; ing
("possessing"	nil	(((p @ )0)((z e s )1)((i ng )0)))	;; ing
("posseting"	nil	(((p o )1)((s @ t^ )0)((i ng )0)))	;; ing
("postalveolar"	nil	(((p ou s t) 1) ((a l) 0) ((v ii) 0) ((o) 1) ((l @) 0)))	;; oul
("postalveolars"	nil	(((p ou s t) 1) ((a l) 0) ((v ii) 0) ((o) 1) ((l @ z) 0)))	;; oul
("postdating"	nil	(((p ou s t )0)((d ei t^ )1)((i ng )0)))	;; ing
("postholder"	nil	(((p ou s t) 1) ((h o l d) 1) ((@) 0)))	;; oul
("posting"	nil	(((p ou s t )1)((i ng )0)))	;; ing
("postmans"	nil	(((p ou s t) 1) ((m @ n z) 0)))	;; unique
("postmarking"	nil	(((p ou s t )1)((m aa k )1)((i ng )0)))	;; ing
("postmoderns"	nil	(((p ou s t) 0) ((m o) 1) ((d n! z) 0)))	;; unique
("postponing"	nil	(((p ou )0)((s p ou n )1)((i ng )0)))	;; ing
("postprocessing"	nil	(((p ou s t )0)((p r ou )1)((s e s )0)((i ng )0)))	;; ing
("postulating"	nil	(((p o s )1)((ch @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("posturing"	nil	(((p o s )1)((ch @ r )0)((i ng )0)))	;; ing
("pot-making"	nil	(((p o t )1)((m ei k )1)((i ng )0)))	;; ing
("potae"	nil	(((p ou) 1) ((t ai) 0)))	;; unique
("potboiling"	nil	(((p o t )1)((b oi l )1)((i ng )0)))	;; ing
("pothole"	nil	(((p o t) 1) ((h o l) 0)))	;; oul
("potholed"	nil	(((p o t) 1) ((h o l d) 0)))	;; oul
("potholer"	nil	(((p o t) 1) ((h o l) 1) ((@) 0)))	;; oul
("potholers"	nil	(((p o t) 1) ((h o l) 1) ((@ z) 0)))	;; oul
("potholes"	nil	(((p o t) 1) ((h o l z) 0)))	;; oul
("potholing"	nil	(((p o t) 1) ((h o l) 1) ((i ng) 0)))	;; oul
("pothunting"	nil	(((p o t )1)((h uh n t )1)((i ng )0)))	;; ing
("pottering"	nil	(((p o )1)((t^ @ r )0)((i ng )0)))	;; ing
("potting"	nil	(((p o t^ )1)((i ng )0)))	;; ing
("pou"	nil	(((p ou) 1) ((uu) 0)))	;; unique
("pouakai"	nil	(((p ou) 1) ((@) 0) ((k ai) 0)))	;; unique
("poulterer"	nil	(((p o l) 1) ((t @) 0) ((r @) 0)))	;; oul
("poultice"	nil	(((p o l) 1) ((t @ s) 0)))	;; oul
("poultices"	nil	(((p o l) 1) ((t @ s) 0) ((@ z) 0)))	;; oul
("poulticing"	nil	(((p o l) 1) ((t @ s) 0) ((i ng) 0)))	;; oul
("poultries"	nil	(((p o l) 1) ((t r ii z) 0)))	;; oul
("poultry"	nil	(((p o l) 1) ((t r ii) 0)))	;; oul
("pounamu"	nil	(((p ou) 1) ((n aa) 0) ((m uu) 0)))	;; unique
("pouncing"	nil	(((p ow n s )1)((i ng )0)))	;; ing
("pounding"	nil	(((p ow n d )1)((i ng )0)))	;; ing
("poupou"	nil	(((p ou) 1) ((p ou) 0)))	;; unique
("pouri"	nil	(((p ou) 1) ((r ii) 0)))	;; unique
("pouring"	nil	(((p oo r )1)((i ng )0)))	;; ing
("poutama"	nil	(((p ou) 1) ((t aa) 0) ((m @) 0)))	;; unique
("pouting"	nil	(((p ow t^ )1)((i ng )0)))	;; ing
("povertys"	nil	(((p o) 1) ((v @) 0) ((t^ ii z) 0)))	;; unique
("powdering"	nil	(((p ow )1)((d @ r )0)((i ng )0)))	;; ing
("powering"	nil	(((p ow @ r )1)((i ng )0)))	;; ing
("powertools"	nil	(((p ow @) 1) ((t u l z) 0)))	;; uul
("powhaitere"	nil	(((p oo) 0) ((f ai) 1) ((t e) 0) ((r ei) 0)))	;; unique
("powhiri"	nil	(((p oo) 1) ((f i) 0) ((r ii) 0)))	;; unique
("powhiwhi"	nil	(((p oo) 1) ((f ii) 0) ((f ii) 0)))	;; unique
("powwowing"	nil	(((p ow )1)((w ow )0)((i ng )0)))	;; ing
("poynting"	nil	(((p oi n )1)((t i ng )0)))	;; ing
("practicing"	nil	(((p r a k )1)((t @ s )0)((i ng )0)))	;; ing
("practising"	nil	(((p r a k )1)((t @ s )0)((i ng )0)))	;; ing
("praising"	nil	(((p r ei z )1)((i ng )0)))	;; ing
("prancing"	nil	(((p r aa n s )1)((i ng )0)))	;; ing
("pranking"	nil	(((p r a ng k )1)((i ng )0)))	;; ing
("prattling"	nil	(((p r a )1)((t l! )0)((i ng )0)))	;; ing
("pratts"	nil	(((p r a t s) 1)))	;; unique
("prayer-meeting"	nil	(((p r ii @ )1)((m ii t^ )1)((i ng )0)))	;; ing
("praying"	nil	(((p r ei )1)((i ng )0)))	;; ing
("pre-empting"	nil	(((p r iy )0)((e m p t )1)((i ng )0)))	;; ing
("pre-establishing"	nil	(((p r ii )1)((i )0)((s t a )1)((b l i sh )0)((i ng )0)))	;; ing
("pre-existing"	nil	(((p r ii @ g )1)((z i s t )1)((i ng )0)))	;; ing
("pre-qualifying"	nil	(((p r - ii )0)((k w o )1)((l @ )0)((f ai )1)((i ng )0)))	;; ing
("pre-school"	nil	(((p r ii) 1) ((s k u l) 0)))	;; uul
("preaching"	nil	(((p r ii ch )1)((i ng )0)))	;; ing
("preallocating"	nil	(((p r - ii )0)((a )1)((l @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("preambling"	nil	(((p r - ii )0)((a m )1)((b l! )0)((i ng )0)))	;; ing
("preannouncing"	nil	(((p r - ii @ )0)((n ow n s )1)((i ng )0)))	;; ing
("prearranging"	nil	(((p r - ii @ )0)((r ei n jh )1)((i ng )0)))	;; ing
("preassigning"	nil	(((p r - ii @ )0)((s ai n )1)((i ng )0)))	;; ing
("precalculating"	nil	(((p r - ii )0)((k a l )1)((k y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("preceding"	nil	(((p r i )0)((s ii d )1)((i ng )0)))	;; ing
("precharging"	nil	(((p r - ii )0)((ch aa jh )1)((i ng )0)))	;; ing
("precipitating"	nil	(((p r i )0)((s i )1)((p i )0)((t ei t^ )1)((i ng )0)))	;; ing
("precluding"	nil	(((p r i )0)((k l uu d )1)((i ng )0)))	;; ing
("precomputing"	nil	(((p r ii )1)((k @ m )0)((p y uu t^ )1)((i ng )0)))	;; ing
("preconceiving"	nil	(((p r ii )1)((k @ n )0)((s ii v )1)((i ng )0)))	;; ing
("preconditioning"	nil	(((p r ii )1)((k @ n )0)((d i )1)((sh n! )0)((i ng )0)))	;; ing
("preconforming"	nil	(((p r ii )1)((k @ n )0)((f oo m )1)((i ng )0)))	;; ing
("precooking"	nil	(((p r - ii )0)((k u k )1)((i ng )0)))	;; ing
("predating"	nil	(((p r - ii )0)((d ei t^ )1)((i ng )0)))	;; ing
("predecoding"	nil	(((p r ii )1)((d - ii )0)((k ou d )1)((i ng )0)))	;; ing
("predefining"	nil	(((p r ii )1)((d i )0)((f ai n )1)((i ng )0)))	;; ing
("predesignating"	nil	(((p r - ii )0)((d e )1)((z i g )0)((n ei t^ )1)((i ng )0)))	;; ing
("predesigning"	nil	(((p r ii )1)((d i )0)((z ai n )1)((i ng )0)))	;; ing
("predetermining"	nil	(((p r ii )1)((d i )0)((t @@r )1)((m i n )0)((i ng )0)))	;; ing
("predeveloping"	nil	(((p r ii )1)((d i )0)((v a )1)((l @ p )0)((i ng )0)))	;; ing
("predicating"	nil	(((p r e )1)((d @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("predicting"	nil	(((p r @ )0)((d i k t )1)((i ng )0)))	;; ing
("predigesting"	nil	(((p r ii )1)((d ai )0)((jh e s t )1)((i ng )0)))	;; ing
("predisposing"	nil	(((p r ii )1)((d i )0)((s p ou z )1)((i ng )0)))	;; ing
("prednisone"	nil	(((p r e d) 1) ((n i) 0) ((s ou n) 1)))	;; unique
("predominating"	nil	(((p r i )0)((d o )1)((m i )0)((n ei t^ )1)((i ng )0)))	;; ing
("preempting"	nil	(((p r iy )0)((e m p t )1)((i ng )0)))	;; ing
("preening"	nil	(((p r ii n )1)((i ng )0)))	;; ing
("preexisting"	nil	(((p r ii @ g )1)((z i s t )1)((i ng )0)))	;; ing
("prefabbing"	nil	(((p r ii )1)((f a b )0)((i ng )0)))	;; ing
("prefabricating"	nil	(((p r - ii )0)((f a )1)((b r i k )0)((ei t^ )1)((i ng )0)))	;; ing
("prefacing"	nil	(((p r e )1)((f @ s )0)((i ng )0)))	;; ing
("preferring"	nil	(((p r @ )0)((f @@r r )1)((i ng )0)))	;; ing
("prefielding"	nil	(((p r - ii )0)((f ii l d )1)((i ng )0)))	;; ing
("prefiguring"	nil	(((p r - ii )0)((f i )1)((g @ r )0)((i ng )0)))	;; ing
("prefiltering"	nil	(((p r - ii )0)((f i l )1)((t @ r )0)((i ng )0)))	;; ing
("prefinancing"	nil	(((p r - ii )0)((f ai )1)((n a n s )0)((i ng )0)))	;; ing
("prefixing"	nil	(((p r ii )1)((f i k s )0)((i ng )0)))	;; ing
("prefoliation"	nil	(((p r ii) 1) ((f o) 0) ((l ii) 0) ((ei) 1) ((sh n!) 0)))	;; oul
("preformatting"	nil	(((p r - ii )0)((f oo )1)((m a t^ )0)((i ng )0)))	;; ing
("preforming"	nil	(((p r - ii )0)((f oo m )1)((i ng )0)))	;; ing
("preheating"	nil	(((p r - ii )0)((h ii t^ )1)((i ng )0)))	;; ing
("prejudging"	nil	(((p r - ii )0)((jh uh jh )1)((i ng )0)))	;; ing
("prejudicing"	nil	(((p r e )1)((jh u )0)((d i s )1)((i ng )0)))	;; ing
("preloading"	nil	(((p r - ii )0)((l ou d )1)((i ng )0)))	;; ing
("premarin"	nil	(((p r e) 1) ((m @) 0) ((r i n) 1)))	;; unique
("premastering"	nil	(((p r - ii )0)((m aa )1)((s t @ r )0)((i ng )0)))	;; ing
("premeditating"	nil	(((p r - ii )0)((m e )1)((d @ )0)((t ei t^ )1)((i ng )0)))	;; ing
("preoccupying"	nil	(((p r - ii )0)((o )1)((k y uw )0)((p ai )1)((i ng )0)))	;; ing
("preordaining"	nil	(((p r ii )1)((oo )0)((d ei n )1)((i ng )0)))	;; ing
("preparing"	nil	(((p r i )0)((p ir r )1)((i ng )0)))	;; ing
("prepaying"	nil	(((p r - ii )0)((p ei )1)((i ng )0)))	;; ing
("preplanning"	nil	(((p r - ii )0)((p l a n )1)((i ng )0)))	;; ing
("preponderating"	nil	(((p r i )0)((p o n )1)((d @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("prepositioning"	nil	(((p r e )1)((p @ )0)((z i )1)((sh n! )0)((i ng )0)))	;; ing
("prepossessing"	nil	(((p r ii )1)((p @ )0)((z e s )1)((i ng )0)))	;; ing
("preprocessing"	nil	(((p r - ii )0)((p r ou )1)((s e s )0)((i ng )0)))	;; ing
("prereading"	nil	(((p r - ii )0)((r ii d )1)((i ng )0)))	;; ing
("prerecording"	nil	(((p r ii )1)((r i )0)((k oo d )1)((i ng )0)))	;; ing
("presaging"	nil	(((p r e )1)((s i jh )0)((i ng )0)))	;; ing
("prescanning"	nil	(((p r - ii )0)((s k a n )1)((i ng )0)))	;; ing
("preschool"	nil	(((p r ii) 1) ((s k u l) 0)))	;; uul
("preschooler"	nil	(((p r ii) 0) ((s k u l) 1) ((@) 0)))	;; uul
("preschoolers"	nil	(((p r ii) 1) ((s k u l) 0) ((@ z) 0)))	;; uul
("preschooling"	nil	(((p r ii) 0) ((s k u l) 1) ((i ng) 0)))	;; uul
("preschools"	nil	(((p r ii) 1) ((s k u l z) 0)))	;; uul
("prescotts"	nil	(((p r e) 1) ((s k o t s) 0)))	;; unique
("prescribing"	nil	(((p r i )0)((s k r ai b )1)((i ng )0)))	;; ing
("preselecting"	nil	(((p r ii )1)((s @ )0)((l e k t )1)((i ng )0)))	;; ing
("presenting"	nil	(((p r i )0)((z e n t )1)((i ng )0)))	;; ing
("preservicing"	nil	(((p r - ii )0)((s @@r )1)((v i s )0)((i ng )0)))	;; ing
("preserving"	nil	(((p r @ )0)((z @@r v )1)((i ng )0)))	;; ing
("presetting"	nil	(((p r - ii )0)((s e t^ )1)((i ng )0)))	;; ing
("presidencys"	nil	(((p r e) 1) ((z i) 0) ((d n!) 0) ((s ii z) 0)))	;; unique
("presiding"	nil	(((p r i )0)((z ai d )1)((i ng )0)))	;; ing
("presorting"	nil	(((p r - ii )0)((s oo t^ )1)((i ng )0)))	;; ing
("pressclipping"	nil	(((p r e s )1)((k l i p )1)((i ng )0)))	;; ing
("pressing"	nil	(((p r e s )1)((i ng )0)))	;; ing
("presss"	nil	(((p r e s) 1) ((@ z) 0)))	;; unique
("pressuring"	nil	(((p r e )1)((sh r )0)((i ng )0)))	;; ing
("pressurising"	nil	(((p r e )1)((sh r )0)((ai z )1)((i ng )0)))	;; ing
("pressurizing"	nil	(((p r e )1)((sh r )0)((ai z )1)((i ng )0)))	;; ing
("prestocking"	nil	(((p r - ii )0)((s t o k )1)((i ng )0)))	;; ing
("prestwoods"	nil	(((p r e s t) 1) ((w u d z) 0)))	;; unique
("presuming"	nil	(((p r @ )0)((z y uu m )1)((i ng )0)))	;; ing
("presupporting"	nil	(((p r ii )1)((s @ )0)((p oo t^ )1)((i ng )0)))	;; ing
("presupposing"	nil	(((p r ii )1)((s @ )0)((p ou z )1)((i ng )0)))	;; ing
("pretending"	nil	(((p r @ )0)((t e n d )1)((i ng )0)))	;; ing
("pretesting"	nil	(((p r - ii )0)((t e s t )1)((i ng )0)))	;; ing
("prettifying"	nil	(((p r i )1)((t^ @ )0)((f ai )1)((i ng )0)))	;; ing
("prettying"	nil	(((p r i )1)((t^ iy )0)((i ng )0)))	;; ing
("prevailing"	nil	(((p r i )0)((v ei l )1)((i ng )0)))	;; ing
("prevaricating"	nil	(((p r i )0)((v a )1)((r i )0)((k ei t^ )1)((i ng )0)))	;; ing
("preventing"	nil	(((p r i )0)((v e n t )1)((i ng )0)))	;; ing
("previewing"	nil	(((p r ii )1)((v y - uu )0)((i ng )0)))	;; ing
("prewarning"	nil	(((p r - ii )0)((w oo n )1)((i ng )0)))	;; ing
("preying"	nil	(((p r ei )1)((i ng )0)))	;; ing
("pricing"	nil	(((p r ai s )1)((i ng )0)))	;; ing
("pricking"	nil	(((p r i k )1)((i ng )0)))	;; ing
("prickling"	nil	(((p r i k )1)((l! )0)((i ng )0)))	;; ing
("priming"	nil	(((p r ai m )1)((i ng )0)))	;; ing
("primping"	nil	(((p r i m p )1)((i ng )0)))	;; ing
("princeling"	nil	(((p r i n s )1)((l i ng )0)))	;; ing
("printing"	nil	(((p r i n t )1)((i ng )0)))	;; ing
("printmaking"	nil	(((p r i n t )1)((m ei k )1)((i ng )0)))	;; ing
("printmerging"	nil	(((p r i n t )1)((m @@r jh )1)((i ng )0)))	;; ing
("prioritising"	nil	(((p r ai )0)((o )1)((r @ )0)((t ai z )1)((i ng )0)))	;; ing
("prioritizing"	nil	(((p r ai )0)((o )1)((r @ )0)((t ai z )1)((i ng )0)))	;; ing
("priscillas"	nil	(((p r i) 0) ((s i) 1) ((l @ z) 0)))	;; unique
("prising"	nil	(((p r ai z )1)((i ng )0)))	;; ing
("privateering"	nil	(((p r ai )1)((v @ t )0)((ir r )1)((i ng )0)))	;; ing
("privatising"	nil	(((p r ai )1)((v @ t )0)((ai z )1)((i ng )0)))	;; ing
("privatizing"	nil	(((p r ai )1)((v @ t )0)((ai z )1)((i ng )0)))	;; ing
("prize-fighting"	nil	(((p r ai z )1)((f ai t^ )1)((i ng )0)))	;; ing
("prizewinning"	nil	(((p r ai z )1)((w i n )1)((i ng )0)))	;; ing
("prizing"	nil	(((p r ai z )1)((i ng )0)))	;; ing
("pro-life"	nil	(((p r o) 0) ((l ai f) 1)))	;; oul
("probing"	nil	(((p r ou b )1)((i ng )0)))	;; ing
("proceeding"	nil	(((p r @ )0)((s ii d )1)((i ng )0)))	;; ing
("processing"	nil	(((p r @ )0)((s e s )1)((i ng )0)))	;; ing
("processs"	nil	(((p r ou) 1) ((s e s) 0) ((@ z) 0)))	;; unique
("prochlorperazine"	nil	(((p r @) 0) ((k l o) 1) ((p @) 0) ((r uh) 0) ((z ii n) 1)))	;; unique
("proclaiming"	nil	(((p r @ )0)((k l ei m )1)((i ng )0)))	;; ing
("procrastinating"	nil	(((p r @ )0)((k r a )1)((s t @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("procreating"	nil	(((p r ou )1)((k r iy )0)((ei t^ )1)((i ng )0)))	;; ing
("proctoring"	nil	(((p r o k )1)((t @ r )0)((i ng )0)))	;; ing
("procuring"	nil	(((p r @ )0)((k y ur r )1)((i ng )0)))	;; ing
("prodding"	nil	(((p r o d )1)((i ng )0)))	;; ing
("producing"	nil	(((p r @ )0)((d y uu s )1)((i ng )0)))	;; ing
("profaning"	nil	(((p r @ )0)((f ei n )1)((i ng )0)))	;; ing
("professing"	nil	(((p r @ )0)((f e s )1)((i ng )0)))	;; ing
("professionalizing"	nil	(((p r @ )0)((f e )1)((sh n! )0)((@ l )0)((ai z )1)((i ng )0)))	;; ing
("proffering"	nil	(((p r o )1)((f @ r )0)((i ng )0)))	;; ing
("profiling"	nil	(((p r ou )1)((f ai l )0)((i ng )0)))	;; ing
("profit-seeking"	nil	(((p r o )1)((f @ t )0)((s ii k )1)((i ng )0)))	;; ing
("profit-sharing"	nil	(((p r o )1)((f @ t )0)((sh ir r )1)((i ng )0)))	;; ing
("profiteering"	nil	(((p r o )1)((f @ t )0)((ir r )1)((i ng )0)))	;; ing
("profiting"	nil	(((p r o )1)((f @ t^ )0)((i ng )0)))	;; ing
("profitting"	nil	(((p r o )1)((f @ t^ )0)((i ng )0)))	;; ing
("prognosticating"	nil	(((p r o g )0)((n o )1)((s t i k )0)((ei t^ )1)((i ng )0)))	;; ing
("programming"	nil	(((p r ou )1)((g r a m )0)((i ng )0)))	;; ing
("progressing"	nil	(((p r @ )0)((g r e s )1)((i ng )0)))	;; ing
("prohibiting"	nil	(((p r @ )0)((h i )1)((b i t^ )0)((i ng )0)))	;; ing
("project-planning"	nil	(((p r o )1)((jh e k t )0)((p l a n )1)((i ng )0)))	;; ing
("projecting"	nil	(((p r @ )0)((jh e k t )1)((i ng )0)))	;; ing
("prolapse"	nil	(((p r o) 1) ((l a p s) 0)))	;; oul
("prolapsed"	nil	(((p r o) 1) ((l a p s t) 0)))	;; oul
("prolate"	nil	(((p r o) 1) ((l ei t) 0)))	;; oul
("prole"	nil	(((p r o l) 1)))	;; oul
("proles"	nil	(((p r o l z) 1)))	;; oul
("proletarian"	nil	(((p r o) 1) ((l @) 0) ((t ir) 1) ((r ii @ n) 0)))	;; oul
("proletarianism"	nil	(((p r o) 1) ((l @) 0) ((t ir) 1) ((r ii @ n) 0) ((i) 1) ((z m!) 0)))	;; oul
("proletarianization"	nil	(((p r o) 1) ((l @) 0) ((t ir) 1) ((r ii @ n) 0) ((i z) 0) ((ei) 1) ((sh n!) 0)))	;; oul
("proletarianize"	nil	(((p r o) 1) ((l @) 0) ((t ir) 1) ((r ii @ n) 0) ((ai z) 0)))	;; oul
("proletarianized"	nil	(((p r o) 1) ((l @) 0) ((t ir) 1) ((r ii @ n) 0) ((ai z d) 0)))	;; oul
("proletarians"	nil	(((p r o) 1) ((l @) 0) ((t ir) 1) ((r ii @ n z) 0)))	;; oul
("proletariat"	nil	(((p r o) 1) ((l @) 0) ((t ir) 1) ((r ii @ t) 0)))	;; oul
("proliferating"	nil	(((p r @ )0)((l i )1)((f @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("prolix"	nil	(((p r o) 1) ((l i k s) 0)))	;; oul
("prolixness"	nil	(((p r o) 1) ((l i k s) 0) ((n @ s) 0)))	;; oul
("prolog"	nil	(((p r o) 1) ((l o g) 0)))	;; oul
("prologs"	nil	(((p r o) 1) ((l o g z) 0)))	;; oul
("prologue"	nil	(((p r o) 1) ((l o g) 0)))	;; oul
("prologues"	nil	(((p r o) 1) ((l o g z) 0)))	;; oul
("prolongate"	nil	(((p r o) 1) ((l o ng) 0) ((g ei t) 0)))	;; oul
("prolongation"	nil	(((p r o) 1) ((l o ng) 0) ((g ei) 1) ((sh n!) 0)))	;; oul
("prolongations"	nil	(((p r o) 1) ((l o ng) 0) ((g ei) 1) ((sh n! z) 0)))	;; oul
("prolonging"	nil	(((p r @ )0)((l o ng )1)((i ng )0)))	;; ing
("promenading"	nil	(((p r o )1)((m @ )0)((n aa d )1)((i ng )0)))	;; ing
("promising"	nil	(((p r o )1)((m @ s )0)((i ng )0)))	;; ing
("promoting"	nil	(((p r @ )0)((m ou t^ )1)((i ng )0)))	;; ing
("prompting"	nil	(((p r o m p t )1)((i ng )0)))	;; ing
("promulgating"	nil	(((p r o )1)((m l! )0)((g ei t^ )1)((i ng )0)))	;; ing
("pronging"	nil	(((p r o ng )1)((i ng )0)))	;; ing
("pronouncing"	nil	(((p r @ )0)((n ow n s )1)((i ng )0)))	;; ing
("proof-reading"	nil	(((p r uu f )1)((r ii d )1)((i ng )0)))	;; ing
("proofing"	nil	(((p r uu f )1)((i ng )0)))	;; ing
("proofreading"	nil	(((p r uu f )1)((r ii d )1)((i ng )0)))	;; ing
("propagandizing"	nil	(((p r o )1)((p @ )0)((g a n )1)((d ai z )0)((i ng )0)))	;; ing
("propagating"	nil	(((p r o )1)((p @ )0)((g ei t^ )1)((i ng )0)))	;; ing
("propelling"	nil	(((p r @ )0)((p a l )1)((i ng )0)))	;; ing
("propertys"	nil	(((p r o) 1) ((p @) 0) ((t^ ii z) 0)))	;; unique
("prophesying"	nil	(((p r o )1)((f @ )0)((s ai )0)((i ng )0)))	;; ing
("propitiating"	nil	(((p r @ )0)((p i )1)((sh iy )0)((ei t^ )1)((i ng )0)))	;; ing
("proportioning"	nil	(((p r @ )0)((p oo )1)((sh n! )0)((i ng )0)))	;; ing
("proposing"	nil	(((p r @ )0)((p ou z )1)((i ng )0)))	;; ing
("propositioning"	nil	(((p r o )1)((p @ z )0)((i )1)((sh n! )0)((i ng )0)))	;; ing
("propounding"	nil	(((p r @ )0)((p ow n d )1)((i ng )0)))	;; ing
("propping"	nil	(((p r o p )1)((i ng )0)))	;; ing
("prorogueing"	nil	(((p r @ )0)((r ou g )1)((i ng )0)))	;; ing
("proscribing"	nil	(((p r @ )0)((s k r ai b )1)((i ng )0)))	;; ing
("prosecuting"	nil	(((p r o )1)((s @ )0)((k y uu t^ )1)((i ng )0)))	;; ing
("proselyting"	nil	(((p r o )1)((s @ )0)((l ai t^ )1)((i ng )0)))	;; ing
("proselytizing"	nil	(((p r o )1)((s @ )0)((l @ t )0)((ai z )1)((i ng )0)))	;; ing
("prospecting"	nil	(((p r @ )0)((s p e k t )1)((i ng )0)))	;; ing
("prospering"	nil	(((p r o )1)((s p @ r )0)((i ng )0)))	;; ing
("prostituting"	nil	(((p r o )1)((s t @ )0)((t y uu t^ )1)((i ng )0)))	;; ing
("prostrating"	nil	(((p r o )0)((s t r ei t^ )1)((i ng )0)))	;; ing
("protecting"	nil	(((p r @ )0)((t e k t )1)((i ng )0)))	;; ing
("proteolytic"	nil	(((p r ou) 1) ((t^ ii) 0) ((o) 0) ((l i) 1) ((t^ i k) 0)))	;; oul
("protesting"	nil	(((p r @ )0)((t e s t )1)((i ng )0)))	;; ing
("protocolling"	nil	(((p r ou )1)((t^ @ )0)((k o l )1)((i ng )0)))	;; ing
("prototyping"	nil	(((p r ou )1)((t^ @ )0)((t ai p )1)((i ng )0)))	;; ing
("protracting"	nil	(((p r @ )0)((t r a k t )1)((i ng )0)))	;; ing
("protruding"	nil	(((p r @ )0)((t r uu d )1)((i ng )0)))	;; ing
("providing"	nil	(((p r @ )0)((v ai d )1)((i ng )0)))	;; ing
("proving"	nil	(((p r uu v )1)((i ng )0)))	;; ing
("provisioning"	nil	(((p r @ )0)((v i )1)((zh n! )0)((i ng )0)))	;; ing
("provoking"	nil	(((p r @ )0)((v ou k )1)((i ng )0)))	;; ing
("prowling"	nil	(((p r ow l )1)((i ng )0)))	;; ing
("pruning"	nil	(((p r uu n )1)((i ng )0)))	;; ing
("prying"	nil	(((p r ai )1)((i ng )0)))	;; ing
("ps"	nil	(((p ii z) 1)))	;; unique
("psis"	nil	(((s ai z) 1)))	;; unique
("psola"	nil	(((p @) 0) ((s o) 1) ((l @) 0)))	;; oul
("psyching"	nil	(((s ai k )1)((i ng )0)))	;; ing
("psychoanalysing"	nil	(((s ai )1)((k ou )0)((a )1)((n l! )0)((ai z )1)((i ng )0)))	;; ing
("psychoanalyzing"	nil	(((s ai )1)((k ou )0)((a )1)((n l! )0)((ai z )1)((i ng )0)))	;; ing
("pua"	nil	(((p uu) 1) ((@) 0)))	;; unique
("puanga"	nil	(((p uu) 1) ((uh ng) 0) ((@) 0)))	;; unique
("puarangi"	nil	(((p uu) 1) ((aa) 0) ((r uh ng) 0) ((ii) 0)))	;; unique
("puawananga"	nil	(((p uu) 0) ((aa) 0) ((w aa) 1) ((n uh ng) 0) ((@) 0)))	;; unique
("publicising"	nil	(((p uh )1)((b l i s )0)((ai z )1)((i ng )0)))	;; ing
("publicizing"	nil	(((p uh )1)((b l i s )0)((ai z )1)((i ng )0)))	;; ing
("publishing"	nil	(((p uh )1)((b l i sh )0)((i ng )0)))	;; ing
("puckering"	nil	(((p uh )1)((k @ r )0)((i ng )0)))	;; ing
("pudding"	nil	(((p u )1)((d i ng )0)))	;; ing
("puddling"	nil	(((p uh )1)((d l! )0)((i ng )0)))	;; ing
("puffing"	nil	(((p uh f )1)((i ng )0)))	;; ing
("puha"	nil	(((p uu) 1) ((h aa) 0)))	;; unique
("puharakeke"	nil	(((p uu) 0) ((h aa) 1) ((r aa) 0) ((k e) 0) ((k ei) 0)))	;; unique
("puheretaiko"	nil	(((p uu) 1) ((h e) 0) ((r e) 0) ((t ai) 1) ((k oo) 0)))	;; unique
("puhoi"	nil	(((p uu) 1) ((h oi) 0)))	;; unique
("puia"	nil	(((p uu) 1) ((ii) 0) ((@) 0)))	;; unique
("puka"	nil	(((p uu) 1) ((k @) 0)))	;; unique
("pukahu"	nil	(((p uu) 1) ((k aa) 0) ((h uu) 0)))	;; unique
("pukana"	nil	(((p uu) 1) ((k aa) 0) ((n @) 0)))	;; unique
("pukanui"	nil	(((p u) 1) ((k @) 0) ((n uu) 1) ((ii) 0)))	;; unique
("pukapuka"	nil	(((p uu) 1) ((k aa) 0) ((p uu) 0) ((k @) 0)))	;; unique
("pukatea"	nil	(((p uu) 1) ((k aa) 0) ((t e) 0) ((@) 0)))	;; unique
("pukeko"	nil	(((p uu) 0) ((k e) 1) ((k ou) 0)))	;; unique
("puking"	nil	(((p y uu k )1)((i ng )0)))	;; ing
("puku"	nil	(((p u) 1) ((k uu) 0)))	;; unique
("pukunui"	nil	(((p uu) 1) ((k uu) 0) ((n uu) 0) ((ii) 0)))	;; unique
("pukurau"	nil	(((p uu) 1) ((k uu) 0) ((r ow) 0)))	;; unique
("puling"	nil	(((p y @ l )1)((i ng )0)))	;; ing
("pulling"	nil	(((p u l )1)((i ng )0)))	;; ing
("pulping"	nil	(((p o l p )1)((i ng )0)))	;; ing
("pulsating"	nil	(((p o l s )0)((ei t^ )1)((i ng )0)))	;; ing
("pulsing"	nil	(((p o l s )1)((i ng )0)))	;; ing
("pulverising"	nil	(((p o l )1)((v @ )0)((r ai z )1)((i ng )0)))	;; ing
("pulverizing"	nil	(((p o l )1)((v @ )0)((r ai z )1)((i ng )0)))	;; ing
("pummeling"	nil	(((p uh )1)((m l! )0)((i ng )0)))	;; ing
("pummelling"	nil	(((p uh )1)((m l! )0)((i ng )0)))	;; ing
("pumping"	nil	(((p uh m p )1)((i ng )0)))	;; ing
("punching"	nil	(((p uh n ch )1)((i ng )0)))	;; ing
("punctuating"	nil	(((p uh ng k )1)((ch uw )0)((ei t^ )1)((i ng )0)))	;; ing
("puncturing"	nil	(((p uh ng k )1)((ch @ r )0)((i ng )0)))	;; ing
("punga"	nil	(((p uh ng) 1) ((@) 0)))	;; unique
("pungapunga"	nil	(((p uu ng) 1) ((aa) 0) ((p uu ng) 0) ((@) 0)))	;; unique
("puni"	nil	(((p uu) 1) ((n ii) 0)))	;; unique
("punishing"	nil	(((p uh )1)((n i sh )0)((i ng )0)))	;; ing
("punning"	nil	(((p uh n )1)((i ng )0)))	;; ing
("punting"	nil	(((p uh n t )1)((i ng )0)))	;; ing
("punui"	nil	(((p uu) 1) ((n uu) 0) ((ii) 0)))	;; unique
("pupating"	nil	(((p y uw )0)((p ei t^ )1)((i ng )0)))	;; ing
("puppeting"	nil	(((p uh )1)((p @ t^ )0)((i ng )0)))	;; ing
("pupping"	nil	(((p uh p )1)((i ng )0)))	;; ing
("puppys"	nil	(((p uh) 1) ((p ii z) 0)))	;; unique
("pupu"	nil	(((p uu) 1) ((p uu) 0)))	;; unique
("pupuharakeke"	nil	(((p uu) 1) ((p uu) 0) ((h aa) 1) ((r aa) 0) ((k e) 0) ((k ei) 0)))	;; unique
("pupurangi"	nil	(((p uu) 1) ((p uu) 0) ((r uh ng) 1) ((ii) 0)))	;; unique
("purchasing"	nil	(((p @@r )1)((ch @ s )0)((i ng )0)))	;; ing
("pureeing"	nil	(((p y ur )1)((r ei )0)((i ng )0)))	;; ing
("purging"	nil	(((p @@r jh )1)((i ng )0)))	;; ing
("purifying"	nil	(((p y ur r )1)((@ )0)((f ai )1)((i ng )0)))	;; ing
("puriri"	nil	(((p uu) 1) ((r i) 0) ((r ii) 1)))	;; unique
("purling"	nil	(((p @@r l )1)((i ng )0)))	;; ing
("purloining"	nil	(((p @ )0)((l oi n )1)((i ng )0)))	;; ing
("purporting"	nil	(((p @ )0)((p oo t^ )1)((i ng )0)))	;; ing
("purposing"	nil	(((p @@r )1)((p @ s )0)((i ng )0)))	;; ing
("purring"	nil	(((p @@r r )1)((i ng )0)))	;; ing
("pursing"	nil	(((p @@r s )1)((i ng )0)))	;; ing
("pursuing"	nil	(((p @ )0)((s y uu )1)((i ng )0)))	;; ing
("purumorua"	nil	(((p uu) 0) ((r uu) 0) ((m oo) 1) ((r uu) 0) ((@) 0)))	;; unique
("purveying"	nil	(((p @ )0)((v ei )1)((i ng )0)))	;; ing
("pushing"	nil	(((p u sh )1)((i ng )0)))	;; ing
("pussyfooting"	nil	(((p u s )1)((iy )0)((f u t^ )1)((i ng )0)))	;; ing
("putangitangi"	nil	(((p uu) 0) ((t uh ng) 1) ((ii) 0) ((t uh ng) 0) ((ii) 0)))	;; unique
("putaputaweta"	nil	(((p uu) 0) ((t aa) 0) ((p uu) 0) ((t aa) 1) ((w e) 0) ((t^ @) 0)))	;; unique
("puteketeke"	nil	(((p uu) 0) ((t e) 1) ((k e) 0) ((t e) 0) ((k ei) 0)))	;; unique
("putiputi"	nil	(((p u) 1) ((t^ ii) 0) ((p u) 1) ((t^ ii) 0)))	;; unique
("putnams"	nil	(((p uh t) 1) ((n @ m z) 0)))	;; unique
("putorino"	nil	(((p uu) 1) ((t^ @) 0) ((r ii) 1) ((n ou) 0)))	;; unique
("putoto"	nil	(((p uu) 1) ((t oo) 0) ((t oo) 0)))	;; unique
("putrefying"	nil	(((p y uu )1)((t r @ )0)((f ai )1)((i ng )0)))	;; ing
("putting"	nil	(((p u t^ )1)((i ng )0)))	;; ing
("puwaiwhakarua"	nil	(((p uu) 1) ((w ai) 0) ((f aa) 0) ((k aa) 0) ((r uu) 0) ((@) 0)))	;; unique
("puweto"	nil	(((p uu) 1) ((w e) 0) ((t oo) 0)))	;; unique
("puzzling"	nil	(((p uh )1)((z l! )0)((i ng )0)))	;; ing
("qs"	nil	(((k y uu z) 1)))	;; unique
("quacking"	nil	(((k w a k )1)((i ng )0)))	;; ing
("quadrupling"	nil	(((k w o )0)((d r uu )1)((p l! )0)((i ng )0)))	;; ing
("quaffing"	nil	(((k w o f )1)((i ng )0)))	;; ing
("quailing"	nil	(((k w ei l )1)((i ng )0)))	;; ing
("quaking"	nil	(((k w ei k )1)((i ng )0)))	;; ing
("qualifying"	nil	(((k w o )1)((l @ )0)((f ai )1)((i ng )0)))	;; ing
("quantifying"	nil	(((k w o n )1)((t @ )0)((f ai )1)((i ng )0)))	;; ing
("quantizing"	nil	(((k w o n )1)((t ai z )0)((i ng )0)))	;; ing
("quarantining"	nil	(((k w o )1)((r @ n )0)((t ii n )1)((i ng )0)))	;; ing
("quarreling"	nil	(((k w o )1)((r @ l )0)((i ng )0)))	;; ing
("quarrelling"	nil	(((k w o )1)((r @ l )0)((i ng )0)))	;; ing
("quarrying"	nil	(((k w o )1)((r iy )0)((i ng )0)))	;; ing
("quartering"	nil	(((k w oo )1)((t^ @ r )0)((i ng )0)))	;; ing
("quashing"	nil	(((k w o sh )1)((i ng )0)))	;; ing
("quavering"	nil	(((k w ei )1)((v @ r )0)((i ng )0)))	;; ing
("quebecs"	nil	(((k w i) 0) ((b e k s) 1)))	;; unique
("queening"	nil	(((k w ii n )1)((i ng )0)))	;; ing
("queenslands"	nil	(((k w ii n z) 1) ((l @ n d z) 0)))	;; unique
("queer-looking"	nil	(((k w ii @ )1)((l u k )1)((i ng )0)))	;; ing
("quelching"	nil	(((k w a l ch )1)((i ng )0)))	;; ing
("quelling"	nil	(((k w a l )1)((i ng )0)))	;; ing
("quenching"	nil	(((k w e n ch )1)((i ng )0)))	;; ing
("querying"	nil	(((k w ir )1)((r iy )0)((i ng )0)))	;; ing
("questing"	nil	(((k w e s t )1)((i ng )0)))	;; ing
("questioning"	nil	(((k w e s )1)((ch @ n )0)((i ng )0)))	;; ing
("queueing"	nil	(((k y uu )1)((i ng )0)))	;; ing
("queuing"	nil	(((k y uu )1)((i ng )0)))	;; ing
("quibbling"	nil	(((k w i )1)((b l! )0)((i ng )0)))	;; ing
("quickening"	nil	(((k w i k )1)((@ n )0)((i ng )0)))	;; ing
("quicksilvering"	nil	(((k w i k )1)((s i l )1)((v @ r )0)((i ng )0)))	;; ing
("quietening"	nil	(((k w ai @ t )1)((n! )0)((i ng )0)))	;; ing
("quieting"	nil	(((k w ai @ t^ )1)((i ng )0)))	;; ing
("quilling"	nil	(((k w i l )1)((i ng )0)))	;; ing
("quilting"	nil	(((k w i l t )1)((i ng )0)))	;; ing
("quincys"	nil	(((k w i n) 1) ((s ii z) 0)))	;; unique
("quipping"	nil	(((k w i p )1)((i ng )0)))	;; ing
("quisling"	nil	(((k w i z )1)((l i ng )0)))	;; ing
("quitting"	nil	(((k w i t^ )1)((i ng )0)))	;; ing
("quivering"	nil	(((k w i )1)((v @ r )0)((i ng )0)))	;; ing
("quizzing"	nil	(((k w i z )1)((i ng )0)))	;; ing
("quoting"	nil	(((k w ou t^ )1)((i ng )0)))	;; ing
("ra"	nil	(((r aa) 1))) 	;; maori
("rabbiting"	nil	(((r a )1)((b @ t^ )0)((i ng )0)))	;; ing
("rabbling"	nil	(((r a )1)((b l! )0)((i ng )0)))	;; ing
("racegoing"	nil	(((r ei s )1)((g ou )1)((i ng )0)))	;; ing
("rachels"	nil	(((r ei) 1) ((ch @ l z) 0)))	;; unique
("racing"	nil	(((r ei s )1)((i ng )0)))	;; ing
("racketeering"	nil	(((r a )1)((k @ t )0)((ir r )1)((i ng )0)))	;; ing
("racking"	nil	(((r a k )1)((i ng )0)))	;; ing
("radiating"	nil	(((r ei )1)((d iy )0)((ei t^ )1)((i ng )0)))	;; ing
("radio-location"	nil	(((r ei) 1) ((d ii) 0) ((o) 0) ((l ou) 0) ((k ei) 1) ((sh n!) 0)))	;; oul
("radiobroadcasting"	nil	(((r ei )1)((d iy )0)((ou )0)((b r oo d )1)((k - aa s t )0)((i ng )0)))	;; ing
("radioing"	nil	(((r ei )1)((d iy )0)((ou )0)((i ng )0)))	;; ing
("radioluminescence"	nil	(((r ei) 1) ((d ii) 0) ((o) 0) ((l uu) 1) ((m @) 0) ((n e s) 1) ((n! s) 0)))	;; oul
("radiopaging"	nil	(((r ei )1)((d iy )0)((ou )0)((p ei jh )1)((i ng )0)))	;; ing
("radiuss"	nil	(((r ei) 1) ((d ii @ s) 0) ((@ z) 0)))	;; unique
("raffling"	nil	(((r a )1)((f l! )0)((i ng )0)))	;; ing
("rafting"	nil	(((r aa f t )1)((i ng )0)))	;; ing
("ragging"	nil	(((r a g )1)((i ng )0)))	;; ing
("raging"	nil	(((r ei jh )1)((i ng )0)))	;; ing
("rahui"	nil	(((r aa) 1) ((h uu) 0) ((ii) 0)))	;; unique
("rahui-pokeka"	nil	(((r aa) 1) ((h uu) 0) ((ii) 0) ((p oo) 1) ((k e) 0) ((k @) 0)))	;; unique
("raiding"	nil	(((r ei d )1)((i ng )0)))	;; ing
("railing"	nil	(((r ei l )1)((i ng )0)))	;; ing
("railroading"	nil	(((r ei l )1)((r - ou d )0)((i ng )0)))	;; ing
("railwaymens"	nil	(((r ei l) 1) ((w ei) 0) ((m @ n z) 0)))	;; unique
("raining"	nil	(((r ei n )1)((i ng )0)))	;; ing
("rainmaking"	nil	(((r ei n )1)((m ei k )1)((i ng )0)))	;; ing
("raising"	nil	(((r ei z )1)((i ng )0)))	;; ing
("rakau"	nil	(((r aa) 1) ((k ow) 0)))	;; unique
("raking"	nil	(((r ei k )1)((i ng )0)))	;; ing
("rakiura"	nil	(((r aa) 1) ((k ii) 0) ((uu) 0) ((r @) 0)))	;; unique
("rallying"	nil	(((r a )1)((l iy )0)((i ng )0)))	;; ing
("ramarama"	nil	(((r aa) 1) ((m aa) 0) ((r aa) 0) ((m @) 0)))	;; unique
("rambling"	nil	(((r a m )1)((b l! )0)((i ng )0)))	;; ing
("ramifying"	nil	(((r a )1)((m @ )0)((f ai )1)((i ng )0)))	;; ing
("ramming"	nil	(((r a m )1)((i ng )0)))	;; ing
("rampaging"	nil	(((r a m )0)((p ei jh )1)((i ng )0)))	;; ing
("ramping"	nil	(((r a m p )1)((i ng )0)))	;; ing
("ramrodding"	nil	(((r a m )1)((r o d )1)((i ng )0)))	;; ing
("ramseys"	nil	(((r a m) 1) ((z ii z) 0)))	;; unique
("ranching"	nil	(((r aa n ch )1)((i ng )0)))	;; ing
("randomising"	nil	(((r a n )1)((d @ m )0)((ai z )1)((i ng )0)))	;; ing
("randomizing"	nil	(((r a n )1)((d @ m )0)((ai z )1)((i ng )0)))	;; ing
("rangatahi"	nil	(((r uh ng) 1) ((aa) 0) ((t aa) 0) ((h ii) 0)))	;; unique
("rangatira"	nil	(((r uh ng) 1) ((aa) 0) ((t ii) 0) ((r @) 0)))	;; unique
("rangatiratanga"	nil	(((r uh ng) 1) ((aa) 0) ((t ii) 0) ((r aa) 0) ((t uh ng) 0) ((@) 0)))	;; unique
("rangefinding"	nil	(((r ei n jh )1)((f ai n d )1)((i ng )0)))	;; ing
("rangi"	nil	(((r uh ng) 1) ((ii) 0)))	;; unique
("rangimarie"	nil	(((r uh ng) 1) ((ii) 0) ((m aa) 1) ((r ii) 0) ((ei) 0)))	;; unique
("ranging"	nil	(((r ei n jh )1)((i ng )0)))	;; ing
("rangiora"	nil	(((r uh ng) 0) ((ii) 0) ((oo) 1) ((r @) 0)))	;; unique
("rangitata"	nil	(((r uh ng) 1) ((ii) 0) ((t aa) 0) ((t^ @) 0)))	;; unique
("rangitoto"	nil	(((r uh ng) 1) ((ii) 0) ((t ou) 0) ((t^ ou) 0)))	;; unique
("rangoons"	nil	(((r a ng) 0) ((g uu n z) 1)))	;; unique
("ranguru"	nil	(((r uh ng) 1) ((@) 0) ((r uu) 0)))	;; unique
("ranking"	nil	(((r a ng k )1)((i ng )0)))	;; ing
("rankling"	nil	(((r a ng )1)((k l! )0)((i ng )0)))	;; ing
("ransacking"	nil	(((r a n )1)((s a k )0)((i ng )0)))	;; ing
("ranting"	nil	(((r a n t )1)((i ng )0)))	;; ing
("raping"	nil	(((r ei p )1)((i ng )0)))	;; ing
("rapping"	nil	(((r a p )1)((i ng )0)))	;; ing
("raranga"	nil	(((r aa) 1) ((r uh ng) 0) ((@) 0)))	;; unique
("rarefying"	nil	(((r ir r )1)((@ )0)((f ai )1)((i ng )0)))	;; ing
("rari"	nil	(((r aa) 0) ((r ii) 1)))	;; unique
("raring"	nil	(((r ir )1)((r i ng )0)))	;; ing
("ras"	nil	(((r aa z) 1)))	;; unique
("rasping"	nil	(((r aa s p )1)((i ng )0)))	;; ing
("rata"	nil	(((r aa) 1) ((t^ @) 0))) 	;; maori
("ratahuihui"	nil	(((r aa) 1) ((t aa) 0) ((h uu) 0) ((ii) 0) ((h uu) 0) ((ii) 0)))	;; unique
("ratana"	nil	(((r aa) 1) ((t aa) 0) ((n @) 0)))	;; unique
("ratcheting"	nil	(((r a )1)((ch @ t^ )0)((i ng )0)))	;; ing
("ratifying"	nil	(((r a )1)((t^ @ )0)((f ai )1)((i ng )0)))	;; ing
("rating"	nil	(((r ei t^ )1)((i ng )0)))	;; ing
("rationalising"	nil	(((r a sh )1)((n l! )0)((ai z )1)((i ng )0)))	;; ing
("rationalizing"	nil	(((r a sh )1)((n l! )0)((ai z )1)((i ng )0)))	;; ing
("rationing"	nil	(((r a )1)((sh n! )0)((i ng )0)))	;; ing
("ratting"	nil	(((r a t^ )1)((i ng )0)))	;; ing
("rattling"	nil	(((r a )1)((t l! )0)((i ng )0)))	;; ing
("rauhuia"	nil	(((r ow) 1) ((h uu) 0) ((ii) 0) ((@) 0)))	;; unique
("raukawa"	nil	(((r ow) 1) ((k aa) 0) ((w @) 0)))	;; unique
("raukura"	nil	(((r ow) 1) ((k uu) 0) ((r @) 0)))	;; unique
("raunui"	nil	(((r ow) 1) ((n uu) 0) ((ii) 0)))	;; unique
("raupatu"	nil	(((r ow) 1) ((p aa) 0) ((t uu) 0)))	;; unique
("raupeka"	nil	(((r ow) 1) ((p e) 0) ((k @) 0)))	;; unique
("raupo"	nil	(((r aa) 1) ((u) 0) ((p ou) 0)))	;; unique
("raurau"	nil	(((r ow) 1) ((r ow) 0)))	;; unique
("raurekau"	nil	(((r ow) 0) ((r e) 1) ((k ow) 0)))	;; unique
("rauriki"	nil	(((r aa) 1) ((u) 0) ((r @) 0) ((k ii) 0)))	;; unique
("raurimu"	nil	(((r ow) 1) ((r ii) 0) ((m uu) 0)))	;; unique
("rautini"	nil	(((r ow) 1) ((t i) 0) ((n ii) 0)))	;; unique
("ravaging"	nil	(((r a )1)((v @ jh )0)((i ng )0)))	;; ing
("ravening"	nil	(((r a )1)((v n! )0)((i ng )0)))	;; ing
("raving"	nil	(((r ei v )1)((i ng )0)))	;; ing
("ravioli"	nil	(((r a) 1) ((v ii) 0) ((o) 1) ((l ii) 0)))	;; oul
("ravishing"	nil	(((r a )1)((v i sh )0)((i ng )0)))	;; ing
("rawaru"	nil	(((r aa) 1) ((w aa) 0) ((r uu) 0)))	;; unique
("rawiri"	nil	(((r aa) 1) ((w ii) 0) ((r ii) 0)))	;; unique
("raymonds"	nil	(((r ei) 1) ((m @ n d z) 0)))	;; unique
("razing"	nil	(((r ei z )1)((i ng )0)))	;; ing
("razoring"	nil	(((r ei )1)((z @ r )0)((i ng )0)))	;; ing
("rcas"	nil	(((aa) 1) ((s ii) 0) ((ei z) 1)))	;; unique
("re-altering"	nil	(((r - ii )0)((oo l )1)((t @ r )0)((i ng )0)))	;; ing
("re-building"	nil	(((r - ii )0)((b i l d )1)((i ng )0)))	;; ing
("re-covering"	nil	(((r - ii )0)((k uh )1)((v @ r )0)((i ng )0)))	;; ing
("re-educating"	nil	(((r - ii )0)((e )1)((jh uw )0)((k ei t^ )1)((i ng )0)))	;; ing
("re-emerging"	nil	(((r ii )1)((i )0)((m @@r jh )1)((i ng )0)))	;; ing
("re-enacting"	nil	(((r ii @ n )1)((a k t )1)((i ng )0)))	;; ing
("re-engaging"	nil	(((r ii @ n )1)((g ei jh )1)((i ng )0)))	;; ing
("re-engineering"	nil	(((r ii )1)((e n )0)((jh i n )0)((ir r )1)((i ng )0)))	;; ing
("re-entering"	nil	(((r - ii )0)((e n )1)((t @ r )0)((i ng )0)))	;; ing
("re-establishing"	nil	(((r ii )1)((i )0)((s t a )1)((b l i sh )0)((i ng )0)))	;; ing
("re-examining"	nil	(((r ii @ g )1)((z a )1)((m i n )0)((i ng )0)))	;; ing
("re-pressing"	nil	(((r - ii )0)((p r e s )1)((i ng )0)))	;; ing
("re-using"	nil	(((r - ii )0)((y uu z )1)((i ng )0)))	;; ing
("reabsorbing"	nil	(((r - ii @ b )0)((z oo b )1)((i ng )0)))	;; ing
("reacclimatizing"	nil	(((r - ii @ )0)((k l ai )1)((m @ t )0)((ai z )1)((i ng )0)))	;; ing
("reaching"	nil	(((r ii ch )1)((i ng )0)))	;; ing
("reacquainting"	nil	(((r - ii @ )0)((k w ei n t )1)((i ng )0)))	;; ing
("reacting"	nil	(((r iy )0)((a k t )1)((i ng )0)))	;; ing
("reactivating"	nil	(((r - ii )0)((a k t )1)((@ v )0)((ei t^ )1)((i ng )0)))	;; ing
("readapting"	nil	(((r - ii @ )0)((d a p t )1)((i ng )0)))	;; ing
("readding"	nil	(((r - ii )0)((a d )1)((i ng )0)))	;; ing
("readdressing"	nil	(((r - ii @ )0)((d r e s )1)((i ng )0)))	;; ing
("reading"	nil	(((r e )1)((d i ng )0)))	;; ing
("readjusting"	nil	(((r - ii @ )0)((jh uh s t )1)((i ng )0)))	;; ing
("readmitting"	nil	(((r - ii @ d )0)((m i t^ )1)((i ng )0)))	;; ing
("readvertising"	nil	(((r - ii )0)((a d )1)((v @ )0)((t ai z )1)((i ng )0)))	;; ing
("readvertizing"	nil	(((r - ii )0)((a d )1)((v @ )0)((t ai z )1)((i ng )0)))	;; ing
("readying"	nil	(((r e )1)((d iy )0)((i ng )0)))	;; ing
("reaffirming"	nil	(((r - ii @ )0)((f @@r m )1)((i ng )0)))	;; ing
("reagans"	nil	(((r ei) 1) ((g @ n z) 0)))	;; unique
("realigning"	nil	(((r - ii @ )0)((l ai n )1)((i ng )0)))	;; ing
("realising"	nil	(((r ii @ )1)((l ai z )0)((i ng )0)))	;; ing
("realizing"	nil	(((r ii @ )1)((l ai z )0)((i ng )0)))	;; ing
("reallocating"	nil	(((r - ii )0)((a )1)((l @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("reannealing"	nil	(((r - ii @ )0)((n ii l )1)((i ng )0)))	;; ing
("reaping"	nil	(((r ii p )1)((i ng )0)))	;; ing
("reappearing"	nil	(((r - ii @ )0)((p ir r )1)((i ng )0)))	;; ing
("reapplying"	nil	(((r - ii @ )0)((p l ai )1)((i ng )0)))	;; ing
("reappointing"	nil	(((r - ii @ )0)((p oi n t )1)((i ng )0)))	;; ing
("reappraising"	nil	(((r - ii @ )0)((p r ei z )1)((i ng )0)))	;; ing
("rearing"	nil	(((r ir r )1)((i ng )0)))	;; ing
("rearming"	nil	(((r - ii )0)((aa m )1)((i ng )0)))	;; ing
("rearranging"	nil	(((r - ii @ )0)((r ei n jh )1)((i ng )0)))	;; ing
("rearresting"	nil	(((r - ii @ )0)((r e s t )1)((i ng )0)))	;; ing
("reasoning"	nil	(((r ii )1)((z n! )0)((i ng )0)))	;; ing
("reassembling"	nil	(((r - ii @ )0)((s e m )1)((b l! )0)((i ng )0)))	;; ing
("reasserting"	nil	(((r - ii @ )0)((s @@r t^ )1)((i ng )0)))	;; ing
("reassessing"	nil	(((r - ii @ )0)((s e s )1)((i ng )0)))	;; ing
("reassigning"	nil	(((r - ii @ )0)((s ai n )1)((i ng )0)))	;; ing
("reassuring"	nil	(((r - ii @ )0)((sh ur r )1)((i ng )0)))	;; ing
("reattaching"	nil	(((r - ii @ )0)((t a ch )1)((i ng )0)))	;; ing
("reawakening"	nil	(((r - ii @ )0)((w ei k )1)((@ n )0)((i ng )0)))	;; ing
("reawaking"	nil	(((r - ii @ )0)((w ei k )1)((i ng )0)))	;; ing
("rebalancing"	nil	(((r - ii )0)((b a )1)((l @ n s )0)((i ng )0)))	;; ing
("rebasing"	nil	(((r - ii )0)((b ei s )1)((i ng )0)))	;; ing
("rebelling"	nil	(((r i )0)((b a l )1)((i ng )0)))	;; ing
("rebinding"	nil	(((r - ii )0)((b ai n d )1)((i ng )0)))	;; ing
("rebirthing"	nil	(((r - ii )0)((b @@r th )1)((i ng )0)))	;; ing
("reblocking"	nil	(((r - ii )0)((b l o k )1)((i ng )0)))	;; ing
("reblossoming"	nil	(((r - ii )0)((b l o )1)((s m! )0)((i ng )0)))	;; ing
("reboosting"	nil	(((r - ii )0)((b uu s t )1)((i ng )0)))	;; ing
("rebooting"	nil	(((r - ii )0)((b uu t^ )1)((i ng )0)))	;; ing
("rebounding"	nil	(((r i )0)((b ow n d )1)((i ng )0)))	;; ing
("rebroadcasting"	nil	(((r - ii )0)((b r oo d )1)((k aa s t )1)((i ng )0)))	;; ing
("rebuffing"	nil	(((r i )0)((b uh f )1)((i ng )0)))	;; ing
("rebuilding"	nil	(((r - ii )0)((b i l d )1)((i ng )0)))	;; ing
("rebuking"	nil	(((r i )0)((b y uu k )1)((i ng )0)))	;; ing
("rebutting"	nil	(((r i )0)((b uh t^ )1)((i ng )0)))	;; ing
("rebuttoning"	nil	(((r - ii )0)((b uh )1)((t n! )0)((i ng )0)))	;; ing
("recabling"	nil	(((r - ii )0)((k ei )1)((b l! )0)((i ng )0)))	;; ing
("recalculating"	nil	(((r - ii )0)((k a l )1)((k y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("recalling"	nil	(((r i )0)((k oo l )1)((i ng )0)))	;; ing
("recanting"	nil	(((r i )0)((k a n t )1)((i ng )0)))	;; ing
("recapitalising"	nil	(((r - ii )0)((k a )1)((p @ )0)((t l! )0)((ai z )1)((i ng )0)))	;; ing
("recapitalizing"	nil	(((r - ii )0)((k a )1)((p @ )0)((t l! )0)((ai z )1)((i ng )0)))	;; ing
("recapitulating"	nil	(((r ii )1)((k @ )0)((p i )1)((ch @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("recapping"	nil	(((r - ii )0)((k a p )1)((i ng )0)))	;; ing
("recapturing"	nil	(((r - ii )0)((k a p )1)((ch @ r )0)((i ng )0)))	;; ing
("recarving"	nil	(((r - ii )0)((k aa v )1)((i ng )0)))	;; ing
("recasting"	nil	(((r - ii )0)((k aa s t )1)((i ng )0)))	;; ing
("recceing"	nil	(((r e )1)((k iy )0)((i ng )0)))	;; ing
("reccying"	nil	(((r e )1)((k iy )0)((i ng )0)))	;; ing
("receding"	nil	(((r i )0)((s ii d )1)((i ng )0)))	;; ing
("receiving"	nil	(((r @ )0)((s ii v )1)((i ng )0)))	;; ing
("recentralizing"	nil	(((r - ii )0)((s e n )1)((t r @ l )0)((ai z )1)((i ng )0)))	;; ing
("recertifying"	nil	(((r - ii )0)((s @@r )1)((t^ @ )0)((f ai )1)((i ng )0)))	;; ing
("recessing"	nil	(((r i )0)((s e s )1)((i ng )0)))	;; ing
("rechannelling"	nil	(((r - ii )0)((ch a )1)((n l! )0)((i ng )0)))	;; ing
("recharging"	nil	(((r - ii )0)((ch aa jh )1)((i ng )0)))	;; ing
("rechecking"	nil	(((r - ii )0)((ch e k )1)((i ng )0)))	;; ing
("reciprocating"	nil	(((r i )0)((s i )1)((p r @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("reciting"	nil	(((r @ )0)((s ai t^ )1)((i ng )0)))	;; ing
("recking"	nil	(((r e k )1)((i ng )0)))	;; ing
("reckoning"	nil	(((r e )1)((k @ n )0)((i ng )0)))	;; ing
("reclaiming"	nil	(((r i )0)((k l ei m )1)((i ng )0)))	;; ing
("reclassifying"	nil	(((r - ii )0)((k l a s )1)((@ )0)((f ai )1)((i ng )0)))	;; ing
("reclining"	nil	(((r i )0)((k l ai n )1)((i ng )0)))	;; ing
("reclothing"	nil	(((r - ii )0)((k l ou dh )1)((i ng )0)))	;; ing
("recodifying"	nil	(((r - ii )0)((k ou d )1)((@ )0)((f ai )1)((i ng )0)))	;; ing
("recoding"	nil	(((r - ii )0)((k ou d )1)((i ng )0)))	;; ing
("recognising"	nil	(((r e )1)((k @ g )0)((n ai z )1)((i ng )0)))	;; ing
("recognizing"	nil	(((r e )1)((k @ g )0)((n ai z )1)((i ng )0)))	;; ing
("recoiling"	nil	(((r i )0)((k oi l )1)((i ng )0)))	;; ing
("recollating"	nil	(((r ii )1)((k @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("recollecting"	nil	(((r e )1)((k @ )0)((l e k t )1)((i ng )0)))	;; ing
("recombining"	nil	(((r ii )1)((k @ m )0)((b ai n )1)((i ng )0)))	;; ing
("recommencing"	nil	(((r ii )1)((k @ )0)((m e n s )1)((i ng )0)))	;; ing
("recommending"	nil	(((r e )1)((k @ )0)((m e n d )1)((i ng )0)))	;; ing
("recompiling"	nil	(((r ii )1)((k @ m )0)((p ai l )1)((i ng )0)))	;; ing
("recomputing"	nil	(((r ii )1)((k @ m )0)((p y uu t^ )1)((i ng )0)))	;; ing
("reconciling"	nil	(((r e )1)((k @ n )0)((s ai l )1)((i ng )0)))	;; ing
("reconditioning"	nil	(((r ii )1)((k @ n )0)((d i )1)((sh n! )0)((i ng )0)))	;; ing
("reconfiguring"	nil	(((r ii )1)((k @ n )0)((f i )1)((g @ r )0)((i ng )0)))	;; ing
("reconfirming"	nil	(((r ii )1)((k @ n )0)((f @@r m )1)((i ng )0)))	;; ing
("reconnecting"	nil	(((r ii )1)((k @ )0)((n e k t )1)((i ng )0)))	;; ing
("reconsidering"	nil	(((r ii )1)((k @ n )0)((s i )1)((d @ r )0)((i ng )0)))	;; ing
("reconsolidating"	nil	(((r ii )1)((k @ n )0)((s o )1)((l @ d )0)((ei t^ )1)((i ng )0)))	;; ing
("reconstituting"	nil	(((r - ii )0)((k o n )1)((s t i )0)((t y uu t^ )1)((i ng )0)))	;; ing
("reconstructing"	nil	(((r ii )1)((k @ n )0)((s t r uh k t )1)((i ng )0)))	;; ing
("reconvening"	nil	(((r ii )1)((k @ n )0)((v ii n )1)((i ng )0)))	;; ing
("reconverting"	nil	(((r ii )1)((k @ n )0)((v @@r t^ )1)((i ng )0)))	;; ing
("recopying"	nil	(((r - ii )0)((k o )1)((p iy )0)((i ng )0)))	;; ing
("record-breaking"	nil	(((r e )1)((k oo d )0)((b r ei k )1)((i ng )0)))	;; ing
("record-keeping"	nil	(((r e )1)((k oo d )0)((k ii p )1)((i ng )0)))	;; ing
("recording"	nil	(((r i )0)((k oo d )1)((i ng )0)))	;; ing
("recordkeeping"	nil	(((r e )1)((k oo d )0)((k ii p )1)((i ng )0)))	;; ing
("recosting"	nil	(((r - ii )0)((k o s t )1)((i ng )0)))	;; ing
("recounting"	nil	(((r - ii )0)((k ow n t )1)((i ng )0)))	;; ing
("recouping"	nil	(((r i )0)((k uu p )1)((i ng )0)))	;; ing
("recovering"	nil	(((r i )0)((k uh )1)((v @ r )0)((i ng )0)))	;; ing
("recreating"	nil	(((r ii )1)((k r iy )0)((ei t^ )1)((i ng )0)))	;; ing
("recriminating"	nil	(((r i )0)((k r i )1)((m i )0)((n ei t^ )1)((i ng )0)))	;; ing
("recrossing"	nil	(((r - ii )0)((k r o s )1)((i ng )0)))	;; ing
("recruiting"	nil	(((r @ )0)((k r uu t^ )1)((i ng )0)))	;; ing
("rectifying"	nil	(((r e k )1)((t @ )0)((f ai )1)((i ng )0)))	;; ing
("recuperating"	nil	(((r i )0)((k uu )1)((p @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("recurring"	nil	(((r i )0)((k @@r r )1)((i ng )0)))	;; ing
("recursing"	nil	(((r - ii )0)((k @@r s )1)((i ng )0)))	;; ing
("recycling"	nil	(((r - ii )0)((s ai )1)((k l! )0)((i ng )0)))	;; ing
("reddening"	nil	(((r e d )1)((n! )0)((i ng )0)))	;; ing
("redding"	nil	(((r e )1)((d i ng )0)))	;; ing
("redeclaring"	nil	(((r ii )1)((d i )0)((k l ir r )1)((i ng )0)))	;; ing
("redecorating"	nil	(((r - ii )0)((d e )1)((k @ r )0)((ei t^ )1)((i ng )0)))	;; ing
("rededicating"	nil	(((r - ii )0)((d e )1)((d @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("redeeming"	nil	(((r i )0)((d ii m )1)((i ng )0)))	;; ing
("redefining"	nil	(((r ii )1)((d i )0)((f ai n )1)((i ng )0)))	;; ing
("redelivering"	nil	(((r ii )1)((d i )0)((l i )1)((v @ r )0)((i ng )0)))	;; ing
("redeploying"	nil	(((r ii )1)((d i )0)((p l oi )1)((i ng )0)))	;; ing
("redesigning"	nil	(((r ii )1)((d i )0)((z ai n )1)((i ng )0)))	;; ing
("redeveloping"	nil	(((r ii )1)((d i )0)((v a )1)((l @ p )0)((i ng )0)))	;; ing
("redialing"	nil	(((r - ii )0)((d ai @ l )1)((i ng )0)))	;; ing
("redialling"	nil	(((r - ii )0)((d ai @ l )1)((i ng )0)))	;; ing
("reding"	nil	(((r e )1)((d i ng )0)))	;; ing
("redirecting"	nil	(((r ii )1)((d ai )0)((r e k t )1)((i ng )0)))	;; ing
("rediscovering"	nil	(((r ii )1)((d i )0)((s k uh )1)((v @ r )0)((i ng )0)))	;; ing
("redisseminating"	nil	(((r ii )1)((d i )0)((s e )1)((m i )0)((n ei t^ )1)((i ng )0)))	;; ing
("redistributing"	nil	(((r ii )1)((d i )0)((s t r i )1)((b y uw t^ )0)((i ng )0)))	;; ing
("redocking"	nil	(((r - ii )0)((d o k )1)((i ng )0)))	;; ing
("redoing"	nil	(((r - ii )0)((d uu )1)((i ng )0)))	;; ing
("redoubling"	nil	(((r - ii )0)((d uh )1)((b l! )0)((i ng )0)))	;; ing
("redounding"	nil	(((r i )0)((d ow n d )1)((i ng )0)))	;; ing
("redpoll"	nil	(((r e d) 1) ((p o l) 0)))	;; oul
("redrafting"	nil	(((r - ii )0)((d r aa f t )1)((i ng )0)))	;; ing
("redrawing"	nil	(((r - ii )0)((d r oo )1)((i ng )0)))	;; ing
("redressing"	nil	(((r i )0)((d r e s )1)((i ng )0)))	;; ing
("redrilling"	nil	(((r - ii )0)((d r i l )1)((i ng )0)))	;; ing
("reducing"	nil	(((r @ )0)((d y uu s )1)((i ng )0)))	;; ing
("reduplicating"	nil	(((r - ii )0)((d y uu )1)((p l @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("reechoing"	nil	(((r - ii )0)((e )1)((k ou )0)((i ng )0)))	;; ing
("reef-building"	nil	(((r ii f )1)((b i l d )1)((i ng )0)))	;; ing
("reeking"	nil	(((r ii k )1)((i ng )0)))	;; ing
("reelecting"	nil	(((r ii )1)((i )0)((l e k t )1)((i ng )0)))	;; ing
("reeling"	nil	(((r ii l )1)((i ng )0)))	;; ing
("reemerging"	nil	(((r ii )1)((i )0)((m @@r jh )1)((i ng )0)))	;; ing
("reenacting"	nil	(((r ii @ n )1)((a k t )1)((i ng )0)))	;; ing
("reencoding"	nil	(((r ii @ n )1)((k ou d )1)((i ng )0)))	;; ing
("reenforcing"	nil	(((r ii @ n )1)((f oo s )1)((i ng )0)))	;; ing
("reengineering"	nil	(((r ii )1)((e n )0)((jh i n )0)((ir r )1)((i ng )0)))	;; ing
("reentering"	nil	(((r - ii )0)((e n )1)((t @ r )0)((i ng )0)))	;; ing
("reestablishing"	nil	(((r ii )1)((i )0)((s t a )1)((b l i sh )0)((i ng )0)))	;; ing
("reevaluating"	nil	(((r ii )1)((i )0)((v a )1)((l y uw )0)((ei t^ )1)((i ng )0)))	;; ing
("reexamining"	nil	(((r ii @ g )1)((z a )1)((m i n )0)((i ng )0)))	;; ing
("reexporting"	nil	(((r ii @ k )1)((s p oo t^ )1)((i ng )0)))	;; ing
("refastening"	nil	(((r - ii )0)((f aa s )1)((n! )0)((i ng )0)))	;; ing
("refereeing"	nil	(((r e )1)((f @ r )0)((ii )1)((i ng )0)))	;; ing
("referencing"	nil	(((r e )1)((f @ r )0)((@ n s )0)((i ng )0)))	;; ing
("referring"	nil	(((r @ )0)((f @@r r )1)((i ng )0)))	;; ing
("refiguring"	nil	(((r - ii )0)((f i )1)((g @ r )0)((i ng )0)))	;; ing
("refiling"	nil	(((r - ii )0)((f ai l )1)((i ng )0)))	;; ing
("refilling"	nil	(((r - ii )0)((f i l )1)((i ng )0)))	;; ing
("refinancing"	nil	(((r - ii )0)((f ai )1)((n a n s )0)((i ng )0)))	;; ing
("refinerys"	nil	(((r i) 0) ((f ai n) 1) ((@) 0) ((r ii z) 0)))	;; unique
("refining"	nil	(((r i )0)((f ai n )1)((i ng )0)))	;; ing
("refinishing"	nil	(((r - ii )0)((f i )1)((n i sh )0)((i ng )0)))	;; ing
("refitting"	nil	(((r - ii )0)((f i t^ )1)((i ng )0)))	;; ing
("refixing"	nil	(((r - ii )0)((f i k s )1)((i ng )0)))	;; ing
("reflagging"	nil	(((r - ii )0)((f l a g )1)((i ng )0)))	;; ing
("reflecting"	nil	(((r @ )0)((f l e k t )1)((i ng )0)))	;; ing
("reflowering"	nil	(((r - ii )0)((f l ow r )1)((i ng )0)))	;; ing
("reflowing"	nil	(((r - ii )0)((f l ou )1)((i ng )0)))	;; ing
("refocusing"	nil	(((r - ii )0)((f ou )1)((k @ s )0)((i ng )0)))	;; ing
("refolded"	nil	(((r ii) 0) ((f o l d) 1) ((@ d) 0)))	;; oul
("refolding"	nil	(((r ii) 0) ((f o l d) 1) ((i ng) 0)))	;; oul
("reforesting"	nil	(((r - ii )0)((f o )1)((r @ s t )0)((i ng )0)))	;; ing
("reformatting"	nil	(((r - ii )0)((f oo )1)((m a t^ )0)((i ng )0)))	;; ing
("reforming"	nil	(((r @ )0)((f oo m )1)((i ng )0)))	;; ing
("reformulating"	nil	(((r - ii )0)((f oo )1)((m y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("refracting"	nil	(((r i )0)((f r a k t )1)((i ng )0)))	;; ing
("refraining"	nil	(((r i )0)((f r ei n )1)((i ng )0)))	;; ing
("reframing"	nil	(((r - ii )0)((f r ei m )1)((i ng )0)))	;; ing
("refreezing"	nil	(((r - ii )0)((f r ii z )1)((i ng )0)))	;; ing
("refreshening"	nil	(((r i )0)((f r e sh )1)((n! )0)((i ng )0)))	;; ing
("refreshing"	nil	(((r i )0)((f r e sh )1)((i ng )0)))	;; ing
("refrigerating"	nil	(((r i )0)((f r i )1)((jh @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("refuel"	nil	(((r ii) 0) ((f y u l) 1)))	;; uul
("refueled"	nil	(((r ii) 0) ((f y u l d) 1)))	;; uul
("refueling"	nil	(((r ii) 0) ((f y u l) 1) ((i ng) 0)))	;; uul
("refuelled"	nil	(((r ii) 0) ((f y u l d) 1)))	;; uul
("refuelling"	nil	(((r ii) 0) ((f y u l) 1) ((i ng) 0)))	;; uul
("refuels"	nil	(((r ii) 0) ((f y u l z) 1)))	;; uul
("refunding"	nil	(((r i )0)((f uh n d )1)((i ng )0)))	;; ing
("refurbishing"	nil	(((r - ii )0)((f @@r )1)((b i sh )0)((i ng )0)))	;; ing
("refurnishing"	nil	(((r - ii )0)((f @@r )1)((n i sh )0)((i ng )0)))	;; ing
("refusing"	nil	(((r @ )0)((f y uu z )1)((i ng )0)))	;; ing
("refuting"	nil	(((r i )0)((f y uu t^ )1)((i ng )0)))	;; ing
("regaining"	nil	(((r i )0)((g ei n )1)((i ng )0)))	;; ing
("regaling"	nil	(((r i )0)((g ei l )1)((i ng )0)))	;; ing
("regarding"	nil	(((r @ )0)((g aa d )1)((i ng )0)))	;; ing
("regenerating"	nil	(((r i )0)((jh e )1)((n @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("regetting"	nil	(((r - ii )0)((g e t^ )1)((i ng )0)))	;; ing
("regimenting"	nil	(((r e )1)((jh @ )0)((m e n t )1)((i ng )0)))	;; ing
("regionalising"	nil	(((r ii )1)((jh @ n )0)((l! )0)((ai z )1)((i ng )0)))	;; ing
("regionalizing"	nil	(((r ii )1)((jh @ n )0)((l! )0)((ai z )1)((i ng )0)))	;; ing
("registering"	nil	(((r e )1)((jh i )0)((s t @ r )0)((i ng )0)))	;; ing
("regrading"	nil	(((r - ii )0)((g r ei d )1)((i ng )0)))	;; ing
("regressing"	nil	(((r i )0)((g r e s )1)((i ng )0)))	;; ing
("regretting"	nil	(((r @ )0)((g r e t^ )1)((i ng )0)))	;; ing
("regrinding"	nil	(((r - ii )0)((g r ai n d )1)((i ng )0)))	;; ing
("regrouping"	nil	(((r - ii )0)((g r uu p )1)((i ng )0)))	;; ing
("regularising"	nil	(((r e )1)((g y @ )0)((l @ r )0)((ai z )1)((i ng )0)))	;; ing
("regularizing"	nil	(((r e )1)((g y @ )0)((l @ r )0)((ai z )1)((i ng )0)))	;; ing
("regulating"	nil	(((r e )1)((g y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("regurgitating"	nil	(((r i )0)((g @@r )1)((jh i )0)((t ei t^ )1)((i ng )0)))	;; ing
("rehabilitating"	nil	(((r ii )1)((h @ )0)((b i )1)((l @ )0)((t ei t^ )1)((i ng )0)))	;; ing
("rehacking"	nil	(((r - ii )0)((h a k )1)((i ng )0)))	;; ing
("rehashing"	nil	(((r - ii )0)((h a sh )1)((i ng )0)))	;; ing
("rehearing"	nil	(((r - ii )0)((h ir r )1)((i ng )0)))	;; ing
("rehearsing"	nil	(((r i )0)((h @@r s )1)((i ng )0)))	;; ing
("reheating"	nil	(((r - ii )0)((h ii t^ )1)((i ng )0)))	;; ing
("rehiring"	nil	(((r - ii )0)((h ai @ r )1)((i ng )0)))	;; ing
("rehosting"	nil	(((r - ii )0)((h ou s t )1)((i ng )0)))	;; ing
("rehousing"	nil	(((r - ii )0)((h ow z )1)((i ng )0)))	;; ing
("rehydrating"	nil	(((r ii )1)((h ai )0)((d r ei t^ )1)((i ng )0)))	;; ing
("reids"	nil	(((r ii d z) 1)))	;; unique
("reigning"	nil	(((r ei n )1)((i ng )0)))	;; ing
("reigniting"	nil	(((r ii )1)((i g )0)((n ai t^ )1)((i ng )0)))	;; ing
("reimaging"	nil	(((r - ii )0)((i )1)((m i jh )0)((i ng )0)))	;; ing
("reimbursing"	nil	(((r ii )1)((i m )0)((b @@r s )1)((i ng )0)))	;; ing
("reimposing"	nil	(((r ii )1)((i m )0)((p ou z )1)((i ng )0)))	;; ing
("reincarnating"	nil	(((r ii )1)((i n )0)((k aa )1)((n ei t^ )0)((i ng )0)))	;; ing
("reincorporating"	nil	(((r ii )1)((i n )0)((k oo )1)((p @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("reindenting"	nil	(((r ii )1)((i n )0)((d e n t )1)((i ng )0)))	;; ing
("reindexing"	nil	(((r - ii )0)((i n )1)((d e k s )0)((i ng )0)))	;; ing
("reindustrializing"	nil	(((r ii )1)((i n )0)((d uh )1)((s t r iy @ l )0)((ai z )1)((i ng )0)))	;; ing
("reinfecting"	nil	(((r ii )1)((i n )0)((f e k t )1)((i ng )0)))	;; ing
("reinforcing"	nil	(((r ii )1)((i n )0)((f oo s )1)((i ng )0)))	;; ing
("reinga"	nil	(((r e) 0) ((i) 0) ((i ng @) 1)))	;; unique
("reingolds"	nil	(((r ai n) 1) ((g o l d z) 0)))	;; unique
("reinhabiting"	nil	(((r ii )1)((i n )0)((h a )1)((b @ t^ )0)((i ng )0)))	;; ing
("reinhold"	nil	(((r ei n) 1) ((h o l d) 0)))	;; oul
("reining"	nil	(((r ei n )1)((i ng )0)))	;; ing
("reinitializing"	nil	(((r ii )1)((i )0)((n i )1)((sh l! )0)((ai z )1)((i ng )0)))	;; ing
("reinjecting"	nil	(((r ii )1)((i n )0)((jh e k t )1)((i ng )0)))	;; ing
("reinserting"	nil	(((r ii )1)((i n )0)((s @@r t^ )1)((i ng )0)))	;; ing
("reinstalling"	nil	(((r ii )1)((i n )0)((s t oo l )1)((i ng )0)))	;; ing
("reinstating"	nil	(((r ii )1)((i n )0)((s t ei t^ )1)((i ng )0)))	;; ing
("reinstituting"	nil	(((r - ii )0)((i n )1)((s t i )0)((t y uu t^ )1)((i ng )0)))	;; ing
("reinstitutionalizing"	nil	(((r ii )1)((i n )0)((s t i )0)((t y uu )1)((sh n! )0)((@ l )0)((ai z )1)((i ng )0)))	;; ing
("reintegrating"	nil	(((r - ii )0)((i n )1)((t @ )0)((g r ei t^ )1)((i ng )0)))	;; ing
("reinterpreting"	nil	(((r ii )1)((i n )0)((t @@r )1)((p r @ t^ )0)((i ng )0)))	;; ing
("reinterrogating"	nil	(((r ii )1)((i n )0)((t e )1)((r @ )0)((g ei t^ )1)((i ng )0)))	;; ing
("reintroducing"	nil	(((r ii )1)((i n )0)((t r @ )0)((d y uu s )1)((i ng )0)))	;; ing
("reinventing"	nil	(((r ii )1)((i n )0)((v e n t )1)((i ng )0)))	;; ing
("reinvesting"	nil	(((r ii )1)((i n )0)((v e s t )1)((i ng )0)))	;; ing
("reinvigorating"	nil	(((r ii )1)((i n )0)((v i )1)((g @ r )0)((ei t^ )1)((i ng )0)))	;; ing
("reinvoking"	nil	(((r ii )1)((i n )0)((v ou k )1)((i ng )0)))	;; ing
("reissuing"	nil	(((r - ii )0)((i )1)((sh uw )0)((i ng )0)))	;; ing
("reiterating"	nil	(((r - ii )0)((i )1)((t^ @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("rejecting"	nil	(((r i )0)((jh e k t )1)((i ng )0)))	;; ing
("rejigging"	nil	(((r - ii )0)((jh i g )1)((i ng )0)))	;; ing
("rejoicing"	nil	(((r i )0)((jh oi s )1)((i ng )0)))	;; ing
("rejoining"	nil	(((r - ii )0)((jh oi n )1)((i ng )0)))	;; ing
("rejuvenating"	nil	(((r i )0)((jh uu )1)((v @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("reka"	nil	(((r e) 1) ((k @) 0)))	;; unique
("rekindling"	nil	(((r - ii )0)((k i n )1)((d l! )0)((i ng )0)))	;; ing
("rekohu"	nil	(((r e) 1) ((k @) 0) ((h uu) 0)))	;; unique
("relabeling"	nil	(((r - ii )0)((l ei )1)((b l! )0)((i ng )0)))	;; ing
("relabelling"	nil	(((r - ii )0)((l ei )1)((b l! )0)((i ng )0)))	;; ing
("relapsing"	nil	(((r i )0)((l a p s )1)((i ng )0)))	;; ing
("relating"	nil	(((r i )0)((l ei t^ )1)((i ng )0)))	;; ing
("relaunching"	nil	(((r - ii )0)((l oo n ch )1)((i ng )0)))	;; ing
("relaxing"	nil	(((r i )0)((l a k s )1)((i ng )0)))	;; ing
("relaying"	nil	(((r - ii )0)((l ei )1)((i ng )0)))	;; ing
("relearning"	nil	(((r - ii )0)((l @@r n )1)((i ng )0)))	;; ing
("releasing"	nil	(((r i )0)((l ii s )1)((i ng )0)))	;; ing
("releaving"	nil	(((r - ii )0)((l ii v )1)((i ng )0)))	;; ing
("relegating"	nil	(((r a )1)((l @ )0)((g ei t^ )1)((i ng )0)))	;; ing
("relending"	nil	(((r - ii )0)((l e n d )1)((i ng )0)))	;; ing
("relenting"	nil	(((r i )0)((l e n t )1)((i ng )0)))	;; ing
("relieving"	nil	(((r i )0)((l ii v )1)((i ng )0)))	;; ing
("relighting"	nil	(((r - ii )0)((l ai t^ )1)((i ng )0)))	;; ing
("relining"	nil	(((r - ii )0)((l ai n )1)((i ng )0)))	;; ing
("relinking"	nil	(((r - ii )0)((l i ng k )1)((i ng )0)))	;; ing
("relinquishing"	nil	(((r i )0)((l i ng )1)((k w i sh )0)((i ng )0)))	;; ing
("relishing"	nil	(((r a )1)((l i sh )0)((i ng )0)))	;; ing
("reliving"	nil	(((r - ii )0)((l i v )1)((i ng )0)))	;; ing
("reloading"	nil	(((r - ii )0)((l ou d )1)((i ng )0)))	;; ing
("relocating"	nil	(((r ii )1)((l ou )0)((k ei t^ )1)((i ng )0)))	;; ing
("relocking"	nil	(((r - ii )0)((l o k )1)((i ng )0)))	;; ing
("relying"	nil	(((r i )0)((l ai )1)((i ng )0)))	;; ing
("remailing"	nil	(((r - ii )0)((m ei l )1)((i ng )0)))	;; ing
("remaindering"	nil	(((r i )0)((m ei n )1)((d @ r )0)((i ng )0)))	;; ing
("remaining"	nil	(((r i )0)((m ei n )1)((i ng )0)))	;; ing
("remaking"	nil	(((r - ii )0)((m ei k )1)((i ng )0)))	;; ing
("remanding"	nil	(((r i )0)((m aa n d )1)((i ng )0)))	;; ing
("remanufacturing"	nil	(((r ii )1)((m a )0)((n y uw )0)((f a k )1)((ch @ r )0)((i ng )0)))	;; ing
("remapping"	nil	(((r - ii )0)((m a p )1)((i ng )0)))	;; ing
("remarketing"	nil	(((r - ii )0)((m aa )1)((k @ t^ )0)((i ng )0)))	;; ing
("remarking"	nil	(((r i )0)((m aa k )1)((i ng )0)))	;; ing
("remarrying"	nil	(((r - ii )0)((m a )1)((r iy )0)((i ng )0)))	;; ing
("remedying"	nil	(((r e )1)((m @ )0)((d iy )0)((i ng )0)))	;; ing
("remembering"	nil	(((r i )0)((m e m )1)((b @ r )0)((i ng )0)))	;; ing
("remeshing"	nil	(((r - ii )0)((m e sh )1)((i ng )0)))	;; ing
("reminding"	nil	(((r i )0)((m ai n d )1)((i ng )0)))	;; ing
("reminiscing"	nil	(((r e )1)((m @ )0)((n i s )1)((i ng )0)))	;; ing
("remitting"	nil	(((r i )0)((m i t^ )1)((i ng )0)))	;; ing
("remobilizing"	nil	(((r - ii )0)((m ou )1)((b i l )0)((ai z )1)((i ng )0)))	;; ing
("remodeling"	nil	(((r - ii )0)((m o )1)((d l! )0)((i ng )0)))	;; ing
("remodelling"	nil	(((r - ii )0)((m o )1)((d l! )0)((i ng )0)))	;; ing
("remonstrating"	nil	(((r e )1)((m @ n )0)((s t r ei t^ )1)((i ng )0)))	;; ing
("remortgaging"	nil	(((r - ii )0)((m oo )1)((g @ jh )0)((i ng )0)))	;; ing
("remould"	nil	(((r ii) 0) ((m o l d) 1)))	;; oul
("remoulding"	nil	(((r ii) 0) ((m o l d) 1) ((i ng) 0)))	;; oul
("remoulds"	nil	(((r ii) 0) ((m o l d z) 1)))	;; oul
("remounting"	nil	(((r - ii )0)((m ow n t )1)((i ng )0)))	;; ing
("removing"	nil	(((r i )0)((m uu v )1)((i ng )0)))	;; ing
("remuera"	nil	(((r e) 0) ((m uu) 0) ((e) 1) ((@ r @) 0)))	;; unique
("remunerating"	nil	(((r i )0)((m y uu )1)((n @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("renaming"	nil	(((r - ii )0)((n ei m )1)((i ng )0)))	;; ing
("rendering"	nil	(((r e n )1)((d @ r )0)((i ng )0)))	;; ing
("renderizing"	nil	(((r e n )1)((d @ r )0)((ai z )1)((i ng )0)))	;; ing
("rendezvousing"	nil	(((r o n )1)((d i )0)((v uu )1)((i ng )0)))	;; ing
("rending"	nil	(((r e n d )1)((i ng )0)))	;; ing
("reneging"	nil	(((r i )0)((n ei g )1)((i ng )0)))	;; ing
("renegotiating"	nil	(((r ii )1)((n i )0)((g ou )1)((sh iy )0)((ei t^ )1)((i ng )0)))	;; ing
("renewing"	nil	(((r i )0)((n y uu )1)((i ng )0)))	;; ing
("rengarenga"	nil	(((r e ng) 1) ((aa) 0) ((r e ng) 0) ((@) 0)))	;; unique
("renominating"	nil	(((r - ii )0)((n o )1)((m @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("renouncing"	nil	(((r i )0)((n ow n s )1)((i ng )0)))	;; ing
("renovating"	nil	(((r e )1)((n @ )0)((v ei t^ )1)((i ng )0)))	;; ing
("renting"	nil	(((r e n t )1)((i ng )0)))	;; ing
("renumbering"	nil	(((r - ii )0)((n uh m )1)((b @ r )0)((i ng )0)))	;; ing
("renunciating"	nil	(((r i )0)((n uh n )1)((s iy )0)((ei t^ )1)((i ng )0)))	;; ing
("reo"	nil	(((r ei) 1) ((ou) 0)))	;; unique
("reoccurring"	nil	(((r - ii @ )0)((k @@r r )1)((i ng )0)))	;; ing
("reoffending"	nil	(((r - ii @ )0)((f e n d )1)((i ng )0)))	;; ing
("reopening"	nil	(((r - ii )0)((ou )1)((p @ n )0)((i ng )0)))	;; ing
("reoptimizing"	nil	(((r - ii )0)((o p )1)((t @ )0)((m ai z )1)((i ng )0)))	;; ing
("reorbiting"	nil	(((r - ii )0)((oo )1)((b @ t^ )0)((i ng )0)))	;; ing
("reordering"	nil	(((r - ii )0)((oo )1)((d @ r )0)((i ng )0)))	;; ing
("reorganising"	nil	(((r - ii )0)((oo )1)((g @ )0)((n ai z )1)((i ng )0)))	;; ing
("reorganizing"	nil	(((r - ii )0)((oo )1)((g @ )0)((n ai z )1)((i ng )0)))	;; ing
("reorientating"	nil	(((r - ii )0)((oo )1)((r iy @ n t )0)((ei t^ )1)((i ng )0)))	;; ing
("reorienting"	nil	(((r - ii )0)((oo )1)((r iy )0)((e n t )1)((i ng )0)))	;; ing
("repackaging"	nil	(((r - ii )0)((p a k )1)((@ jh )0)((i ng )0)))	;; ing
("repacking"	nil	(((r - ii )0)((p a k )1)((i ng )0)))	;; ing
("repaginating"	nil	(((r - ii )0)((p a )1)((jh @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("repainting"	nil	(((r - ii )0)((p ei n t )1)((i ng )0)))	;; ing
("repairing"	nil	(((r i )0)((p ir r )1)((i ng )0)))	;; ing
("repapering"	nil	(((r - ii )0)((p ei )1)((p @ r )0)((i ng )0)))	;; ing
("reparsing"	nil	(((r - ii )0)((p aa z )1)((i ng )0)))	;; ing
("repartitioning"	nil	(((r ii )1)((p aa t )0)((i )1)((sh n! )0)((i ng )0)))	;; ing
("repassing"	nil	(((r - ii )0)((p aa s )1)((i ng )0)))	;; ing
("repatriating"	nil	(((r ii )0)((p a )1)((t r iy )0)((ei t^ )1)((i ng )0)))	;; ing
("repaying"	nil	(((r i )0)((p ei )1)((i ng )0)))	;; ing
("repealing"	nil	(((r i )0)((p ii l )1)((i ng )0)))	;; ing
("repeating"	nil	(((r i )0)((p ii t^ )1)((i ng )0)))	;; ing
("repelling"	nil	(((r i )0)((p a l )1)((i ng )0)))	;; ing
("repenting"	nil	(((r i )0)((p e n t )1)((i ng )0)))	;; ing
("reperepe"	nil	(((r e) 1) ((p e) 0) ((r e) 0) ((p ei) 0)))	;; unique
("rephasing"	nil	(((r - ii )0)((f ei z )1)((i ng )0)))	;; ing
("rephotographing"	nil	(((r - ii )0)((f ou )1)((t^ @ )0)((g r aa f )1)((i ng )0)))	;; ing
("rephrasing"	nil	(((r - ii )0)((f r ei z )1)((i ng )0)))	;; ing
("repining"	nil	(((r i )0)((p ai n )1)((i ng )0)))	;; ing
("replacing"	nil	(((r i )0)((p l ei s )1)((i ng )0)))	;; ing
("replanning"	nil	(((r - ii )0)((p l a n )1)((i ng )0)))	;; ing
("replanting"	nil	(((r - ii )0)((p l aa n t )1)((i ng )0)))	;; ing
("replaying"	nil	(((r - ii )0)((p l ei )1)((i ng )0)))	;; ing
("replenishing"	nil	(((r i )0)((p l e )1)((n i sh )0)((i ng )0)))	;; ing
("replicating"	nil	(((r e )1)((p l @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("replying"	nil	(((r i )0)((p l ai )1)((i ng )0)))	;; ing
("replys"	nil	(((r i) 0) ((p l ai z) 1)))	;; unique
("repointing"	nil	(((r - ii )0)((p oi n t )1)((i ng )0)))	;; ing
("reporting"	nil	(((r i )0)((p oo t^ )1)((i ng )0)))	;; ing
("reposing"	nil	(((r i )0)((p ou z )1)((i ng )0)))	;; ing
("repositioning"	nil	(((r ii )1)((p @ )0)((z i )1)((sh n! )0)((i ng )0)))	;; ing
("repossessing"	nil	(((r ii )1)((p @ )0)((z e s )1)((i ng )0)))	;; ing
("reposting"	nil	(((r - ii )0)((p ou s t )1)((i ng )0)))	;; ing
("repotting"	nil	(((r - ii )0)((p o t^ )1)((i ng )0)))	;; ing
("repping"	nil	(((r e p )1)((i ng )0)))	;; ing
("reprehending"	nil	(((r e )1)((p r i )0)((h e n d )1)((i ng )0)))	;; ing
("representing"	nil	(((r ii )1)((p r @ )0)((z e n t )1)((i ng )0)))	;; ing
("repressing"	nil	(((r - ii )0)((p r e s )1)((i ng )0)))	;; ing
("repricing"	nil	(((r - ii )0)((p r ai s )1)((i ng )0)))	;; ing
("reprieving"	nil	(((r i )0)((p r ii v )1)((i ng )0)))	;; ing
("reprimanding"	nil	(((r e )1)((p r @ )0)((m aa n d )1)((i ng )0)))	;; ing
("reprinting"	nil	(((r - ii )0)((p r i n t )1)((i ng )0)))	;; ing
("reprising"	nil	(((r i )0)((p r ai z )1)((i ng )0)))	;; ing
("reproaching"	nil	(((r i )0)((p r ou ch )1)((i ng )0)))	;; ing
("reprocessing"	nil	(((r - ii )0)((p r ou )1)((s e s )0)((i ng )0)))	;; ing
("reproducing"	nil	(((r ii )1)((p r @ )0)((d y uu s )1)((i ng )0)))	;; ing
("reprogramming"	nil	(((r - ii )0)((p r ou )1)((g r a m )0)((i ng )0)))	;; ing
("reproofing"	nil	(((r - ii )0)((p r uu f )1)((i ng )0)))	;; ing
("reproving"	nil	(((r i )0)((p r uu v )1)((i ng )0)))	;; ing
("republishing"	nil	(((r - ii )0)((p uh )1)((b l i sh )0)((i ng )0)))	;; ing
("repudiating"	nil	(((r i )0)((p y uu )1)((d iy )0)((ei t^ )1)((i ng )0)))	;; ing
("repulsing"	nil	(((r i )0)((p o l s )1)((i ng )0)))	;; ing
("repurchasing"	nil	(((r - ii )0)((p @@r )1)((ch @ s )0)((i ng )0)))	;; ing
("reputing"	nil	(((r i )0)((p y uu t^ )1)((i ng )0)))	;; ing
("requesting"	nil	(((r i )0)((k w e s t )1)((i ng )0)))	;; ing
("requestioning"	nil	(((r - ii )0)((k w e s )1)((ch @ n )0)((i ng )0)))	;; ing
("requiring"	nil	(((r i )0)((k w ai @ r )1)((i ng )0)))	;; ing
("requisitioning"	nil	(((r e )1)((k w @ )0)((z i )1)((sh n! )0)((i ng )0)))	;; ing
("requiting"	nil	(((r i )0)((k w ai t^ )1)((i ng )0)))	;; ing
("rereading"	nil	(((r - ii )0)((r ii d )1)((i ng )0)))	;; ing
("reremai"	nil	(((r e) 1) ((r e) 0) ((m ai) 0)))	;; unique
("rerunning"	nil	(((r - ii )0)((r uh n )1)((i ng )0)))	;; ing
("resampling"	nil	(((r - ii )0)((s aa m )1)((p l! )0)((i ng )0)))	;; ing
("resawing"	nil	(((r - ii )0)((s oo )1)((i ng )0)))	;; ing
("rescaling"	nil	(((r - ii )0)((s k ei l )1)((i ng )0)))	;; ing
("rescanning"	nil	(((r - ii )0)((s k a n )1)((i ng )0)))	;; ing
("rescheduling"	nil	(((r - ii )0)((sh e )1)((jh @ l )0)((i ng )0)))	;; ing
("rescinding"	nil	(((r i )0)((s i n d )1)((i ng )0)))	;; ing
("rescoring"	nil	(((r - ii )0)((s k oo r )1)((i ng )0)))	;; ing
("rescuing"	nil	(((r e )1)((s k y uw )0)((i ng )0)))	;; ing
("researching"	nil	(((r ii )1)((s @@r ch )0)((i ng )0)))	;; ing
("researchs"	nil	(((r i) 0) ((s @@r ch) 1) ((@ z) 0)))	;; unique
("reseating"	nil	(((r - ii )0)((s ii t^ )1)((i ng )0)))	;; ing
("reselling"	nil	(((r - ii )0)((s a l )1)((i ng )0)))	;; ing
("resembling"	nil	(((r i )0)((z e m )1)((b l! )0)((i ng )0)))	;; ing
("resending"	nil	(((r - ii )0)((s e n d )1)((i ng )0)))	;; ing
("resenting"	nil	(((r i )0)((z e n t )1)((i ng )0)))	;; ing
("reserving"	nil	(((r i )0)((z @@r v )1)((i ng )0)))	;; ing
("resetting"	nil	(((r - ii )0)((s e t^ )1)((i ng )0)))	;; ing
("resettling"	nil	(((r - ii )0)((s e )1)((t l! )0)((i ng )0)))	;; ing
("reshaping"	nil	(((r - ii )0)((sh ei p )1)((i ng )0)))	;; ing
("resheeting"	nil	(((r - ii )0)((sh ii t^ )1)((i ng )0)))	;; ing
("reshingling"	nil	(((r - ii )0)((sh i ng )1)((g l! )0)((i ng )0)))	;; ing
("reshuffling"	nil	(((r - ii )0)((sh uh )1)((f l! )0)((i ng )0)))	;; ing
("residing"	nil	(((r i )0)((z ai d )1)((i ng )0)))	;; ing
("resigning"	nil	(((r i )0)((z ai n )1)((i ng )0)))	;; ing
("resinking"	nil	(((r - ii )0)((s i ng k )1)((i ng )0)))	;; ing
("resisting"	nil	(((r i )0)((z i s t )1)((i ng )0)))	;; ing
("resizing"	nil	(((r - ii )0)((s ai z )1)((i ng )0)))	;; ing
("resold"	nil	(((r ii) 0) ((s o l d) 1)))	;; oul
("resoldering"	nil	(((r ii) 0) ((s o l) 1) ((d @ r) 0) ((i ng) 0)))	;; oul
("resoled"	nil	(((r ii) 0) ((s o l d) 1)))	;; oul
("resolving"	nil	(((r i )0)((z o l v )1)((i ng )0)))	;; ing
("resonating"	nil	(((r e )1)((z @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("resorting"	nil	(((r i )0)((z oo t^ )1)((i ng )0)))	;; ing
("resounding"	nil	(((r i )0)((z ow n d )1)((i ng )0)))	;; ing
("resourcing"	nil	(((r i )0)((z oo s )1)((i ng )0)))	;; ing
("respawning"	nil	(((r - ii )0)((s p oo n )1)((i ng )0)))	;; ing
("respectable-looking"	nil	(((r i )0)((s p e k t )1)((@ )0)((b l! )0)((l u k )1)((i ng )0)))	;; ing
("respecting"	nil	(((r i )0)((s p e k t )1)((i ng )0)))	;; ing
("respiring"	nil	(((r i )0)((s p ai @ r )1)((i ng )0)))	;; ing
("responding"	nil	(((r i )0)((s p o n d )1)((i ng )0)))	;; ing
("restarting"	nil	(((r - ii )0)((s t aa t^ )1)((i ng )0)))	;; ing
("restating"	nil	(((r - ii )0)((s t ei t^ )1)((i ng )0)))	;; ing
("resting"	nil	(((r e s t )1)((i ng )0)))	;; ing
("restituting"	nil	(((r e )1)((s t @ )0)((t y uu t^ )1)((i ng )0)))	;; ing
("restocking"	nil	(((r - ii )0)((s t o k )1)((i ng )0)))	;; ing
("restoring"	nil	(((r i )0)((s t oo r )1)((i ng )0)))	;; ing
("restraining"	nil	(((r i )0)((s t r ei n )1)((i ng )0)))	;; ing
("restricting"	nil	(((r i )0)((s t r i k t )1)((i ng )0)))	;; ing
("restructuring"	nil	(((r - ii )0)((s t r uh k )1)((ch @ r )0)((i ng )0)))	;; ing
("restudying"	nil	(((r - ii )0)((s t uh )1)((d iy )0)((i ng )0)))	;; ing
("restyling"	nil	(((r - ii )0)((s t ai l )1)((i ng )0)))	;; ing
("resubmitting"	nil	(((r ii )1)((s @ b )0)((m i t^ )1)((i ng )0)))	;; ing
("resubscribing"	nil	(((r ii )1)((s @ b )0)((s k r ai b )1)((i ng )0)))	;; ing
("resulting"	nil	(((r i )0)((z o l t )1)((i ng )0)))	;; ing
("resuming"	nil	(((r i )0)((z y uu m )1)((i ng )0)))	;; ing
("resupplying"	nil	(((r ii )1)((s @ )0)((p l ai )1)((i ng )0)))	;; ing
("resurfacing"	nil	(((r - ii )0)((s @@r )1)((f @ s )0)((i ng )0)))	;; ing
("resurging"	nil	(((r i )0)((s @@r jh )1)((i ng )0)))	;; ing
("resurrecting"	nil	(((r e )1)((z @ )0)((r e k t )1)((i ng )0)))	;; ing
("resuscitating"	nil	(((r i )0)((s uh )1)((s i )0)((t ei t^ )1)((i ng )0)))	;; ing
("resynchronizing"	nil	(((r - ii )0)((s i ng )1)((k r @ )0)((n ai z )1)((i ng )0)))	;; ing
("retailing"	nil	(((r ii )1)((t^ ei l )0)((i ng )0)))	;; ing
("retaining"	nil	(((r i )0)((t ei n )1)((i ng )0)))	;; ing
("retaking"	nil	(((r - ii )0)((t ei k )1)((i ng )0)))	;; ing
("retaliating"	nil	(((r i )0)((t a )1)((l iy )0)((ei t^ )1)((i ng )0)))	;; ing
("retarding"	nil	(((r i )0)((t aa d )1)((i ng )0)))	;; ing
("retargeting"	nil	(((r - ii )0)((t aa )1)((g @ t^ )0)((i ng )0)))	;; ing
("retching"	nil	(((r e ch )1)((i ng )0)))	;; ing
("retelling"	nil	(((r - ii )0)((t a l )1)((i ng )0)))	;; ing
("reterminating"	nil	(((r - ii )0)((t @@r )1)((m @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("retesting"	nil	(((r - ii )0)((t e s t )1)((i ng )0)))	;; ing
("retexturing"	nil	(((r - ii )0)((t e k s )1)((ch @ r )0)((i ng )0)))	;; ing
("rethinking"	nil	(((r - ii )0)((th i ng k )1)((i ng )0)))	;; ing
("reticulating"	nil	(((r i )0)((t i )1)((k y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("retightening"	nil	(((r - ii )0)((t ai t )1)((n! )0)((i ng )0)))	;; ing
("retiling"	nil	(((r - ii )0)((t ai l )1)((i ng )0)))	;; ing
("retiming"	nil	(((r - ii )0)((t ai m )1)((i ng )0)))	;; ing
("retireti"	nil	(((r e) 1) ((t^ ii) 0) ((r e) 0) ((t^ ii) 0)))	;; unique
("retiring"	nil	(((r i )0)((t ai @ r )1)((i ng )0)))	;; ing
("retitling"	nil	(((r - ii )0)((t ai )1)((t l! )0)((i ng )0)))	;; ing
("retold"	nil	(((r ii) 0) ((t o l d) 1)))	;; oul
("retooled"	nil	(((r ii) 0) ((t u l d) 1)))	;; uul
("retooling"	nil	(((r ii) 0) ((t u l) 1) ((i ng) 0)))	;; uul
("retorting"	nil	(((r i )0)((t oo t^ )1)((i ng )0)))	;; ing
("retouching"	nil	(((r - ii )0)((t uh ch )1)((i ng )0)))	;; ing
("retracing"	nil	(((r - ii )0)((t r ei s )1)((i ng )0)))	;; ing
("retracting"	nil	(((r i )0)((t r a k t )1)((i ng )0)))	;; ing
("retraining"	nil	(((r - ii )0)((t r ei n )1)((i ng )0)))	;; ing
("retranslating"	nil	(((r ii )1)((t r a n z )0)((l ei t^ )1)((i ng )0)))	;; ing
("retransmitting"	nil	(((r ii )1)((t r a n z )0)((m i t^ )1)((i ng )0)))	;; ing
("retreading"	nil	(((r - ii )0)((t r e d )1)((i ng )0)))	;; ing
("retreating"	nil	(((r i )0)((t r ii t^ )1)((i ng )0)))	;; ing
("retrenching"	nil	(((r i )0)((t r e n ch )1)((i ng )0)))	;; ing
("retrieving"	nil	(((r i )0)((t r ii v )1)((i ng )0)))	;; ing
("retrofitting"	nil	(((r e )1)((t r ou )0)((f i t^ )1)((i ng )0)))	;; ing
("retrogressing"	nil	(((r e )1)((t r @ )0)((g r e s )1)((i ng )0)))	;; ing
("retrying"	nil	(((r - ii )0)((t r ai )1)((i ng )0)))	;; ing
("retuning"	nil	(((r - ii )0)((t y uu n )1)((i ng )0)))	;; ing
("returning"	nil	(((r i )0)((t @@r n )1)((i ng )0)))	;; ing
("retyping"	nil	(((r - ii )0)((t ai p )1)((i ng )0)))	;; ing
("reunifying"	nil	(((r - ii )0)((y uu )1)((n @ )0)((f ai )1)((i ng )0)))	;; ing
("reuniting"	nil	(((r ii )1)((y uw )0)((n ai t^ )1)((i ng )0)))	;; ing
("reupholster"	nil	(((r ii) 1) ((uh p) 0) ((h o l) 1) ((s t @) 0)))	;; oul
("reupholstered"	nil	(((r ii) 1) ((uh p) 0) ((h o l) 1) ((s t @ d) 0)))	;; oul
("reupholstering"	nil	(((r ii) 1) ((uh p) 0) ((h o l) 1) ((s t @ r) 0) ((i ng) 0)))	;; oul
("reupholsters"	nil	(((r ii) 1) ((uh p) 0) ((h o l) 1) ((s t @ z) 0)))	;; oul
("reusing"	nil	(((r - ii )0)((y uu z )1)((i ng )0)))	;; ing
("revalidating"	nil	(((r - ii )0)((v a )1)((l @ d )0)((ei t^ )1)((i ng )0)))	;; ing
("revaluating"	nil	(((r - ii )0)((v a )1)((l y uw )0)((ei t^ )1)((i ng )0)))	;; ing
("revaluing"	nil	(((r - ii )0)((v a )1)((l y uw )0)((i ng )0)))	;; ing
("revamping"	nil	(((r - ii )0)((v a m p )1)((i ng )0)))	;; ing
("revealing"	nil	(((r i )0)((v ii l )1)((i ng )0)))	;; ing
("revelling"	nil	(((r e )1)((v l! )0)((i ng )0)))	;; ing
("revenging"	nil	(((r i )0)((v e n jh )1)((i ng )0)))	;; ing
("reverberating"	nil	(((r i )0)((v @@r )1)((b @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("revering"	nil	(((r i )0)((v ir r )1)((i ng )0)))	;; ing
("reversing"	nil	(((r i )0)((v @@r s )1)((i ng )0)))	;; ing
("reverting"	nil	(((r i )0)((v @@r t^ )1)((i ng )0)))	;; ing
("reviewing"	nil	(((r i )0)((v y uu )1)((i ng )0)))	;; ing
("reviling"	nil	(((r i )0)((v ai l )1)((i ng )0)))	;; ing
("revising"	nil	(((r i )0)((v ai z )1)((i ng )0)))	;; ing
("revisiting"	nil	(((r - ii )0)((v i )1)((z @ t^ )0)((i ng )0)))	;; ing
("revitalising"	nil	(((r - ii )0)((v ai )1)((t l! )0)((ai z )1)((i ng )0)))	;; ing
("revitalizing"	nil	(((r - ii )0)((v ai )1)((t l! )0)((ai z )1)((i ng )0)))	;; ing
("reviving"	nil	(((r i )0)((v ai v )1)((i ng )0)))	;; ing
("revoking"	nil	(((r i )0)((v ou k )1)((i ng )0)))	;; ing
("revolt"	nil	(((r i) 0) ((v o l t) 1)))	;; oul
("revolted"	nil	(((r i) 0) ((v o l t) 1) ((@ d) 0)))	;; oul
("revolter"	nil	(((r i) 0) ((v o l t) 1) ((@) 0)))	;; oul
("revolters"	nil	(((r i) 0) ((v o l t) 1) ((@ z) 0)))	;; oul
("revolting"	nil	(((r i) 0) ((v o l t) 1) ((i ng) 0)))	;; oul
("revoltingly"	nil	(((r i) 0) ((v o l t) 1) ((i ng) 0) ((l ii) 0)))	;; oul
("revolts"	nil	(((r i) 0) ((v o l t s) 1)))	;; oul
("revolutionising"	nil	(((r e )1)((v @ )0)((l uu )1)((sh n! )0)((ai z )1)((i ng )0)))	;; ing
("revolutionizing"	nil	(((r e )1)((v @ )0)((l uu )1)((sh n! )0)((ai z )1)((i ng )0)))	;; ing
("revolving"	nil	(((r i )0)((v o l v )1)((i ng )0)))	;; ing
("revving"	nil	(((r e v )1)((i ng )0)))	;; ing
("rewana"	nil	(((r e) 1) ((w aa) 0) ((n @) 0)))	;; unique
("rewarding"	nil	(((r i )0)((w oo d )1)((i ng )0)))	;; ing
("rewarewa"	nil	(((r e) 1) ((w aa) 0) ((r e) 0) ((w @) 0)))	;; unique
("reweighing"	nil	(((r - ii )0)((w ei )1)((i ng )0)))	;; ing
("rewinding"	nil	(((r - ii )0)((w i n d )1)((i ng )0)))	;; ing
("rewiring"	nil	(((r - ii )0)((w ai @ r )1)((i ng )0)))	;; ing
("rewording"	nil	(((r - ii )0)((w @@r d )1)((i ng )0)))	;; ing
("reworking"	nil	(((r - ii )0)((w @@r k )1)((i ng )0)))	;; ing
("rewriting"	nil	(((r - ii )0)((r ai t^ )1)((i ng )0)))	;; ing
("rhapsodising"	nil	(((r a p )1)((s @ )0)((d ai z )1)((i ng )0)))	;; ing
("rhapsodizing"	nil	(((r a p )1)((s @ )0)((d ai z )1)((i ng )0)))	;; ing
("rhyming"	nil	(((r ai m )1)((i ng )0)))	;; ing
("ribbing"	nil	(((r i b )1)((i ng )0)))	;; ing
("ricas"	nil	(((r ii) 1) ((k @ z) 0)))	;; unique
("richters"	nil	(((r i k) 1) ((t @ z) 0)))	;; unique
("ricocheting"	nil	(((r i )1)((k @ )0)((sh ei )1)((i ng )0)))	;; ing
("ricochetting"	nil	(((r i )1)((k @ )0)((sh ei )1)((i ng )0)))	;; ing
("ridding"	nil	(((r i d )1)((i ng )0)))	;; ing
("riddling"	nil	(((r i )1)((d l! )0)((i ng )0)))	;; ing
("ridgepole"	nil	(((r i jh) 1) ((p o l) 0)))	;; oul
("ridgepoles"	nil	(((r i jh) 1) ((p o l z) 0)))	;; oul
("ridging"	nil	(((r i jh )1)((i ng )0)))	;; ing
("ridiculing"	nil	(((r i )1)((d i )0)((k y @ l )1)((i ng )0)))	;; ing
("riding"	nil	(((r ai )1)((d i ng )0)))	;; ing
("riemanns"	nil	(((r ii) 1) ((m @ n z) 0)))	;; unique
("riffling"	nil	(((r i )1)((f l! )0)((i ng )0)))	;; ing
("rifling"	nil	(((r ai )1)((f l! )0)((i ng )0)))	;; ing
("rifting"	nil	(((r i f t )1)((i ng )0)))	;; ing
("rigamarole"	nil	(((r i g) 1) ((m @) 0) ((r o l) 1)))	;; oul
("rigamaroles"	nil	(((r i g) 1) ((m @) 0) ((r o l z) 1)))	;; oul
("rigging"	nil	(((r i g )1)((i ng )0)))	;; ing
("riggss"	nil	(((r i g z) 1) ((@ z) 0)))	;; unique
("righting"	nil	(((r ai t^ )1)((i ng )0)))	;; ing
("rightsizing"	nil	(((r ai t )1)((s ai z )1)((i ng )0)))	;; ing
("rigidifying"	nil	(((r i )0)((jh i d )1)((i )0)((f ai )1)((i ng )0)))	;; ing
("rigmarole"	nil	(((r i g) 1) ((m @) 0) ((r o l) 0)))	;; oul
("rigmaroles"	nil	(((r i g) 1) ((m @) 0) ((r o l z) 0)))	;; oul
("riling"	nil	(((r ai l )1)((i ng )0)))	;; ing
("rilling"	nil	(((r i l )1)((i ng )0)))	;; ing
("riming"	nil	(((r ai m )1)((i ng )0)))	;; ing
("rimming"	nil	(((r i m )1)((i ng )0)))	;; ing
("rimu"	nil	(((r ii) 1) ((m uu) 0)))	;; unique
("rimurapa"	nil	(((r ii) 1) ((m uu) 0) ((r aa) 1) ((p @) 0)))	;; unique
("rimurimu"	nil	(((r ii) 1) ((m uu) 0) ((r ii) 1) ((m uu) 0)))	;; unique
("ringatu"	nil	(((r ii ng) 0) ((aa) 0) ((t uu) 1)))	;; unique
("ringing"	nil	(((r i ng )1)((i ng )0)))	;; ing
("ringleading"	nil	(((r i ng )1)((l ii d )1)((i ng )0)))	;; ing
("rinsing"	nil	(((r i n s )1)((i ng )0)))	;; ing
("rioting"	nil	(((r ai @ t^ )1)((i ng )0)))	;; ing
("ripening"	nil	(((r ai p )1)((@ n )0)((i ng )0)))	;; ing
("riposting"	nil	(((r i )0)((p o s t )1)((i ng )0)))	;; ing
("ripping"	nil	(((r i p )1)((i ng )0)))	;; ing
("rippling"	nil	(((r i )1)((p l! )0)((i ng )0)))	;; ing
("ripsawing"	nil	(((r i p )1)((s oo )1)((i ng )0)))	;; ing
("riri"	nil	(((r ii) 1) ((r ii) 0)))	;; unique
("riroriro"	nil	(((r ii) 1) ((r ou) 0) ((r ii) 0) ((r ou) 0)))	;; unique
("rising"	nil	(((r ai z )1)((i ng )0)))	;; ing
("risk-taking"	nil	(((r i s k )1)((t ei k )1)((i ng )0)))	;; ing
("risking"	nil	(((r i s k )1)((i ng )0)))	;; ing
("rissole"	nil	(((r i) 1) ((s o l) 0)))	;; oul
("rissoles"	nil	(((r i) 1) ((s o l z) 0)))	;; oul
("ritchies"	nil	(((r i) 1) ((ch ii z) 0)))	;; unique
("rivaling"	nil	(((r ai )1)((v l! )0)((i ng )0)))	;; ing
("rivalling"	nil	(((r ai )1)((v l! )0)((i ng )0)))	;; ing
("riveting"	nil	(((r i )1)((v @ t^ )0)((i ng )0)))	;; ing
("rivetting"	nil	(((r i )1)((v @ t^ )0)((i ng )0)))	;; ing
("riwai"	nil	(((r ii) 1) ((w ai) 0)))	;; unique
("roa"	nil	(((r ou) 1) ((@) 0)))	;; unique
("road-mending"	nil	(((r ou d )1)((m e n d )1)((i ng )0)))	;; ing
("roadholding"	nil	(((r ou d) 1) ((h o l d) 1) ((i ng) 0)))	;; oul
("roadtesting"	nil	(((r ou d )1)((t e s t )1)((i ng )0)))	;; ing
("roaming"	nil	(((r ou m )1)((i ng )0)))	;; ing
("roaring"	nil	(((r oo r )1)((i ng )0)))	;; ing
("roasting"	nil	(((r ou s t )1)((i ng )0)))	;; ing
("robbing"	nil	(((r o b )1)((i ng )0)))	;; ing
("robertss"	nil	(((r o) 1) ((b @ t s) 0) ((@ z) 0)))	;; unique
("robing"	nil	(((r ou b )1)((i ng )0)))	;; ing
("rock-and-roll"	nil	(((r o k) 1) ((@ n) 0) ((r o l) 1)))	;; oul
("rock-n-roll"	nil	(((r o k) 1) ((@ n) 0) ((r o l) 1)))	;; unique
("rocketing"	nil	(((r o )1)((k @ t^ )0)((i ng )0)))	;; ing
("rocking"	nil	(((r o k )1)((i ng )0)))	;; ing
("rodding"	nil	(((r o d )1)((i ng )0)))	;; ing
("rodneys"	nil	(((r o d) 1) ((n ii z) 0)))	;; unique
("rogering"	nil	(((r o )1)((jh @ r )0)((i ng )0)))	;; ing
("roguing"	nil	(((r ou g )1)((i ng )0)))	;; ing
("rohe"	nil	(((r ou) 1) ((h ei) 0)))	;; unique
("rohutu"	nil	(((r ou) 1) ((h uu) 0) ((t uu) 0)))	;; unique
("roi"	nil	(((r ou) 1) ((ii) 0)))	;; unique
("roistering"	nil	(((r oi )1)((s t @ r )0)((i ng )0)))	;; ing
("roland"	nil	(((r o) 1) ((l @ n d) 0)))	;; oul
("role"	nil	(((r o l) 1)))	;; oul
("role-playing"	nil	(((r o l) 1) ((p l ei) 1) ((i ng) 0)))	;; oul
("roleplayed"	nil	(((r o l) 1) ((p l ei d) 0)))	;; oul
("roleplaying"	nil	(((r o l) 1) ((p l ei) 1) ((i ng) 0)))	;; oul
("roles"	nil	(((r o l z) 1)))	;; oul
("rolex"	nil	(((r o) 1) ((l e k s) 0)))	;; oul
("roll"	nil	(((r o l) 1)))	;; oul
("roll-call"	nil	(((r o l) 1) ((k oo l) 0)))	;; oul
("roll-calls"	nil	(((r o l) 1) ((k oo l z) 0)))	;; oul
("roll-on"	nil	(((r o l) 1) (( o n) 0)))	;; oul
("roll-on-roll-off"	nil	(((r o l) 1) (( o n) 0) ((r o l) 0) ((o f) 1)))	;; oul
("roll-out"	nil	(((r o l) 1) (( ow t) 0)))	;; oul
("roll-outs"	nil	(((r o l) 1) (( ow t s) 0)))	;; oul
("roll-up"	nil	(((r o l) 1) (( uh p) 0)))	;; oul
("roll-ups"	nil	(((r o l) 1) (( uh p s) 0)))	;; oul
("rollable"	nil	(((r o l) 1) ((@) 0) ((b l!) 0)))	;; oul
("rollback"	nil	(((r o l) 1) ((b a k) 0)))	;; oul
("rollbacks"	nil	(((r o l) 1) ((b a k s) 0)))	;; oul
("rolled"	nil	(((r o l d) 1)))	;; oul
("roller"	nil	(((r o l) 1) ((@) 0)))	;; oul
("rollerblade"	nil	(((r o l) 1) ((@) 0) ((b l ei d) 1)))	;; oul
("rollerbladed"	nil	(((r o l) 1) ((@) 0) ((b l ei d) 1) ((@ d) 0)))	;; oul
("rollerblades"	nil	(((r o l) 1) ((@) 0) ((b l ei d z) 1)))	;; oul
("rollerblading"	nil	(((r o l) 1) ((@) 0) ((b l ei d) 1) ((i ng) 0)))	;; oul
("rollercoaster"	nil	(((r o l) 1) ((@) 0) ((k ou s t) 1) ((@) 0)))	;; oul
("rollercoasters"	nil	(((r o l) 1) ((@) 0) ((k ou s t) 1) ((@ z) 0)))	;; oul
("rollers"	nil	(((r o l) 1) ((@ z) 0)))	;; oul
("rolleston"	nil	(((r o l) 1) ((s t @ n) 0)))	;; oul
("rollicking"	nil	(((r o )1)((l i k )0)((i ng )0)))	;; ing
("rolling"	nil	(((r o l) 1) ((i ng) 0)))	;; oul
("rollings"	nil	(((r o l) 1) ((i ng z) 0)))	;; oul
("rollmop"	nil	(((r o l) 1) ((m o p) 0)))	;; oul
("rollover"	nil	(((r o l) 1) ((ou) 1) ((v @) 0)))	;; oul
("rollovers"	nil	(((r o l) 1) ((ou) 1) ((v @ z) 0)))	;; oul
("rolls"	nil	(((r o l z) 1)))	;; oul
("rollup"	nil	(((r o l) 1) (( uh p) 0)))	;; oul
("rollups"	nil	(((r o l) 1) (( uh p s) 0)))	;; oul
("roly-poly"	nil	(((r o) 1) ((l ii) 0) ((p o) 1) ((l ii) 0)))	;; oul
("romancing"	nil	(((r ou )0)((m a n s )1)((i ng )0)))	;; ing
("romanias"	nil	(((r ou) 0) ((m ei) 1) ((n ii @ z) 0)))	;; unique
("romanizing"	nil	(((r ou m )1)((@ n )0)((ai z )1)((i ng )0)))	;; ing
("romanticising"	nil	(((r ou )0)((m a n )1)((t @ s )0)((ai z )1)((i ng )0)))	;; ing
("romanticizing"	nil	(((r ou )0)((m a n )1)((t i s )0)((ai z )1)((i ng )0)))	;; ing
("romping"	nil	(((r o m p )1)((i ng )0)))	;; ing
("rongo"	nil	(((r ou ng) 1) ((oo) 0)))	;; unique
("rongoa"	nil	(((r ou ng) 0) ((ou) 0) ((@) 0)))	;; unique
("rongomatane"	nil	(((r ou ng) 0) ((ou) 0) ((m aa) 0) ((t aa) 1) ((n ei) 0)))	;; unique
("roniu"	nil	(((r ou) 1) ((n ii) 0) ((uu) 0)))	;; unique
("rons"	nil	(((r o n z) 1)))	;; unique
("roofing"	nil	(((r uu f )1)((i ng )0)))	;; ing
("rooming"	nil	(((r uu m )1)((i ng )0)))	;; ing
("roosting"	nil	(((r uu s t )1)((i ng )0)))	;; ing
("rooting"	nil	(((r uu t^ )1)((i ng )0)))	;; ing
("ropata"	nil	(((r ou) 1) ((p aa) 0) ((t^ @) 0)))	;; unique
("roping"	nil	(((r ou p )1)((i ng )0)))	;; ing
("ropu"	nil	(((r ou) 1) ((p uu) 0)))	;; unique
("rori"	nil	(((r ou) 1) ((r ii) 0)))	;; unique
("rosemarys"	nil	(((r ou z) 1) ((m @) 0) ((r ii z) 0)))	;; unique
("rosing"	nil	(((r ou z )1)((i ng )0)))	;; ing
("rosss"	nil	(((r o s) 1) ((@ z) 0)))	;; unique
("rostering"	nil	(((r o )1)((s t @ r )0)((i ng )0)))	;; ing
("rotating"	nil	(((r ou )0)((t ei t^ )1)((i ng )0)))	;; ing
("rotorua"	nil	(((r ou) 1) ((t^ @) 0) ((r uu) 1) ((@) 0)))	;; unique
("rotting"	nil	(((r o t^ )1)((i ng )0)))	;; ing
("roughcasting"	nil	(((r uh f )1)((k aa s t )1)((i ng )0)))	;; ing
("roughening"	nil	(((r uh f )1)((n! )0)((i ng )0)))	;; ing
("roughing"	nil	(((r uh f )1)((i ng )0)))	;; ing
("rounding"	nil	(((r ow n d )1)((i ng )0)))	;; ing
("rousing"	nil	(((r ow z )1)((i ng )0)))	;; ing
("routing"	nil	(((r ow t^ )1)((i ng )0)))	;; ing
("roving"	nil	(((r ou v )1)((i ng )0)))	;; ing
("rowi"	nil	(((r ou) 1) ((w ii) 0)))	;; unique
("rowing"	nil	(((r ou )1)((i ng )0)))	;; ing
("roys"	nil	(((r oi z) 1)))	;; unique
("rs"	nil	(((aa z) 1)))	;; unique
("rua"	nil	(((r uu) 1) ((@) 0)))	;; unique
("rubber-stamping"	nil	(((r uh b )1)((@ )0)((s t a m p )1)((i ng )0)))	;; ing
("rubbernecking"	nil	(((r uh b )1)((@ )0)((n e k )1)((i ng )0)))	;; ing
("rubbing"	nil	(((r uh b )1)((i ng )0)))	;; ing
("rubbishing"	nil	(((r uh )1)((b i sh )0)((i ng )0)))	;; ing
("rubiks"	nil	(((r uu) 1) ((b i k s) 0)))	;; unique
("rubins"	nil	(((r uu) 1) ((b i n z) 0)))	;; unique
("rubinsteins"	nil	(((r uu) 1) ((b i n) 0) ((s t ai n z) 0)))	;; unique
("rucking"	nil	(((r uh k )1)((i ng )0)))	;; ing
("rueing"	nil	(((r uu )1)((i ng )0)))	;; ing
("ruffing"	nil	(((r uh f )1)((i ng )0)))	;; ing
("ruffling"	nil	(((r uh )1)((f l! )0)((i ng )0)))	;; ing
("ruing"	nil	(((r uu )1)((i ng )0)))	;; ing
("ruining"	nil	(((r uu )1)((i n )0)((i ng )0)))	;; ing
("rulemaking"	nil	(((r @ l )1)((m ei k )1)((i ng )0)))	;; ing
("ruling"	nil	(((r @ l )1)((i ng )0)))	;; ing
("rumbling"	nil	(((r uh m )1)((b l! )0)((i ng )0)))	;; ing
("ruminating"	nil	(((r uu )1)((m @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("rummaging"	nil	(((r uh )1)((m @ jh )0)((i ng )0)))	;; ing
("rumoring"	nil	(((r uu )1)((m @ r )0)((i ng )0)))	;; ing
("rumouring"	nil	(((r uu )1)((m @ r )0)((i ng )0)))	;; ing
("rumpling"	nil	(((r uh m )1)((p l! )0)((i ng )0)))	;; ing
("runa"	nil	(((r uu) 1) ((n @) 0)))	;; unique
("runanga"	nil	(((r uu) 1) ((n uh ng) 0) ((@) 0)))	;; unique
("running"	nil	(((r uh n )1)((i ng )0)))	;; ing
("ruru"	nil	(((r uu) 1) ((r uu) 0)))	;; unique
("rushing"	nil	(((r uh sh )1)((i ng )0)))	;; ing
("rushs"	nil	(((r uh sh) 1) ((@ z) 0)))	;; unique
("rushtons"	nil	(((r uh sh) 1) ((t @ n z) 0)))	;; unique
("russells"	nil	(((r uh) 1) ((s l! z) 0)))	;; unique
("russias"	nil	(((r uh) 1) ((sh @ z) 0)))	;; unique
("rusting"	nil	(((r uh s t )1)((i ng )0)))	;; ing
("rustling"	nil	(((r uh )1)((s l! )0)((i ng )0)))	;; ing
("rustproofing"	nil	(((r uh s t )1)((p r uu f )1)((i ng )0)))	;; ing
("rutherfords"	nil	(((r uh) 1) ((dh @) 0) ((f @ d z) 0)))	;; unique
("rutting"	nil	(((r uh t^ )1)((i ng )0)))	;; ing
("rwandas"	nil	(((r uw) 0) ((a n) 1) ((d @ z) 0)))	;; unique
("ryans"	nil	(((r ai @ n z) 1)))	;; unique
("ryders"	nil	(((r ai) 1) ((d @ z) 0)))	;; unique
("sabotaging"	nil	(((s a )1)((b @ )0)((t aa zh )1)((i ng )0)))	;; ing
("sabre-rattling"	nil	(((s ei )1)((b @ )0)((r a )1)((t l! )0)((i ng )0)))	;; ing
("sacking"	nil	(((s a k )1)((i ng )0)))	;; ing
("sacrificing"	nil	(((s a )1)((k r @ )0)((f ai s )1)((i ng )0)))	;; ing
("sad-looking"	nil	(((s a d )1)((l u k )1)((i ng )0)))	;; ing
("saddams"	nil	(((s @) 0) ((d a m z) 1)))	;; unique
("saddening"	nil	(((s a d )1)((n! )0)((i ng )0)))	;; ing
("saddling"	nil	(((s a )1)((d l! )0)((i ng )0)))	;; ing
("safariing"	nil	(((s @ )0)((f aa )1)((r iy )0)((i ng )0)))	;; ing
("safe-guarding"	nil	(((s ei f )1)((g aa d )1)((i ng )0)))	;; ing
("safecracking"	nil	(((s ei f )1)((k r a k )1)((i ng )0)))	;; ing
("safeguarding"	nil	(((s ei f )1)((g aa d )1)((i ng )0)))	;; ing
("safekeeping"	nil	(((s ei f )1)((k ii p )1)((i ng )0)))	;; ing
("sagging"	nil	(((s a g )1)((i ng )0)))	;; ing
("sailboarding"	nil	(((s ei l )1)((b oo d )1)((i ng )0)))	;; ing
("sailing"	nil	(((s ei l )1)((i ng )0)))	;; ing
("sailoring"	nil	(((s ei l )1)((@ r )0)((i ng )0)))	;; ing
("salesmens"	nil	(((s ei l z) 1) ((m @ n z) 0)))	;; unique
("salivating"	nil	(((s a )1)((l @ )0)((v ei t^ )1)((i ng )0)))	;; ing
("sallying"	nil	(((s a )1)((l iy )0)((i ng )0)))	;; ing
("sallys"	nil	(((s a) 1) ((l ii z) 0)))	;; unique
("salting"	nil	(((s oo l t )1)((i ng )0)))	;; ing
("saluting"	nil	(((s @ )0)((l uu t^ )1)((i ng )0)))	;; ing
("salvadors"	nil	(((s a l) 1) ((v @) 0) ((d oo z) 0)))	;; unique
("salvaging"	nil	(((s a l v )1)((@ jh )0)((i ng )0)))	;; ing
("salving"	nil	(((s a l v )1)((i ng )0)))	;; ing
("samoas"	nil	(((s @) 0) ((m ou @ z) 1)))	;; unique
("sampling"	nil	(((s aa m )1)((p l! )0)((i ng )0)))	;; ing
("samuel"	nil	(((s a) 1) ((m y uw u l) 0)))	;; uul
("samuels"	nil	(((s a) 1) ((m y uw u l z) 0)))	;; uul
("samuelson"	nil	(((s a) 1) ((m y uw u l) 0) ((s n!) 0)))	;; uul
("samuelsson"	nil	(((s a) 1) ((m y uw u l) 0) ((s n!) 0)))	;; uul
("sanctifying"	nil	(((s a ng k )1)((t @ )0)((f ai )1)((i ng )0)))	;; ing
("sanctioning"	nil	(((s a ng k )1)((sh n! )0)((i ng )0)))	;; ing
("sandbagging"	nil	(((s a n d )1)((b a g )1)((i ng )0)))	;; ing
("sandblasting"	nil	(((s a n d )1)((b l aa s t )1)((i ng )0)))	;; ing
("sanding"	nil	(((s a n d )1)((i ng )0)))	;; ing
("sandpapering"	nil	(((s a n d )1)((p ei )1)((p @ r )0)((i ng )0)))	;; ing
("sandras"	nil	(((s aa n) 1) ((d r @ z) 0)))	;; unique
("sandwiching"	nil	(((s a n )1)((w i jh )0)((i ng )0)))	;; ing
("sanitizing"	nil	(((s a )1)((n @ )0)((t ai z )1)((i ng )0)))	;; ing
("sanyos"	nil	(((s a) 1) ((n y ou z) 0)))	;; unique
("sapling"	nil	(((s a p )1)((l i ng )0)))	;; ing
("saponifying"	nil	(((s @ )0)((p o )1)((n @ )0)((f ai )1)((i ng )0)))	;; ing
("sapping"	nil	(((s a p )1)((i ng )0)))	;; ing
("sarahs"	nil	(((s ir) 1) ((r @ z) 0)))	;; unique
("sashaying"	nil	(((s a )0)((sh ei )1)((i ng )0)))	;; ing
("sashs"	nil	(((s a sh) 1) ((@ z) 0)))	;; unique
("sassing"	nil	(((s a s )1)((i ng )0)))	;; ing
("satiating"	nil	(((s ei )1)((sh iy )0)((ei t^ )1)((i ng )0)))	;; ing
("sating"	nil	(((s ei t^ )1)((i ng )0)))	;; ing
("satirising"	nil	(((s a )1)((t^ @ r )0)((ai z )1)((i ng )0)))	;; ing
("satirizing"	nil	(((s a )1)((t^ @ r )0)((ai z )1)((i ng )0)))	;; ing
("satisfying"	nil	(((s a )1)((t^ @ s )0)((f ai )1)((i ng )0)))	;; ing
("saturating"	nil	(((s a )1)((ch @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("saucing"	nil	(((s oo s )1)((i ng )0)))	;; ing
("sauntering"	nil	(((s oo n )1)((t @ r )0)((i ng )0)))	;; ing
("savaging"	nil	(((s a )1)((v @ jh )0)((i ng )0)))	;; ing
("saving"	nil	(((s ei v )1)((i ng )0)))	;; ing
("savoring"	nil	(((s ei )1)((v @ r )0)((i ng )0)))	;; ing
("savouring"	nil	(((s ei )1)((v @ r )0)((i ng )0)))	;; ing
("sawing"	nil	(((s oo )1)((i ng )0)))	;; ing
("sawmilling"	nil	(((s oo )1)((m i l )1)((i ng )0)))	;; ing
("saying"	nil	(((s ei )1)((i ng )0)))	;; ing
("scabbing"	nil	(((s k a b )1)((i ng )0)))	;; ing
("scaffold"	nil	(((s k a) 1) ((f o l d) 0)))	;; oul
("scaffolding"	nil	(((s k a) 1) ((f o l d) 0) ((i ng) 0)))	;; oul
("scaffoldings"	nil	(((s k a) 1) ((f o l d) 0) ((i ng z) 0)))	;; oul
("scaffolds"	nil	(((s k a) 1) ((f o l d z) 0)))	;; oul
("scalding"	nil	(((s k oo l d )1)((i ng )0)))	;; ing
("scaling"	nil	(((s k ei l )1)((i ng )0)))	;; ing
("scalloping"	nil	(((s k o )1)((l @ p )0)((i ng )0)))	;; ing
("scalping"	nil	(((s k a l p )1)((i ng )0)))	;; ing
("scamming"	nil	(((s k a m )1)((i ng )0)))	;; ing
("scampering"	nil	(((s k a m )1)((p @ r )0)((i ng )0)))	;; ing
("scandalising"	nil	(((s k a n )1)((d l! )0)((ai z )1)((i ng )0)))	;; ing
("scandalizing"	nil	(((s k a n )1)((d l! )0)((ai z )1)((i ng )0)))	;; ing
("scandalmongering"	nil	(((s k a n )1)((d l! )0)((m uh ng )1)((g @ r )0)((i ng )0)))	;; ing
("scandinavias"	nil	(((s k a n) 1) ((d @) 0) ((n ei) 1) ((v ii @ z) 0)))	;; unique
("scanning"	nil	(((s k a n )1)((i ng )0)))	;; ing
("scantling"	nil	(((s k a n )1)((t l! )0)((i ng )0)))	;; ing
("scapegoating"	nil	(((s k ei p )1)((g ou t^ )1)((i ng )0)))	;; ing
("scaremongering"	nil	(((s k ii @ )1)((m uh ng )1)((g @ r )0)((i ng )0)))	;; ing
("scarifying"	nil	(((s k a r )1)((@ )0)((f ai )1)((i ng )0)))	;; ing
("scaring"	nil	(((s k ir r )1)((i ng )0)))	;; ing
("scarring"	nil	(((s k aa r )1)((i ng )0)))	;; ing
("scathing"	nil	(((s k ei dh )1)((i ng )0)))	;; ing
("scattering"	nil	(((s k a )1)((t^ @ r )0)((i ng )0)))	;; ing
("scavenging"	nil	(((s k a )1)((v @ n jh )0)((i ng )0)))	;; ing
("scenting"	nil	(((s e n t )1)((i ng )0)))	;; ing
("schaefers"	nil	(((sh ei) 1) ((f @ z) 0)))	;; unique
("scheduling"	nil	(((sh e )1)((jh @ l )0)((i ng )0)))	;; ing
("schelling"	nil	(((sh a )1)((l i ng )0)))	;; ing
("scheming"	nil	(((s k ii m )1)((i ng )0)))	;; ing
("schilling"	nil	(((sh i )1)((l i ng )0)))	;; ing
("schlepping"	nil	(((sh l e p )1)((i ng )0)))	;; ing
("school"	nil	(((s k u l) 1)))	;; uul
("school-bags"	nil	(((s k u l) 1) ((b a g z) 0)))	;; uul
("school-board"	nil	(((s k u l) 1) ((b oo d) 0)))	;; uul
("school-boards"	nil	(((s k u l) 1) ((b oo d z) 0)))	;; uul
("school-days"	nil	(((s k u l) 1) ((d ei z) 0)))	;; uul
("school-girl"	nil	(((s k u l) 1) ((g @@r l) 0)))	;; uul
("school-girls"	nil	(((s k u l) 1) ((g @@r l z) 0)))	;; uul
("school-marm"	nil	(((s k u l) 1) ((m aa m) 0)))	;; uul
("school-marmish"	nil	(((s k u l) 1) ((m aa m) 1) ((i sh) 0)))	;; uul
("school-room"	nil	(((s k u l) 1) ((r uu m) 0)))	;; uul
("school-rooms"	nil	(((s k u l) 1) ((r uu m z) 0)))	;; uul
("schoolbag"	nil	(((s k u l) 1) ((b a g) 0)))	;; uul
("schoolbags"	nil	(((s k u l) 1) ((b a g z) 0)))	;; uul
("schoolbook"	nil	(((s k u l) 1) ((b u k) 0)))	;; uul
("schoolbookish"	nil	(((s k u l) 1) ((b u k) 1) ((i sh) 0)))	;; uul
("schoolbooks"	nil	(((s k u l) 1) ((b u k s) 0)))	;; uul
("schoolboy"	nil	(((s k u l) 1) ((b oi) 0)))	;; uul
("schoolboyish"	nil	(((s k u l) 1) ((b oi) 1) ((i sh) 0)))	;; uul
("schoolboys"	nil	(((s k u l) 1) ((b oi z) 0)))	;; uul
("schoolchild"	nil	(((s k u l) 1) ((ch ai l d) 0)))	;; uul
("schoolchildren"	nil	(((s k u l) 1) ((ch i l) 1) ((d r @ n) 0)))	;; uul
("schoolchildrens"	nil	(((s k u l) 1) ((ch i l) 1) ((d r @ n z) 0)))	;; unique
("schoolday"	nil	(((s k u l) 1) ((d ei) 0)))	;; uul
("schooldays"	nil	(((s k u l) 1) ((d ei z) 0)))	;; uul
("schooled"	nil	(((s k u l d) 1)))	;; uul
("schooler"	nil	(((s k u l) 1) ((@) 0)))	;; uul
("schoolfellow"	nil	(((s k u l) 1) ((f a) 1) ((l ou) 0)))	;; uul
("schoolfellows"	nil	(((s k u l) 1) ((f a) 1) ((l ou z) 0)))	;; uul
("schoolfriend"	nil	(((s k u l) 1) ((f r e n d) 0)))	;; uul
("schoolfriends"	nil	(((s k u l) 1) ((f r e n d z) 0)))	;; uul
("schoolgirl"	nil	(((s k u l) 1) ((g @@r l) 0)))	;; uul
("schoolgirlish"	nil	(((s k u l) 1) ((g @@r l) 1) ((i sh) 0)))	;; uul
("schoolgirlishly"	nil	(((s k u l) 1) ((g @@r l) 1) ((i sh) 0) ((l ii) 0)))	;; uul
("schoolgirlishness"	nil	(((s k u l) 1) ((g @@r l) 1) ((i sh) 0) ((n @ s) 0)))	;; uul
("schoolgirls"	nil	(((s k u l) 1) ((g @@r l z) 0)))	;; uul
("schoolhouse"	nil	(((s k u l) 1) ((h ow s) 0)))	;; uul
("schoolhouses"	nil	(((s k u l) 1) ((h ow z) 1) ((@ z) 0)))	;; uul
("schooling"	nil	(((s k u l) 1) ((i ng) 0)))	;; uul
("schoolkid"	nil	(((s k u l) 1) ((k i d) 0)))	;; uul
("schoolkids"	nil	(((s k u l) 1) ((k i d z) 0)))	;; uul
("schoolmarm"	nil	(((s k u l) 1) ((m aa m) 0)))	;; uul
("schoolmarms"	nil	(((s k u l) 1) ((m aa m z) 0)))	;; uul
("schoolmaster"	nil	(((s k u l) 1) ((m aa) 1) ((s t @) 0)))	;; uul
("schoolmastering"	nil	(((s k u l) 1) ((m aa) 1) ((s t @ r) 0) ((i ng) 0)))	;; uul
("schoolmasterish"	nil	(((s k u l) 1) ((m aa) 1) ((s t @ r) 0) ((i sh) 0)))	;; uul
("schoolmasters"	nil	(((s k u l) 1) ((m aa) 1) ((s t @ z) 0)))	;; uul
("schoolmate"	nil	(((s k u l) 1) ((m ei t) 0)))	;; uul
("schoolmates"	nil	(((s k u l) 1) ((m ei t s) 0)))	;; uul
("schoolmistress"	nil	(((s k u l) 1) ((m i) 1) ((s t r @ s) 0)))	;; uul
("schoolmistresses"	nil	(((s k u l) 1) ((m i) 1) ((s t r @ s) 0) ((@ z) 0)))	;; uul
("schoolpeople"	nil	(((s k u l) 1) ((p ii) 1) ((p l!) 0)))	;; uul
("schoolroom"	nil	(((s k u l) 1) ((r uu m) 0)))	;; uul
("schoolrooms"	nil	(((s k u l) 1) ((r uu m z) 0)))	;; uul
("schools"	nil	(((s k u l z) 1)))	;; uul
("schoolteacher"	nil	(((s k u l) 1) ((t ii ch) 1) ((@) 0)))	;; uul
("schoolteachers"	nil	(((s k u l) 1) ((t ii ch) 1) ((@ z) 0)))	;; uul
("schoolteaching"	nil	(((s k u l) 1) ((t ii ch) 1) ((i ng) 0)))	;; uul
("schooltime"	nil	(((s k u l) 1) ((t ai m) 0)))	;; uul
("schooltimes"	nil	(((s k u l) 1) ((t ai m z) 0)))	;; uul
("schoolwork"	nil	(((s k u l) 1) ((w @@r k) 0)))	;; uul
("schoolyard"	nil	(((s k u l) 1) ((y aa d) 0)))	;; uul
("schoolyards"	nil	(((s k u l) 1) ((y aa d z) 0)))	;; uul
("schoolyear"	nil	(((s k u l) 0) ((y e @) 1)))	;; beer-bear, uul
("schoolyears"	nil	(((s k u l) 0) ((y e @ z) 1)))	;; beer-bear, uul
("schwartzs"	nil	(((sh w oo t s) 1) ((@ z) 0)))	;; unique
("schwarzs"	nil	(((sh w oo t s) 1) ((@ z) 0)))	;; unique
("scintillating"	nil	(((s i n )1)((t i l )0)((ei t^ )1)((i ng )0)))	;; ing
("scissoring"	nil	(((s i )1)((z @ r )0)((i ng )0)))	;; ing
("scoffing"	nil	(((s k o f )1)((i ng )0)))	;; ing
("scold"	nil	(((s k o l d) 1)))	;; oul
("scolded"	nil	(((s k o l d) 1) ((@ d) 0)))	;; oul
("scolder"	nil	(((s k o l d) 1) ((@) 0)))	;; oul
("scolding"	nil	(((s k o l d) 1) ((i ng) 0)))	;; oul
("scolds"	nil	(((s k o l d z) 1)))	;; oul
("scooping"	nil	(((s k uu p )1)((i ng )0)))	;; ing
("scooting"	nil	(((s k uu t^ )1)((i ng )0)))	;; ing
("scoping"	nil	(((s k ou p )1)((i ng )0)))	;; ing
("scorching"	nil	(((s k oo ch )1)((i ng )0)))	;; ing
("scoreboarding"	nil	(((s k oo )1)((b - oo d )0)((i ng )0)))	;; ing
("scoring"	nil	(((s k oo r )1)((i ng )0)))	;; ing
("scorning"	nil	(((s k oo n )1)((i ng )0)))	;; ing
("scotching"	nil	(((s k o ch )1)((i ng )0)))	;; ing
("scourging"	nil	(((s k @@r jh )1)((i ng )0)))	;; ing
("scouring"	nil	(((s k ow @ r )1)((i ng )0)))	;; ing
("scouting"	nil	(((s k ow t^ )1)((i ng )0)))	;; ing
("scowling"	nil	(((s k ow l )1)((i ng )0)))	;; ing
("scrabbling"	nil	(((s k r a )1)((b l! )0)((i ng )0)))	;; ing
("scrambling"	nil	(((s k r a m )1)((b l! )0)((i ng )0)))	;; ing
("scramming"	nil	(((s k r a m )1)((i ng )0)))	;; ing
("scraping"	nil	(((s k r ei p )1)((i ng )0)))	;; ing
("scrapping"	nil	(((s k r a p )1)((i ng )0)))	;; ing
("scratching"	nil	(((s k r a ch )1)((i ng )0)))	;; ing
("scrawling"	nil	(((s k r oo l )1)((i ng )0)))	;; ing
("screaming"	nil	(((s k r ii m )1)((i ng )0)))	;; ing
("screeching"	nil	(((s k r ii ch )1)((i ng )0)))	;; ing
("screendumping"	nil	(((s k r ii n )1)((d uh m p )1)((i ng )0)))	;; ing
("screening"	nil	(((s k r ii n )1)((i ng )0)))	;; ing
("screenlocking"	nil	(((s k r ii n )1)((l o k )1)((i ng )0)))	;; ing
("screensaving"	nil	(((s k r ii n )1)((s ei v )1)((i ng )0)))	;; ing
("screwing"	nil	(((s k r uu )1)((i ng )0)))	;; ing
("scribbling"	nil	(((s k r i )1)((b l! )0)((i ng )0)))	;; ing
("scribing"	nil	(((s k r ai b )1)((i ng )0)))	;; ing
("scrimping"	nil	(((s k r i m p )1)((i ng )0)))	;; ing
("scripting"	nil	(((s k r i p t )1)((i ng )0)))	;; ing
("scroll"	nil	(((s k r o l) 1)))	;; oul
("scrollable"	nil	(((s k r o l) 1) ((@) 0) ((b l!) 0)))	;; oul
("scrollbar"	nil	(((s k r o l) 1) ((b aa) 0)))	;; oul
("scrollbars"	nil	(((s k r o l) 1) ((b aa z) 0)))	;; oul
("scrolled"	nil	(((s k r o l d) 1)))	;; oul
("scroller"	nil	(((s k r o l) 1) ((@) 0)))	;; oul
("scrollers"	nil	(((s k r o l) 1) ((@ z) 0)))	;; oul
("scrolling"	nil	(((s k r o l) 1) ((i ng) 0)))	;; oul
("scrolls"	nil	(((s k r o l z) 1)))	;; oul
("scrounging"	nil	(((s k r ow n jh )1)((i ng )0)))	;; ing
("scrubbing"	nil	(((s k r uh b )1)((i ng )0)))	;; ing
("scrunching"	nil	(((s k r uh n ch )1)((i ng )0)))	;; ing
("scrutinising"	nil	(((s k r uu )1)((t^ i n )0)((ai z )1)((i ng )0)))	;; ing
("scrutinizing"	nil	(((s k r uu )1)((t^ i n )0)((ai z )1)((i ng )0)))	;; ing
("scuba-diving"	nil	(((s k uu )1)((b @ )0)((d ai v )1)((i ng )0)))	;; ing
("scudding"	nil	(((s k uh d )1)((i ng )0)))	;; ing
("scuffing"	nil	(((s k uh f )1)((i ng )0)))	;; ing
("scuffling"	nil	(((s k uh )1)((f l! )0)((i ng )0)))	;; ing
("sculling"	nil	(((s k uh l )1)((i ng )0)))	;; ing
("sculpting"	nil	(((s k o l p t )1)((i ng )0)))	;; ing
("sculpturing"	nil	(((s k o l p )1)((ch @ r )0)((i ng )0)))	;; ing
("scumming"	nil	(((s k uh m )1)((i ng )0)))	;; ing
("scuppering"	nil	(((s k uh )1)((p @ r )0)((i ng )0)))	;; ing
("scurrying"	nil	(((s k uh )1)((r iy )0)((i ng )0)))	;; ing
("scuttling"	nil	(((s k uh )1)((t l! )0)((i ng )0)))	;; ing
("sea-going"	nil	(((s ii )1)((g ou )1)((i ng )0)))	;; ing
("seafaring"	nil	(((s ii )1)((f ir r )1)((i ng )0)))	;; ing
("seagoing"	nil	(((s ii )1)((g ou )1)((i ng )0)))	;; ing
("sealing"	nil	(((s ii l )1)((i ng )0)))	;; ing
("seamans"	nil	(((s ii) 1) ((m @ n z) 0)))	;; unique
("seamens"	nil	(((s ii) 1) ((m @ n z) 0)))	;; unique
("seans"	nil	(((sh oo n z) 1)))	;; unique
("searching"	nil	(((s @@r ch )1)((i ng )0)))	;; ing
("searing"	nil	(((s ir r )1)((i ng )0)))	;; ing
("seasoning"	nil	(((s ii )1)((z n! )0)((i ng )0)))	;; ing
("seating"	nil	(((s ii t^ )1)((i ng )0)))	;; ing
("seceding"	nil	(((s i )0)((s ii d )1)((i ng )0)))	;; ing
("secluding"	nil	(((s i )0)((k l uu d )1)((i ng )0)))	;; ing
("seconding"	nil	(((s @ )0)((k o n d )1)((i ng )0)))	;; ing
("secretarys"	nil	(((s e) 1) ((k r @) 0) ((t r ii z) 0)))	;; unique
("secreting"	nil	(((s i )0)((k r ii t^ )1)((i ng )0)))	;; ing
("sectioning"	nil	(((s e k )1)((sh n! )0)((i ng )0)))	;; ing
("sectoralizing"	nil	(((s e k )1)((t @ r )0)((@ l )0)((ai z )1)((i ng )0)))	;; ing
("sectoring"	nil	(((s e k )1)((t @ r )0)((i ng )0)))	;; ing
("securing"	nil	(((s i )0)((k y ur r )1)((i ng )0)))	;; ing
("securitizing"	nil	(((s i )0)((k y ur )1)((r i )0)((t ai z )1)((i ng )0)))	;; ing
("securitys"	nil	(((s i) 0) ((k y uu r) 1) ((@) 0) ((t^ ii z) 0)))	;; unique
("seducing"	nil	(((s i )0)((d y uu s )1)((i ng )0)))	;; ing
("seeding"	nil	(((s ii d )1)((i ng )0)))	;; ing
("seedling"	nil	(((s ii d )1)((l i ng )0)))	;; ing
("seeing"	nil	(((s ii )1)((i ng )0)))	;; ing
("seeking"	nil	(((s ii k )1)((i ng )0)))	;; ing
("seemd"	nil	(((s ii m d) 1)))	;; unique
("seeming"	nil	(((s ii m )1)((i ng )0)))	;; ing
("seeping"	nil	(((s ii p )1)((i ng )0)))	;; ing
("seesawing"	nil	(((s ii )1)((s oo )1)((i ng )0)))	;; ing
("seething"	nil	(((s ii dh )1)((i ng )0)))	;; ing
("segmenting"	nil	(((s e g )0)((m e n t )1)((i ng )0)))	;; ing
("segregating"	nil	(((s e )1)((g r @ )0)((g ei t^ )1)((i ng )0)))	;; ing
("seizing"	nil	(((s ii z )1)((i ng )0)))	;; ing
("selecting"	nil	(((s @ )0)((l e k t )1)((i ng )0)))	;; ing
("self-abusing"	nil	(((s a l f )1)((@ )0)((b y uu z )1)((i ng )0)))	;; ing
("self-acting"	nil	(((s - a l f )0)((a k t )1)((i ng )0)))	;; ing
("self-adjusting"	nil	(((s a l f )1)((@ )0)((jh uh s t )1)((i ng )0)))	;; ing
("self-annealing"	nil	(((s a l f )1)((@ )0)((n ii l )1)((i ng )0)))	;; ing
("self-approving"	nil	(((s a l f )1)((@ )0)((p r uu v )1)((i ng )0)))	;; ing
("self-asserting"	nil	(((s a l f )1)((@ )0)((s @@r t^ )1)((i ng )0)))	;; ing
("self-basting"	nil	(((s - a l f )0)((b ei s t )1)((i ng )0)))	;; ing
("self-building"	nil	(((s - a l f )0)((b i l d )1)((i ng )0)))	;; ing
("self-catering"	nil	(((s - a l f )0)((k ei )1)((t^ @ r )0)((i ng )0)))	;; ing
("self-cleaning"	nil	(((s - a l f )0)((k l ii n )1)((i ng )0)))	;; ing
("self-closing"	nil	(((s - a l f )0)((k l ou z )1)((i ng )0)))	;; ing
("self-condemning"	nil	(((s a l f )1)((k @ n )0)((d e m )1)((i ng )0)))	;; ing
("self-conditioning"	nil	(((s a l f )1)((k @ n )0)((d i )1)((sh n! )0)((i ng )0)))	;; ing
("self-confiding"	nil	(((s a l f )1)((k @ n )0)((f ai d )1)((i ng )0)))	;; ing
("self-considering"	nil	(((s a l f )1)((k @ n )0)((s i )1)((d @ r )0)((i ng )0)))	;; ing
("self-consuming"	nil	(((s a l f )1)((k @ n )0)((s y uu m )1)((i ng )0)))	;; ing
("self-control"	nil	(((s a l f) 1) ((k @ n) 0) ((t r o l) 1)))	;; oul
("self-controlled"	nil	(((s a l f) 1) ((k @ n) 0) ((t r o l d) 1)))	;; oul
("self-controls"	nil	(((s a l f) 1) ((k @ n) 0) ((t r o l z) 1)))	;; oul
("self-correcting"	nil	(((s a l f )1)((k @ )0)((r e k t )1)((i ng )0)))	;; ing
("self-damning"	nil	(((s - a l f )0)((d a m )1)((i ng )0)))	;; ing
("self-defeating"	nil	(((s a l f )1)((d i )0)((f ii t^ )1)((i ng )0)))	;; ing
("self-denying"	nil	(((s a l f )1)((d i )0)((n ai )1)((i ng )0)))	;; ing
("self-depreciating"	nil	(((s a l f )1)((d i )0)((p r ii )1)((sh iy )0)((ei t^ )1)((i ng )0)))	;; ing
("self-destroying"	nil	(((s a l f )1)((d i )0)((s t r oi )1)((i ng )0)))	;; ing
("self-destructing"	nil	(((s a l f )1)((d i )0)((s t r uh k t )1)((i ng )0)))	;; ing
("self-determining"	nil	(((s a l f )1)((d i )0)((t @@r )1)((m i n )0)((i ng )0)))	;; ing
("self-developing"	nil	(((s a l f )1)((d i )0)((v a )1)((l @ p )0)((i ng )0)))	;; ing
("self-directing"	nil	(((s a l f )1)((d ai )0)((r e k t )1)((i ng )0)))	;; ing
("self-drawing"	nil	(((s - a l f )0)((d r oo )1)((i ng )0)))	;; ing
("self-effacing"	nil	(((s a l f )1)((i )0)((f ei s )1)((i ng )0)))	;; ing
("self-electing"	nil	(((s a l f )1)((i )0)((l e k t )1)((i ng )0)))	;; ing
("self-exciting"	nil	(((s a l f )1)((@ k )0)((s ai t^ )1)((i ng )0)))	;; ing
("self-executing"	nil	(((s - a l f )0)((e k )1)((s @ )0)((k y uu t^ )1)((i ng )0)))	;; ing
("self-explaining"	nil	(((s a l f )1)((@ k )0)((s p l ei n )1)((i ng )0)))	;; ing
("self-feeding"	nil	(((s - a l f )0)((f ii d )1)((i ng )0)))	;; ing
("self-feeling"	nil	(((s - a l f )0)((f ii l )1)((i ng )0)))	;; ing
("self-financing"	nil	(((s a l f )0)((f ai )1)((n a n s )0)((i ng )0)))	;; ing
("self-flattering"	nil	(((s - a l f )0)((f l a )1)((t^ @ r )0)((i ng )0)))	;; ing
("self-focusing"	nil	(((s - a l f )0)((f ou )1)((k @ s )0)((i ng )0)))	;; ing
("self-fulfilling"	nil	(((s a l f )1)((f u l )0)((f i l )1)((i ng )0)))	;; ing
("self-generating"	nil	(((s - a l f )0)((jh e )1)((n @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("self-giving"	nil	(((s - a l f )0)((g i v )1)((i ng )0)))	;; ing
("self-governing"	nil	(((s - a l f )0)((g uh )1)((v n! )0)((i ng )0)))	;; ing
("self-harming"	nil	(((s - a l f )0)((h aa m )1)((i ng )0)))	;; ing
("self-healing"	nil	(((s - a l f )0)((h ii l )1)((i ng )0)))	;; ing
("self-injecting"	nil	(((s a l f )1)((i n )0)((jh e k t )1)((i ng )0)))	;; ing
("self-justifying"	nil	(((s - a l f )0)((jh uh s t )1)((@ )0)((f ai )1)((i ng )0)))	;; ing
("self-knowing"	nil	(((s - a l f )0)((n ou )1)((i ng )0)))	;; ing
("self-levelling"	nil	(((s - a l f )0)((l e )1)((v l! )0)((i ng )0)))	;; ing
("self-lighting"	nil	(((s - a l f )0)((l ai t^ )1)((i ng )0)))	;; ing
("self-liquidating"	nil	(((s - a l f )0)((l i )1)((k w i d )0)((ei t^ )1)((i ng )0)))	;; ing
("self-loading"	nil	(((s - a l f )0)((l ou d )1)((i ng )0)))	;; ing
("self-locking"	nil	(((s - a l f )0)((l o k )1)((i ng )0)))	;; ing
("self-loving"	nil	(((s - a l f )0)((l uh v )1)((i ng )0)))	;; ing
("self-moving"	nil	(((s - a l f )0)((m uu v )1)((i ng )0)))	;; ing
("self-murdering"	nil	(((s - a l f )0)((m @@r )1)((d @ r )0)((i ng )0)))	;; ing
("self-neglecting"	nil	(((s a l f )1)((n i )0)((g l e k t )1)((i ng )0)))	;; ing
("self-operating"	nil	(((s - a l f )0)((o )1)((p @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("self-perpetuating"	nil	(((s a l f )1)((p @ )0)((p e )1)((ch uw )0)((ei t^ )1)((i ng )0)))	;; ing
("self-pleasing"	nil	(((s - a l f )0)((p l ii z )1)((i ng )0)))	;; ing
("self-preserving"	nil	(((s a l f )1)((p r @ )0)((z @@r v )1)((i ng )0)))	;; ing
("self-propagating"	nil	(((s - a l f )0)((p r o )1)((p @ )0)((g ei t^ )1)((i ng )0)))	;; ing
("self-propelling"	nil	(((s a l f )1)((p r @ )0)((p a l )1)((i ng )0)))	;; ing
("self-protecting"	nil	(((s a l f )1)((p r @ )0)((t e k t )1)((i ng )0)))	;; ing
("self-pruning"	nil	(((s - a l f )0)((p r uu n )1)((i ng )0)))	;; ing
("self-raising"	nil	(((s - a l f )0)((r ei z )1)((i ng )0)))	;; ing
("self-recording"	nil	(((s a l f )1)((r i )0)((k oo d )1)((i ng )0)))	;; ing
("self-referring"	nil	(((s a l f )1)((r @ )0)((f @@r r )1)((i ng )0)))	;; ing
("self-regarding"	nil	(((s a l f )1)((r @ )0)((g aa d )1)((i ng )0)))	;; ing
("self-registering"	nil	(((s a l f )0)((r e )1)((jh i )0)((s t @ r )0)((i ng )0)))	;; ing
("self-regulating"	nil	(((s - a l f )0)((r e )1)((g y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("self-relying"	nil	(((s a l f )1)((r i )0)((l ai )1)((i ng )0)))	;; ing
("self-reproaching"	nil	(((s a l f )1)((r i )0)((p r ou ch )1)((i ng )0)))	;; ing
("self-respecting"	nil	(((s a l f )1)((r i )0)((s p e k t )1)((i ng )0)))	;; ing
("self-revealing"	nil	(((s a l f )1)((r i )0)((v ii l )1)((i ng )0)))	;; ing
("self-righting"	nil	(((s - a l f )0)((r ai t^ )1)((i ng )0)))	;; ing
("self-rising"	nil	(((s - a l f )0)((r ai z )1)((i ng )0)))	;; ing
("self-rolled"	nil	(((s a l f) 0) ((r o l d) 1)))	;; oul
("self-ruling"	nil	(((s - a l f )0)((r @ l )1)((i ng )0)))	;; ing
("self-sacrificing"	nil	(((s - a l f )0)((s a )1)((k r @ )0)((f ai s )1)((i ng )0)))	;; ing
("self-satisfying"	nil	(((s a l f )0)((s a )1)((t^ @ s )0)((f ai )1)((i ng )0)))	;; ing
("self-schooled"	nil	(((s a l f) 0) ((s k u l d) 1)))	;; uul
("self-sealing"	nil	(((s - a l f )0)((s ii l )1)((i ng )0)))	;; ing
("self-seeking"	nil	(((s - a l f )0)((s ii k )1)((i ng )0)))	;; ing
("self-serving"	nil	(((s - a l f )0)((s @@r v )1)((i ng )0)))	;; ing
("self-shielding"	nil	(((s - a l f )0)((sh ii l d )1)((i ng )0)))	;; ing
("self-standing"	nil	(((s - a l f )0)((s t a n d )1)((i ng )0)))	;; ing
("self-supporting"	nil	(((s a l f )1)((s @ )0)((p oo t^ )1)((i ng )0)))	;; ing
("self-surviving"	nil	(((s a l f )1)((s @ )0)((v ai v )1)((i ng )0)))	;; ing
("self-sustaining"	nil	(((s a l f )1)((s @ )0)((s t ei n )1)((i ng )0)))	;; ing
("self-thinking"	nil	(((s - a l f )0)((th i ng k )1)((i ng )0)))	;; ing
("self-tormenting"	nil	(((s a l f )1)((t oo )0)((m e n t )1)((i ng )0)))	;; ing
("self-winding"	nil	(((s - a l f )0)((w ai n d )1)((i ng )0)))	;; ing
("selfconfiguring"	nil	(((s a l f )1)((k @ n )0)((f i )1)((g @ r )0)((i ng )0)))	;; ing
("selforganizing"	nil	(((s - a l f )0)((oo )1)((g @ )0)((n ai z )1)((i ng )0)))	;; ing
("selfrunning"	nil	(((s - a l f )0)((r uh n )1)((i ng )0)))	;; ing
("selftesting"	nil	(((s - a l f )0)((t e s t )1)((i ng )0)))	;; ing
("selling"	nil	(((s a l )1)((i ng )0)))	;; ing
("semaphoring"	nil	(((s e )1)((m @ )0)((f oo r )1)((i ng )0)))	;; ing
("semiamusing"	nil	(((s e )1)((m iy @ )0)((m y uu z )1)((i ng )0)))	;; ing
("semicolon"	nil	(((s e) 1) ((m ii) 0) ((k o) 1) ((l @ n) 0)))	;; oul
("semicolons"	nil	(((s e) 1) ((m ii) 0) ((k o) 1) ((l @ n z) 0)))	;; oul
("semiconducting"	nil	(((s e )1)((m iy )0)((k @ n )0)((d uh k t )1)((i ng )0)))	;; ing
("seminole"	nil	(((s e) 1) ((m i) 0) ((n o l) 0)))	;; oul
("sending"	nil	(((s e n d )1)((i ng )0)))	;; ing
("senegals"	nil	(((s e) 1) ((n i) 0) ((g oo l z) 1)))	;; unique
("sensationalising"	nil	(((s e n s )0)((ei )1)((sh n! )0)((@ l )0)((ai z )1)((i ng )0)))	;; ing
("sensationalizing"	nil	(((s e n s )0)((ei )1)((sh n! )0)((@ l )0)((ai z )1)((i ng )0)))	;; ing
("sensing"	nil	(((s e n s )1)((i ng )0)))	;; ing
("sensitizing"	nil	(((s e n )1)((s @ )0)((t ai z )1)((i ng )0)))	;; ing
("sensualising"	nil	(((s e n )1)((sh uw @ l )0)((ai z )1)((i ng )0)))	;; ing
("sentencing"	nil	(((s e n )1)((t n! s )0)((i ng )0)))	;; ing
("sentimentalising"	nil	(((s e n )1)((t @ )0)((m e n t )1)((l! )0)((ai z )1)((i ng )0)))	;; ing
("sentimentalizing"	nil	(((s e n )1)((t @ )0)((m e n t )1)((l! )0)((ai z )1)((i ng )0)))	;; ing
("seoul"	nil	(((s o l) 1)))	;; oul
("separating"	nil	(((s e )1)((p @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("septembers"	nil	(((s e p) 0) ((t e m) 1) ((b @ z) 0)))	;; unique
("sequel"	nil	(((s ii) 1) ((k w u l) 0)))	;; uul
("sequels"	nil	(((s ii) 1) ((k w u l z) 0)))	;; uul
("sequencing"	nil	(((s ii )1)((k w @ n s )0)((i ng )0)))	;; ing
("sequentialising"	nil	(((s i )0)((k w e n )1)((sh l! )0)((ai z )1)((i ng )0)))	;; ing
("sequestering"	nil	(((s i )0)((k w e )1)((s t @ r )0)((i ng )0)))	;; ing
("sequestrating"	nil	(((s ii )1)((k w @ )0)((s t r ei t^ )1)((i ng )0)))	;; ing
("serbias"	nil	(((s @@r) 1) ((b ii @ z) 0)))	;; unique
("serc"	nil	(((s @@r k) 1)))	;; unique
("serenading"	nil	(((s e )1)((r @ )0)((n ei d )1)((i ng )0)))	;; ing
("serialising"	nil	(((s ir )1)((r iy @ l )0)((ai z )1)((i ng )0)))	;; ing
("serializing"	nil	(((s ir )1)((r iy @ l )0)((ai z )1)((i ng )0)))	;; ing
("sermonising"	nil	(((s @@r )1)((m @ n )0)((ai z )1)((i ng )0)))	;; ing
("sermonizing"	nil	(((s @@r )1)((m @ n )0)((ai z )1)((i ng )0)))	;; ing
("serpentining"	nil	(((s @@r )1)((p @ n t )0)((ai n )1)((i ng )0)))	;; ing
("serrating"	nil	(((s i )0)((r ei t^ )1)((i ng )0)))	;; ing
("servicing"	nil	(((s @@r )1)((v @ s )0)((i ng )0)))	;; ing
("serving"	nil	(((s @@r v )1)((i ng )0)))	;; ing
("setting"	nil	(((s e t^ )1)((i ng )0)))	;; ing
("settling"	nil	(((s e )1)((t l! )0)((i ng )0)))	;; ing
("seusss"	nil	(((s uu s) 1) ((@ z) 0)))	;; unique
("seven-year-old"	nil	(((s e) 1) ((v n!) 0) ((y ir r) 0) ((o l d) 1)))	;; oul
("seven-year-olds"	nil	(((s e) 1) ((v n!) 0) ((y ir r) 0) ((o l d z) 1)))	;; oul
("sevenfold"	nil	(((s e) 1) ((v n!) 0) ((f o l d) 1)))	;; oul
("severalfold"	nil	(((s e v) 1) ((r @ l) 0) ((f o l d) 1)))	;; oul
("severing"	nil	(((s e )1)((v @ r )0)((i ng )0)))	;; ing
("sewing"	nil	(((s ou )1)((i ng )0)))	;; ing
("sexing"	nil	(((s e k s )1)((i ng )0)))	;; ing
("seymours"	nil	(((s ii) 1) ((m oo z) 0)))	;; unique
("shacking"	nil	(((sh a k )1)((i ng )0)))	;; ing
("shackling"	nil	(((sh a )1)((k l! )0)((i ng )0)))	;; ing
("shading"	nil	(((sh ei d )1)((i ng )0)))	;; ing
("shadowboxing"	nil	(((sh a )1)((d ou )0)((b o k s )1)((i ng )0)))	;; ing
("shadowing"	nil	(((sh a )1)((d ou )0)((i ng )0)))	;; ing
("shafting"	nil	(((sh aa f t )1)((i ng )0)))	;; ing
("shagging"	nil	(((sh a g )1)((i ng )0)))	;; ing
("shaking"	nil	(((sh ei k )1)((i ng )0)))	;; ing
("shambling"	nil	(((sh a m )1)((b l! )0)((i ng )0)))	;; ing
("shaming"	nil	(((sh ei m )1)((i ng )0)))	;; ing
("shamming"	nil	(((sh a m )1)((i ng )0)))	;; ing
("shampooing"	nil	(((sh a m )0)((p uu )1)((i ng )0)))	;; ing
("shan't"	nil	(((sh aa n t) 1)))	;; contraction
("shanghaiing"	nil	(((sh a ng )0)((h ai )1)((i ng )0)))	;; ing
("shannons"	nil	(((sh a) 1) ((n @ n z) 0)))	;; unique
("shaping"	nil	(((sh ei p )1)((i ng )0)))	;; ing
("sharecropping"	nil	(((sh ii @ )1)((k r o p )1)((i ng )0)))	;; ing
("shareholder"	nil	(((sh e @) 1) ((h o l d) 1) ((@) 0)))	;; beer-bear, oul
("shareholders"	nil	(((sh e @) 1) ((h o l d) 1) ((@ z) 0)))	;; beer-bear, oul
("shareholding"	nil	(((sh e @) 1) ((h o l d) 1) ((i ng) 0)))	;; beer-bear, oul
("shareholdings"	nil	(((sh e @) 1) ((h o l d) 1) ((i ng z) 0)))	;; beer-bear, oul
("sharing"	nil	(((sh ir r )1)((i ng )0)))	;; ing
("sharking"	nil	(((sh aa k )1)((i ng )0)))	;; ing
("sharp-looking"	nil	(((sh aa p )1)((l u k )1)((i ng )0)))	;; ing
("sharpening"	nil	(((sh aa p )1)((@ n )0)((i ng )0)))	;; ing
("sharpshooting"	nil	(((sh aa p )1)((sh uu t^ )1)((i ng )0)))	;; ing
("shattering"	nil	(((sh a )1)((t^ @ r )0)((i ng )0)))	;; ing
("shaving"	nil	(((sh ei v )1)((i ng )0)))	;; ing
("she'd"	nil	(((sh ii d) 1)))	;; contraction
("she'll"	nil	(((sh ii l) 1)))	;; contraction
("she's"	nil	(((sh ii z) 1)))	;; contraction
("sheafing"	nil	(((sh ii f )1)((i ng )0)))	;; ing
("shearing"	nil	(((sh ir r )1)((i ng )0)))	;; ing
("sheas"	nil	(((sh ii z) 1)))	;; unique
("sheathing"	nil	(((sh ii dh )1)((i ng )0)))	;; ing
("shedding"	nil	(((sh e d )1)((i ng )0)))	;; ing
("sheep-grazing"	nil	(((sh ii p )1)((g r ei z )1)((i ng )0)))	;; ing
("sheepfold"	nil	(((sh ii p) 1) ((f o l d) 0)))	;; oul
("sheepfolds"	nil	(((sh ii p) 1) ((f o l d z) 0)))	;; oul
("sheeps"	nil	(((sh ii p s) 1)))	;; unique
("sheepwashing"	nil	(((sh ii p )1)((w o sh )1)((i ng )0)))	;; ing
("sheering"	nil	(((sh ir r )1)((i ng )0)))	;; ing
("sheeting"	nil	(((sh ii t^ )1)((i ng )0)))	;; ing
("sheffields"	nil	(((sh e) 1) ((f ii l d z) 0)))	;; unique
("shellacking"	nil	(((sh a )1)((l a k )0)((i ng )0)))	;; ing
("shelleys"	nil	(((sh a) 1) ((l ii z) 0)))	;; unique
("shelling"	nil	(((sh a l )1)((i ng )0)))	;; ing
("sheltering"	nil	(((sh a l )1)((t @ r )0)((i ng )0)))	;; ing
("shelving"	nil	(((sh a l v )1)((i ng )0)))	;; ing
("shepards"	nil	(((sh e) 1) ((p @ d z) 0)))	;; unique
("shepherding"	nil	(((sh e )1)((p @ d )0)((i ng )0)))	;; ing
("shergold"	nil	(((sh @@r) 1) ((g o l d) 0)))	;; oul
("sherlocks"	nil	(((sh @@r) 1) ((l o k s) 0)))	;; unique
("shewing"	nil	(((sh ou )1)((i ng )0)))	;; ing
("shielding"	nil	(((sh ii l d )1)((i ng )0)))	;; ing
("shifting"	nil	(((sh i f t )1)((i ng )0)))	;; ing
("shilling"	nil	(((sh i )1)((l i ng )0)))	;; ing
("shillyshallying"	nil	(((sh i )1)((l iy )0)((sh a )1)((l iy )0)((i ng )0)))	;; ing
("shimmering"	nil	(((sh i )1)((m @ r )0)((i ng )0)))	;; ing
("shimmying"	nil	(((sh i )1)((m iy )0)((i ng )0)))	;; ing
("shingling"	nil	(((sh i ng )1)((g l! )0)((i ng )0)))	;; ing
("shining"	nil	(((sh ai n )1)((i ng )0)))	;; ing
("shinning"	nil	(((sh i n )1)((i ng )0)))	;; ing
("ship-building"	nil	(((sh i p )1)((b i l d )1)((i ng )0)))	;; ing
("shipbuilding"	nil	(((sh i p )1)((b i l d )1)((i ng )0)))	;; ing
("shipjacking"	nil	(((sh i p )1)((jh a k )1)((i ng )0)))	;; ing
("shipleys"	nil	(((sh i) 1) ((p l ii z) 0)))	;; unique
("shipowning"	nil	(((sh i p )1)((ou n )1)((i ng )0)))	;; ing
("shipping"	nil	(((sh i p )1)((i ng )0)))	;; ing
("shiprepairing"	nil	(((sh i p )1)((r i )0)((p ir r )1)((i ng )0)))	;; ing
("shipwrecking"	nil	(((sh i p )1)((r e k )1)((i ng )0)))	;; ing
("shirking"	nil	(((sh @@r k )1)((i ng )0)))	;; ing
("shirleys"	nil	(((sh @@r) 1) ((l ii z) 0)))	;; unique
("shirtmaking"	nil	(((sh @@r t )1)((m ei k )1)((i ng )0)))	;; ing
("shitting"	nil	(((sh i t^ )1)((i ng )0)))	;; ing
("shivering"	nil	(((sh i )1)((v @ r )0)((i ng )0)))	;; ing
("shoal"	nil	(((sh o l) 1)))	;; oul
("shoaled"	nil	(((sh o l d) 1)))	;; oul
("shoaling"	nil	(((sh o l) 1) ((i ng) 0)))	;; oul
("shoals"	nil	(((sh o l z) 1)))	;; oul
("shocking"	nil	(((sh o k )1)((i ng )0)))	;; ing
("shoeblacking"	nil	(((sh uu )1)((b l a k )1)((i ng )0)))	;; ing
("shoehorning"	nil	(((sh uu )1)((h oo n )1)((i ng )0)))	;; ing
("shoeing"	nil	(((sh uu )1)((i ng )0)))	;; ing
("shoemaking"	nil	(((sh uu )1)((m ei k )1)((i ng )0)))	;; ing
("shoeshining"	nil	(((sh uu )1)((sh ai n )1)((i ng )0)))	;; ing
("shooing"	nil	(((sh uu )1)((i ng )0)))	;; ing
("shooting"	nil	(((sh uu t^ )1)((i ng )0)))	;; ing
("shopbreaking"	nil	(((sh o p )1)((b r ei k )1)((i ng )0)))	;; ing
("shopkeeping"	nil	(((sh o p )1)((k ii p )1)((i ng )0)))	;; ing
("shoplifting"	nil	(((sh o p )1)((l i f t )1)((i ng )0)))	;; ing
("shopmans"	nil	(((sh o p) 1) ((m @ n z) 0)))	;; unique
("shopping"	nil	(((sh o p )1)((i ng )0)))	;; ing
("shoring"	nil	(((sh oo r )1)((i ng )0)))	;; ing
("shortchanging"	nil	(((sh - oo t )0)((ch ei n jh )1)((i ng )0)))	;; ing
("shortcoming"	nil	(((sh oo t )1)((k uh m )1)((i ng )0)))	;; ing
("shortening"	nil	(((sh oo t )1)((n! )0)((i ng )0)))	;; ing
("shorting"	nil	(((sh oo t^ )1)((i ng )0)))	;; ing
("shortlisting"	nil	(((sh oo t )1)((l i s t )1)((i ng )0)))	;; ing
("shouldering"	nil	(((sh ou l )1)((d @ r )0)((i ng )0)))	;; ing
("shouldn't"	nil	(((sh u d) 1) ((n! t) 0)))	;; contraction
("shouldve"	nil	(((sh u d) 1) ((@ v) 0)))	;; unique
("shouting"	nil	(((sh ow t^ )1)((i ng )0)))	;; ing
("shoveling"	nil	(((sh uh )1)((v l! )0)((i ng )0)))	;; ing
("shovelling"	nil	(((sh uh )1)((v l! )0)((i ng )0)))	;; ing
("shoving"	nil	(((sh uh v )1)((i ng )0)))	;; ing
("showcasing"	nil	(((sh ou )1)((k ei s )1)((i ng )0)))	;; ing
("showering"	nil	(((sh ow @ r )1)((i ng )0)))	;; ing
("showing"	nil	(((sh ou )1)((i ng )0)))	;; ing
("showjumping"	nil	(((sh ou )1)((jh uh m p )1)((i ng )0)))	;; ing
("showstopping"	nil	(((sh ou )1)((s t o p )1)((i ng )0)))	;; ing
("shredding"	nil	(((sh r e d )1)((i ng )0)))	;; ing
("shrieking"	nil	(((sh r ii k )1)((i ng )0)))	;; ing
("shrilling"	nil	(((sh r i l )1)((i ng )0)))	;; ing
("shrinking"	nil	(((sh r i ng k )1)((i ng )0)))	;; ing
("shrinkwrapping"	nil	(((sh r i ng k )1)((r a p )1)((i ng )0)))	;; ing
("shriveling"	nil	(((sh r i )1)((v l! )0)((i ng )0)))	;; ing
("shrivelling"	nil	(((sh r i )1)((v l! )0)((i ng )0)))	;; ing
("shriving"	nil	(((sh r ai v )1)((i ng )0)))	;; ing
("shrouding"	nil	(((sh r ow d )1)((i ng )0)))	;; ing
("shrugging"	nil	(((sh r uh g )1)((i ng )0)))	;; ing
("shuddering"	nil	(((sh uh )1)((d @ r )0)((i ng )0)))	;; ing
("shuffling"	nil	(((sh uh )1)((f l! )0)((i ng )0)))	;; ing
("shunning"	nil	(((sh uh n )1)((i ng )0)))	;; ing
("shunting"	nil	(((sh uh n t )1)((i ng )0)))	;; ing
("shuttering"	nil	(((sh uh t^ )1)((@ r )0)((i ng )0)))	;; ing
("shutting"	nil	(((sh uh t^ )1)((i ng )0)))	;; ing
("shuttling"	nil	(((sh uh )1)((t l! )0)((i ng )0)))	;; ing
("shying"	nil	(((sh ai )1)((i ng )0)))	;; ing
("siberias"	nil	(((s ai) 0) ((b ir) 1) ((r ii @ z) 0)))	;; unique
("sibilating"	nil	(((s i )1)((b @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("sibling"	nil	(((s i b )1)((l i ng )0)))	;; ing
("sickening"	nil	(((s i k )1)((@ n )0)((i ng )0)))	;; ing
("sicking"	nil	(((s i k )1)((i ng )0)))	;; ing
("side-splitting"	nil	(((s ai d )1)((s p l i t^ )1)((i ng )0)))	;; ing
("sidelining"	nil	(((s ai d )1)((l ai n )1)((i ng )0)))	;; ing
("sidelooking"	nil	(((s ai d )1)((l u k )1)((i ng )0)))	;; ing
("siders"	nil	(((s ai d) 1) ((@ z) 0)))	;; unique
("sidestepping"	nil	(((s ai d )1)((s t e p )1)((i ng )0)))	;; ing
("sideswiping"	nil	(((s ai d )1)((s w ai p )1)((i ng )0)))	;; ing
("sidetracking"	nil	(((s ai d )1)((t r a k )1)((i ng )0)))	;; ing
("siding"	nil	(((s ai d )1)((i ng )0)))	;; ing
("sidling"	nil	(((s ai )1)((d l! )0)((i ng )0)))	;; ing
("siegels"	nil	(((s ii) 1) ((g l! z) 0)))	;; unique
("siegmunds"	nil	(((s ii g) 1) ((m u n d z) 0)))	;; unique
("sieving"	nil	(((s i v )1)((i ng )0)))	;; ing
("sifting"	nil	(((s i f t )1)((i ng )0)))	;; ing
("sighing"	nil	(((s ai )1)((i ng )0)))	;; ing
("sight-seeing"	nil	(((s ai t )1)((s ii )1)((i ng )0)))	;; ing
("sighting"	nil	(((s ai t^ )1)((i ng )0)))	;; ing
("sightseeing"	nil	(((s ai t )1)((s ii )1)((i ng )0)))	;; ing
("signaling"	nil	(((s i g )1)((n l! )0)((i ng )0)))	;; ing
("signalling"	nil	(((s i g )1)((n l! )0)((i ng )0)))	;; ing
("signifying"	nil	(((s i g )1)((n @ )0)((f ai )1)((i ng )0)))	;; ing
("signing"	nil	(((s ai n )1)((i ng )0)))	;; ing
("signposting"	nil	(((s ai n )1)((p ou s t )1)((i ng )0)))	;; ing
("silass"	nil	(((s ai) 1) ((l @ s) 0) ((@ z) 0)))	;; unique
("silencing"	nil	(((s ai )1)((l @ n s )0)((i ng )0)))	;; ing
("silhouetting"	nil	(((s i )1)((l uw )0)((e t^ )1)((i ng )0)))	;; ing
("silkweaving"	nil	(((s i l k )1)((w ii v )1)((i ng )0)))	;; ing
("silting"	nil	(((s i l t )1)((i ng )0)))	;; ing
("silver-plating"	nil	(((s i l )1)((v @ )0)((p l ei t^ )1)((i ng )0)))	;; ing
("silvering"	nil	(((s i l )1)((v @ r )0)((i ng )0)))	;; ing
("silverlining"	nil	(((s i l )1)((v @ )0)((l ai n )1)((i ng )0)))	;; ing
("silversmithing"	nil	(((s i l )1)((v @ )0)((s m i th )1)((i ng )0)))	;; ing
("simmering"	nil	(((s i )1)((m @ r )0)((i ng )0)))	;; ing
("simpering"	nil	(((s i m )1)((p @ r )0)((i ng )0)))	;; ing
("simplifying"	nil	(((s i m )1)((p l @ )0)((f ai )1)((i ng )0)))	;; ing
("simss"	nil	(((s i m z) 1) ((@ z) 0)))	;; unique
("simulating"	nil	(((s i )1)((m y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("simulcasting"	nil	(((s i )1)((m l! )0)((k aa s t )1)((i ng )0)))	;; ing
("simvastatin"	nil	(((s i m) 0) ((v a) 1) ((s t @) 0) ((t i n) 2)))	;; unique
("sinemet"	nil	(((s i) 1) ((n @) 0) ((m e t) 1)))	;; unique
("singapores"	nil	(((s i ng) 1) ((@) 0) ((p oo z) 1)))	;; unique
("singeing"	nil	(((s i n jh )1)((i ng )0)))	;; ing
("singing"	nil	(((s i ng )1)((i ng )0)))	;; ing
("singlespacing"	nil	(((s i ng )1)((g l! )0)((s p ei s )1)((i ng )0)))	;; ing
("singletasking"	nil	(((s i ng )1)((g l! )0)((t aa s k )1)((i ng )0)))	;; ing
("singling"	nil	(((s i ng )1)((g l! )0)((i ng )0)))	;; ing
("sinister-looking"	nil	(((s i )1)((n i )0)((s t @ )0)((l u k )1)((i ng )0)))	;; ing
("sinkhole"	nil	(((s i ng k) 1) ((h o l) 0)))	;; oul
("sinkholes"	nil	(((s i ng k) 1) ((h o l z) 0)))	;; oul
("sinking"	nil	(((s i ng k )1)((i ng )0)))	;; ing
("sinning"	nil	(((s i n )1)((i ng )0)))	;; ing
("siphoning"	nil	(((s ai )1)((f n! )0)((i ng )0)))	;; ing
("sipping"	nil	(((s i p )1)((i ng )0)))	;; ing
("siring"	nil	(((s ai @ r )1)((i ng )0)))	;; ing
("siting"	nil	(((s ai t^ )1)((i ng )0)))	;; ing
("sitting"	nil	(((s i t^ )1)((i ng )0)))	;; ing
("situating"	nil	(((s i )1)((ch uw )0)((ei t^ )1)((i ng )0)))	;; ing
("six-year-old"	nil	(((s i k s) 1) ((y ir r) 0) ((o l d) 1)))	;; oul
("six-year-olds"	nil	(((s i k s) 1) ((y ir r) 0) ((o l d z) 1)))	;; oul
("sixfold"	nil	(((s i k s) 1) ((f o l d) 0)))	;; oul
("sizing"	nil	(((s ai z )1)((i ng )0)))	;; ing
("sizzling"	nil	(((s i )1)((z l! )0)((i ng )0)))	;; ing
("skateboarding"	nil	(((s k ei t )1)((b oo d )1)((i ng )0)))	;; ing
("skating"	nil	(((s k ei t^ )1)((i ng )0)))	;; ing
("skedaddling"	nil	(((s k i )0)((d a )1)((d l! )0)((i ng )0)))	;; ing
("sketching"	nil	(((s k e ch )1)((i ng )0)))	;; ing
("skewering"	nil	(((s k y uu @ r )1)((i ng )0)))	;; ing
("skewing"	nil	(((s k y uu )1)((i ng )0)))	;; ing
("skidding"	nil	(((s k i d )1)((i ng )0)))	;; ing
("skiing"	nil	(((s k ii )1)((i ng )0)))	;; ing
("skimming"	nil	(((s k i m )1)((i ng )0)))	;; ing
("skimping"	nil	(((s k i m p )1)((i ng )0)))	;; ing
("skindiving"	nil	(((s k i n )1)((d ai v )1)((i ng )0)))	;; ing
("skinning"	nil	(((s k i n )1)((i ng )0)))	;; ing
("skippering"	nil	(((s k i )1)((p @ r )0)((i ng )0)))	;; ing
("skipping"	nil	(((s k i p )1)((i ng )0)))	;; ing
("skirling"	nil	(((s k @@r l )1)((i ng )0)))	;; ing
("skirmishing"	nil	(((s k @@r )1)((m i sh )0)((i ng )0)))	;; ing
("skirting"	nil	(((s k @@r t^ )1)((i ng )0)))	;; ing
("skittering"	nil	(((s k i )1)((t^ @ r )0)((i ng )0)))	;; ing
("skiving"	nil	(((s k ai v )1)((i ng )0)))	;; ing
("skivvying"	nil	(((s k i )1)((v iy )0)((i ng )0)))	;; ing
("skulking"	nil	(((s k o l k )1)((i ng )0)))	;; ing
("skyjacking"	nil	(((s k ai )1)((jh a k )1)((i ng )0)))	;; ing
("skype"	nil	(((s k ai p) 1)))	;; unique
("skyrocketing"	nil	(((s k ai )1)((r o )1)((k @ t^ )0)((i ng )0)))	;; ing
("skys"	nil	(((s k ai z) 1)))	;; unique
("skyscraping"	nil	(((s k ai )1)((s k r ei p )1)((i ng )0)))	;; ing
("skywriting"	nil	(((s k ai )1)((r ai t^ )1)((i ng )0)))	;; ing
("slackening"	nil	(((s l a k )1)((@ n )0)((i ng )0)))	;; ing
("slacking"	nil	(((s l a k )1)((i ng )0)))	;; ing
("slagging"	nil	(((s l a g )1)((i ng )0)))	;; ing
("slaking"	nil	(((s l ei k )1)((i ng )0)))	;; ing
("slaloming"	nil	(((s l aa )1)((l @ m )0)((i ng )0)))	;; ing
("slamming"	nil	(((s l a m )1)((i ng )0)))	;; ing
("slandering"	nil	(((s l aa n )1)((d @ r )0)((i ng )0)))	;; ing
("slanging"	nil	(((s l a ng )1)((i ng )0)))	;; ing
("slanting"	nil	(((s l aa n t )1)((i ng )0)))	;; ing
("slapping"	nil	(((s l a p )1)((i ng )0)))	;; ing
("slashing"	nil	(((s l a sh )1)((i ng )0)))	;; ing
("slating"	nil	(((s l ei t^ )1)((i ng )0)))	;; ing
("slaughtering"	nil	(((s l oo )1)((t^ @ r )0)((i ng )0)))	;; ing
("slave-holders"	nil	(((s l ei v) 1) ((h o l d) 1) ((@ z) 0)))	;; oul
("slaveholder"	nil	(((s l ei v) 1) ((h o l d) 1) ((@) 0)))	;; oul
("slaveholders"	nil	(((s l ei v) 1) ((h o l d) 1) ((@ z) 0)))	;; oul
("slavering"	nil	(((s l a )1)((v @ r )0)((i ng )0)))	;; ing
("slaving"	nil	(((s l ei v )1)((i ng )0)))	;; ing
("slaying"	nil	(((s l ei )1)((i ng )0)))	;; ing
("sledding"	nil	(((s l e d )1)((i ng )0)))	;; ing
("sledging"	nil	(((s l e jh )1)((i ng )0)))	;; ing
("sleekening"	nil	(((s l ii k )1)((@ n )0)((i ng )0)))	;; ing
("sleeking"	nil	(((s l ii k )1)((i ng )0)))	;; ing
("sleep-walking"	nil	(((s l ii p )1)((w oo k )1)((i ng )0)))	;; ing
("sleeping"	nil	(((s l ii p )1)((i ng )0)))	;; ing
("sleepwalking"	nil	(((s l ii p )1)((w oo k )1)((i ng )0)))	;; ing
("sleeting"	nil	(((s l ii t^ )1)((i ng )0)))	;; ing
("sleighing"	nil	(((s l ei )1)((i ng )0)))	;; ing
("slendering"	nil	(((s l e n )1)((d @ r )0)((i ng )0)))	;; ing
("slenderising"	nil	(((s l e n )1)((d @ r )0)((ai z )1)((i ng )0)))	;; ing
("slenderizing"	nil	(((s l e n )1)((d @ r )0)((ai z )1)((i ng )0)))	;; ing
("sleuthing"	nil	(((s l uu th )1)((i ng )0)))	;; ing
("slewing"	nil	(((s l uu )1)((i ng )0)))	;; ing
("slicing"	nil	(((s l ai s )1)((i ng )0)))	;; ing
("slicking"	nil	(((s l i k )1)((i ng )0)))	;; ing
("sliding"	nil	(((s l ai d )1)((i ng )0)))	;; ing
("slighting"	nil	(((s l ai t^ )1)((i ng )0)))	;; ing
("sliming"	nil	(((s l ai m )1)((i ng )0)))	;; ing
("slimming"	nil	(((s l i m )1)((i ng )0)))	;; ing
("slinging"	nil	(((s l i ng )1)((i ng )0)))	;; ing
("slinking"	nil	(((s l i ng k )1)((i ng )0)))	;; ing
("slipping"	nil	(((s l i p )1)((i ng )0)))	;; ing
("slithering"	nil	(((s l i )1)((dh @ r )0)((i ng )0)))	;; ing
("slitting"	nil	(((s l i t^ )1)((i ng )0)))	;; ing
("slobbering"	nil	(((s l o )1)((b @ r )0)((i ng )0)))	;; ing
("slobbing"	nil	(((s l o b )1)((i ng )0)))	;; ing
("sloganeering"	nil	(((s l ou )1)((g @ n )0)((ir r )1)((i ng )0)))	;; ing
("sloganising"	nil	(((s l ou )1)((g @ n )0)((ai z )1)((i ng )0)))	;; ing
("sloganizing"	nil	(((s l ou )1)((g @ n )0)((ai z )1)((i ng )0)))	;; ing
("slogging"	nil	(((s l o g )1)((i ng )0)))	;; ing
("sloping"	nil	(((s l ou p )1)((i ng )0)))	;; ing
("slopping"	nil	(((s l o p )1)((i ng )0)))	;; ing
("sloshing"	nil	(((s l o sh )1)((i ng )0)))	;; ing
("slotting"	nil	(((s l o t^ )1)((i ng )0)))	;; ing
("slouching"	nil	(((s l ow ch )1)((i ng )0)))	;; ing
("sloughing"	nil	(((s l uh f )1)((i ng )0)))	;; ing
("slovenias"	nil	(((s l @) 0) ((v ii) 1) ((n ii @ z) 0)))	;; unique
("slow-burning"	nil	(((s l ou )1)((b @@r n )1)((i ng )0)))	;; ing
("slow-moving"	nil	(((s l ou )1)((m uu v )1)((i ng )0)))	;; ing
("slow-running"	nil	(((s l ou )1)((r uh n )1)((i ng )0)))	;; ing
("slowing"	nil	(((s l ou )1)((i ng )0)))	;; ing
("slugging"	nil	(((s l uh g )1)((i ng )0)))	;; ing
("sluicing"	nil	(((s l uu s )1)((i ng )0)))	;; ing
("slumbering"	nil	(((s l uh m )1)((b @ r )0)((i ng )0)))	;; ing
("slumming"	nil	(((s l uh m )1)((i ng )0)))	;; ing
("slumping"	nil	(((s l uh m p )1)((i ng )0)))	;; ing
("slurping"	nil	(((s l @@r p )1)((i ng )0)))	;; ing
("slurring"	nil	(((s l @@r r )1)((i ng )0)))	;; ing
("smacking"	nil	(((s m a k )1)((i ng )0)))	;; ing
("smallholder"	nil	(((s m oo l) 1) ((h o l d) 1) ((@) 0)))	;; oul
("smallholders"	nil	(((s m oo l) 1) ((h o l d) 1) ((@ z) 0)))	;; oul
("smallholding"	nil	(((s m oo l) 1) ((h o l d) 1) ((i ng) 0)))	;; oul
("smallholdings"	nil	(((s m oo l) 1) ((h o l d) 1) ((i ng z) 0)))	;; oul
("smartening"	nil	(((s m aa t )1)((n! )0)((i ng )0)))	;; ing
("smarting"	nil	(((s m aa t^ )1)((i ng )0)))	;; ing
("smashing"	nil	(((s m a sh )1)((i ng )0)))	;; ing
("smattering"	nil	(((s m a )1)((t^ @ r )0)((i ng )0)))	;; ing
("smearing"	nil	(((s m ir r )1)((i ng )0)))	;; ing
("smelling"	nil	(((s m a l )1)((i ng )0)))	;; ing
("smelting"	nil	(((s m a l t )1)((i ng )0)))	;; ing
("smiling"	nil	(((s m ai l )1)((i ng )0)))	;; ing
("smirching"	nil	(((s m @@r ch )1)((i ng )0)))	;; ing
("smirking"	nil	(((s m @@r k )1)((i ng )0)))	;; ing
("smithsonians"	nil	(((s m i th) 0) ((s ou n) 1) ((ii @ n z) 0)))	;; unique
("smiting"	nil	(((s m ai t^ )1)((i ng )0)))	;; ing
("smocking"	nil	(((s m o k )1)((i ng )0)))	;; ing
("smoking"	nil	(((s m ou k )1)((i ng )0)))	;; ing
("smolder"	nil	(((s m o l) 1) ((d @) 0)))	;; oul
("smoldered"	nil	(((s m o l) 1) ((d @ d) 0)))	;; oul
("smoldering"	nil	(((s m o l) 1) ((d @ r) 0) ((i ng) 0)))	;; oul
("smolders"	nil	(((s m o l) 1) ((d @ z) 0)))	;; oul
("smooching"	nil	(((s m uu ch )1)((i ng )0)))	;; ing
("smooth-flowing"	nil	(((s m uu dh )1)((f l ou )1)((i ng )0)))	;; ing
("smoothening"	nil	(((s m uu dh )1)((@ n )0)((i ng )0)))	;; ing
("smoothing"	nil	(((s m uu dh )1)((i ng )0)))	;; ing
("smothering"	nil	(((s m uh )1)((dh @ r )0)((i ng )0)))	;; ing
("smoulder"	nil	(((s m o l) 1) ((d @) 0)))	;; oul
("smouldered"	nil	(((s m o l) 1) ((d @ d) 0)))	;; oul
("smouldering"	nil	(((s m o l) 1) ((d @ r) 0) ((i ng) 0)))	;; oul
("smoulders"	nil	(((s m o l) 1) ((d @ z) 0)))	;; oul
("smudging"	nil	(((s m uh jh )1)((i ng )0)))	;; ing
("smuggling"	nil	(((s m uh )1)((g l! )0)((i ng )0)))	;; ing
("snacking"	nil	(((s n a k )1)((i ng )0)))	;; ing
("snaffling"	nil	(((s n a )1)((f l! )0)((i ng )0)))	;; ing
("snagging"	nil	(((s n a g )1)((i ng )0)))	;; ing
("snaking"	nil	(((s n ei k )1)((i ng )0)))	;; ing
("snapping"	nil	(((s n a p )1)((i ng )0)))	;; ing
("snapshotting"	nil	(((s n a p )1)((sh o t^ )1)((i ng )0)))	;; ing
("snaring"	nil	(((s n ir r )1)((i ng )0)))	;; ing
("snarling"	nil	(((s n aa l )1)((i ng )0)))	;; ing
("snatching"	nil	(((s n a ch )1)((i ng )0)))	;; ing
("sneaking"	nil	(((s n ii k )1)((i ng )0)))	;; ing
("sneering"	nil	(((s n ir r )1)((i ng )0)))	;; ing
("sneezing"	nil	(((s n ii z )1)((i ng )0)))	;; ing
("snelling"	nil	(((s n a )1)((l i ng )0)))	;; ing
("snickering"	nil	(((s n i )1)((k @ r )0)((i ng )0)))	;; ing
("sniffing"	nil	(((s n i f )1)((i ng )0)))	;; ing
("sniffling"	nil	(((s n i )1)((f l! )0)((i ng )0)))	;; ing
("sniggering"	nil	(((s n i )1)((g @ r )0)((i ng )0)))	;; ing
("sniping"	nil	(((s n ai p )1)((i ng )0)))	;; ing
("snipping"	nil	(((s n i p )1)((i ng )0)))	;; ing
("snitching"	nil	(((s n i ch )1)((i ng )0)))	;; ing
("sniveling"	nil	(((s n i )1)((v l! )0)((i ng )0)))	;; ing
("snivelling"	nil	(((s n i )1)((v l! )0)((i ng )0)))	;; ing
("snogging"	nil	(((s n o g )1)((i ng )0)))	;; ing
("snookering"	nil	(((s n uu )1)((k @ r )0)((i ng )0)))	;; ing
("snooping"	nil	(((s n uu p )1)((i ng )0)))	;; ing
("snoozing"	nil	(((s n uu z )1)((i ng )0)))	;; ing
("snoring"	nil	(((s n oo r )1)((i ng )0)))	;; ing
("snorkeling"	nil	(((s n oo )1)((k l! )0)((i ng )0)))	;; ing
("snorkelling"	nil	(((s n oo )1)((k l! )0)((i ng )0)))	;; ing
("snorting"	nil	(((s n oo t^ )1)((i ng )0)))	;; ing
("snowballing"	nil	(((s n ou )1)((b oo l )1)((i ng )0)))	;; ing
("snowboarding"	nil	(((s n ou )1)((b oo d )1)((i ng )0)))	;; ing
("snowing"	nil	(((s n ou )1)((i ng )0)))	;; ing
("snowploughing"	nil	(((s n ou )1)((p l ow )1)((i ng )0)))	;; ing
("snowplowing"	nil	(((s n ou )1)((p l ow )1)((i ng )0)))	;; ing
("snubbing"	nil	(((s n uh b )1)((i ng )0)))	;; ing
("snuffing"	nil	(((s n uh f )1)((i ng )0)))	;; ing
("snuffling"	nil	(((s n uh )1)((f l! )0)((i ng )0)))	;; ing
("snuggling"	nil	(((s n uh )1)((g l! )0)((i ng )0)))	;; ing
("snyders"	nil	(((s n ai) 1) ((d @ z) 0)))	;; unique
("soaking"	nil	(((s ou k )1)((i ng )0)))	;; ing
("soamess"	nil	(((s ou m z) 1) ((@ z) 0)))	;; unique
("soap-making"	nil	(((s ou p )1)((m ei k )1)((i ng )0)))	;; ing
("soaping"	nil	(((s ou p )1)((i ng )0)))	;; ing
("soaring"	nil	(((s oo r )1)((i ng )0)))	;; ing
("sobbing"	nil	(((s o b )1)((i ng )0)))	;; ing
("sobering"	nil	(((s ou )1)((b @ r )0)((i ng )0)))	;; ing
("socialising"	nil	(((s ou )1)((sh l! )0)((ai z )1)((i ng )0)))	;; ing
("socializing"	nil	(((s ou )1)((sh l! )0)((ai z )1)((i ng )0)))	;; ing
("societys"	nil	(((s @) 0) ((s ai @) 1) ((t^ ii z) 0)))	;; unique
("socketing"	nil	(((s o )1)((k @ t^ )0)((i ng )0)))	;; ing
("socking"	nil	(((s o k )1)((i ng )0)))	;; ing
("sodding"	nil	(((s o d )1)((i ng )0)))	;; ing
("sodomising"	nil	(((s o )1)((d @ m )0)((ai z )1)((i ng )0)))	;; ing
("sodomizing"	nil	(((s o )1)((d @ m )0)((ai z )1)((i ng )0)))	;; ing
("sofias"	nil	(((s ou) 0) ((f ii @ z) 1)))	;; unique
("softening"	nil	(((s o f )1)((n! )0)((i ng )0)))	;; ing
("softsoaping"	nil	(((s o f t )1)((s ou p )1)((i ng )0)))	;; ing
("sohos"	nil	(((s ou) 1) ((h ou z) 0)))	;; unique
("soiling"	nil	(((s oi l )1)((i ng )0)))	;; ing
("sola"	nil	(((s o) 1) ((l @) 0)))	;; oul
("solano"	nil	(((s o) 0) ((l aa) 1) ((n ou) 0)))	;; oul
("solar"	nil	(((s o) 1) ((l @) 0)))	;; oul
("solarisation"	nil	(((s o) 1) ((l @ r) 0) ((i z) 0) ((ei) 1) ((sh n!) 0)))	;; oul
("solarise"	nil	(((s o) 1) ((l @ r) 0) ((ai z) 0)))	;; oul
("solarised"	nil	(((s o) 1) ((l @ r) 0) ((ai z d) 0)))	;; oul
("solarises"	nil	(((s o) 1) ((l @ r) 0) ((ai z) 1) ((@ z) 0)))	;; oul
("solarising"	nil	(((s o) 1) ((l @ r) 0) ((ai z) 1) ((i ng) 0)))	;; oul
("solarization"	nil	(((s o) 1) ((l @ r) 0) ((i z) 0) ((ei) 1) ((sh n!) 0)))	;; oul
("solarize"	nil	(((s o) 1) ((l @ r) 0) ((ai z) 0)))	;; oul
("solarized"	nil	(((s o) 1) ((l @ r) 0) ((ai z d) 0)))	;; oul
("solarizes"	nil	(((s o) 1) ((l @ r) 0) ((ai z) 1) ((@ z) 0)))	;; oul
("solarizing"	nil	(((s o) 1) ((l @ r) 0) ((ai z) 1) ((i ng) 0)))	;; oul
("solars"	nil	(((s o) 1) ((l @ z) 0)))	;; unique
("sold"	nil	(((s o l d) 1)))	;; oul
("solder"	nil	(((s o l) 1) ((d @) 0)))	;; oul
("soldered"	nil	(((s o l) 1) ((d @ d) 0)))	;; oul
("soldering"	nil	(((s o l) 1) ((d @ r) 0) ((i ng) 0)))	;; oul
("solders"	nil	(((s o l) 1) ((d @ z) 0)))	;; oul
("soldier"	nil	(((s o l) 1) ((jh @) 0)))	;; oul
("soldiered"	nil	(((s o l) 1) ((jh @ d) 0)))	;; oul
("soldiering"	nil	(((s o l) 1) ((jh @ r) 0) ((i ng) 0)))	;; oul
("soldierliness"	nil	(((s o l) 1) ((jh @) 0) ((l ii) 0) ((n @ s) 0)))	;; oul
("soldierly"	nil	(((s o l) 1) ((jh @) 0) ((l ii) 0)))	;; oul
("soldiers"	nil	(((s o l) 1) ((jh @ z) 0)))	;; oul
("soldiery"	nil	(((s o l) 1) ((jh @ r) 0) ((ii) 0)))	;; oul
("sole"	nil	(((s o l) 1)))	;; oul
("soled"	nil	(((s o l d) 1)))	;; oul
("solely"	nil	(((s o l) 1) ((l ii) 0)))	;; oul
("solemnising"	nil	(((s o )1)((l @ m )0)((n ai z )1)((i ng )0)))	;; ing
("solemnizing"	nil	(((s o )1)((l @ m )0)((n ai z )1)((i ng )0)))	;; ing
("solenoid"	nil	(((s o) 1) ((l @) 0) ((n oi d) 0)))	;; oul
("solenoids"	nil	(((s o) 1) ((l @) 0) ((n oi d z) 0)))	;; oul
("solent"	nil	(((s o) 1) ((l @ n t) 0)))	;; oul
("soles"	nil	(((s o l z) 1)))	;; oul
("soliciting"	nil	(((s @ )0)((l i )1)((s @ t^ )0)((i ng )0)))	;; ing
("solid-looking"	nil	(((s o )1)((l @ d )0)((l u k )1)((i ng )0)))	;; ing
("solidaritys"	nil	(((s o) 1) ((l @ d) 0) ((a) 1) ((r @) 0) ((t^ ii z) 0)))	;; unique
("solidifying"	nil	(((s @ )0)((l i d )1)((@ )0)((f ai )1)((i ng )0)))	;; ing
("solihull"	nil	(((s o) 1) ((l i) 0) ((h uh l) 1)))	;; oul
("soliloquising"	nil	(((s @ )0)((l i )1)((l @ )0)((k w ai z )1)((i ng )0)))	;; ing
("soliloquizing"	nil	(((s @ )0)((l i )1)((l @ )0)((k w ai z )1)((i ng )0)))	;; ing
("soling"	nil	(((s o l) 1) ((i ng) 0)))	;; oul
("solo"	nil	(((s o) 1) ((l ou) 0)))	;; oul
("soloist"	nil	(((s o) 1) ((l ou) 0) ((i s t) 0)))	;; oul
("soloists"	nil	(((s o) 1) ((l ou) 0) ((i s t s) 0)))	;; oul
("solon"	nil	(((s o) 1) ((l o n) 0)))	;; oul
("solos"	nil	(((s o) 1) ((l ou z) 0)))	;; oul
("solving"	nil	(((s o l v )1)((i ng )0)))	;; ing
("somebodyll"	nil	(((s uh m) 1) ((b @) 0) ((d ii @ l) 0)))	;; unique
("somebodys"	nil	(((s uh m) 1) ((b @) 0) ((d ii z) 0)))	;; unique
("someonell"	nil	(((s uh m) 1) ((w uh n) 1) ((l!) 0)))	;; unique
("someones"	nil	(((s uh m) 1) ((w uh n z) 0)))	;; unique
("somersaulting"	nil	(((s uh )1)((m @ )0)((s oo l t )1)((i ng )0)))	;; ing
("something"	nil	(((s uh m )1)((th i ng )0)))	;; ing
("somnambulating"	nil	(((s o m )0)((n a m )1)((b y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("song-singing"	nil	(((s o ng )1)((s i ng )1)((i ng )0)))	;; ing
("sonys"	nil	(((s ou) 1) ((n ii z) 0)))	;; unique
("soothing"	nil	(((s uu dh )1)((i ng )0)))	;; ing
("soothsaying"	nil	(((s uu th )1)((s ei )1)((i ng )0)))	;; ing
("sopping"	nil	(((s o p )1)((i ng )0)))	;; ing
("sorensens"	nil	(((s o) 1) ((r @ n) 0) ((s n! z) 0)))	;; unique
("sorrowing"	nil	(((s o )1)((r ou )0)((i ng )0)))	;; ing
("sortieing"	nil	(((s oo )1)((t^ iy )0)((i ng )0)))	;; ing
("sorting"	nil	(((s oo t^ )1)((i ng )0)))	;; ing
("sothebys"	nil	(((s uh) 1) ((dh @) 0) ((b ii z) 0)))	;; unique
("soul"	nil	(((s o l) 1)))	;; oul
("soul-saving"	nil	(((s o l) 1) ((s ei v) 1) ((i ng) 0)))	;; oul
("soulful"	nil	(((s o l) 1) ((f u l) 0)))	;; oul
("soulfully"	nil	(((s o l) 1) ((f l!) 0) ((ii) 0)))	;; oul
("soulfulness"	nil	(((s o l) 1) ((f u l) 0) ((n @ s) 0)))	;; oul
("soulless"	nil	(((s o l) 1) ((l @ s) 0)))	;; oul
("soullessly"	nil	(((s o l) 1) ((l @ s) 0) ((l ii) 0)))	;; oul
("soullessness"	nil	(((s o l) 1) ((l @ s) 0) ((n @ s) 0)))	;; oul
("soulmate"	nil	(((s o l) 1) ((m ei t) 0)))	;; oul
("soulmates"	nil	(((s o l) 1) ((m ei t s) 0)))	;; oul
("souls"	nil	(((s o l z) 1)))	;; oul
("sounding"	nil	(((s ow n d )1)((i ng )0)))	;; ing
("soundproofing"	nil	(((s ow n d )1)((p r uu f )1)((i ng )0)))	;; ing
("souping"	nil	(((s uu p )1)((i ng )0)))	;; ing
("sourcing"	nil	(((s oo s )1)((i ng )0)))	;; ing
("souring"	nil	(((s ow @ r )1)((i ng )0)))	;; ing
("sousing"	nil	(((s ow s )1)((i ng )0)))	;; ing
("south-facing"	nil	(((s ow th )1)((f ei s )1)((i ng )0)))	;; ing
("southing"	nil	(((s ow th )1)((i ng )0)))	;; ing
("sowing"	nil	(((s ou )1)((i ng )0)))	;; ing
("sozzling"	nil	(((s o )1)((z l! )0)((i ng )0)))	;; ing
("spacewalking"	nil	(((s p ei s )1)((w oo k )1)((i ng )0)))	;; ing
("spacing"	nil	(((s p ei s )1)((i ng )0)))	;; ing
("spading"	nil	(((s p ei d )1)((i ng )0)))	;; ing
("spains"	nil	(((s p ei n z) 1)))	;; unique
("spalding"	nil	(((s p oo l )1)((d i ng )0)))	;; ing
("spamming"	nil	(((s p a m )1)((i ng )0)))	;; ing
("spangling"	nil	(((s p a ng )1)((g l! )0)((i ng )0)))	;; ing
("spanking"	nil	(((s p a ng k )1)((i ng )0)))	;; ing
("spanning"	nil	(((s p a n )1)((i ng )0)))	;; ing
("sparing"	nil	(((s p ir r )1)((i ng )0)))	;; ing
("sparking"	nil	(((s p aa k )1)((i ng )0)))	;; ing
("sparkling"	nil	(((s p aa )1)((k l! )0)((i ng )0)))	;; ing
("sparring"	nil	(((s p aa r )1)((i ng )0)))	;; ing
("spattering"	nil	(((s p a )1)((t^ @ r )0)((i ng )0)))	;; ing
("spatting"	nil	(((s p a t^ )1)((i ng )0)))	;; ing
("spaulding"	nil	(((s p oo l )1)((d i ng )0)))	;; ing
("spawning"	nil	(((s p oo n )1)((i ng )0)))	;; ing
("spaying"	nil	(((s p ei )1)((i ng )0)))	;; ing
("speaking"	nil	(((s p ii k )1)((i ng )0)))	;; ing
("spearheading"	nil	(((s p ii @ )1)((h - e d )0)((i ng )0)))	;; ing
("spearing"	nil	(((s p ir r )1)((i ng )0)))	;; ing
("specialising"	nil	(((s p e )1)((sh l! )0)((ai z )1)((i ng )0)))	;; ing
("specializing"	nil	(((s p e )1)((sh l! )0)((ai z )1)((i ng )0)))	;; ing
("specifying"	nil	(((s p e )1)((s @ )0)((f ai )1)((i ng )0)))	;; ing
("speckling"	nil	(((s p e )1)((k l! )0)((i ng )0)))	;; ing
("spectating"	nil	(((s p e k )0)((t ei t^ )1)((i ng )0)))	;; ing
("speculating"	nil	(((s p e )1)((k y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("speechifying"	nil	(((s p ii ch )1)((i )0)((f ai )1)((i ng )0)))	;; ing
("speechwriting"	nil	(((s p ii ch )1)((r ai t^ )1)((i ng )0)))	;; ing
("speeding"	nil	(((s p ii d )1)((i ng )0)))	;; ing
("speedskating"	nil	(((s p ii d )1)((s k ei t^ )1)((i ng )0)))	;; ing
("spellbinding"	nil	(((s p a l )1)((b - ai n d )0)((i ng )0)))	;; ing
("spellchecking"	nil	(((s p a l )1)((ch e k )1)((i ng )0)))	;; ing
("spelling"	nil	(((s p a )1)((l i ng )0)))	;; ing
("spences"	nil	(((s p e n s) 1) ((@ z) 0)))	;; unique
("spending"	nil	(((s p e n d )1)((i ng )0)))	;; ing
("sperling"	nil	(((s p @@r )1)((l i ng )0)))	;; ing
("spewing"	nil	(((s p y uu )1)((i ng )0)))	;; ing
("spicing"	nil	(((s p ai s )1)((i ng )0)))	;; ing
("spiffing"	nil	(((s p i f )1)((i ng )0)))	;; ing
("spiking"	nil	(((s p ai k )1)((i ng )0)))	;; ing
("spilling"	nil	(((s p i l )1)((i ng )0)))	;; ing
("spindling"	nil	(((s p i n )1)((d l! )0)((i ng )0)))	;; ing
("spinning"	nil	(((s p i n )1)((i ng )0)))	;; ing
("spiraling"	nil	(((s p ai )1)((r @ l )0)((i ng )0)))	;; ing
("spiralling"	nil	(((s p ai )1)((r @ l )0)((i ng )0)))	;; ing
("spiriting"	nil	(((s p i )1)((r @ t^ )0)((i ng )0)))	;; ing
("spironolactone"	nil	(((s p ai) 0) ((r o) 1) ((n @) 0) ((l a k) 1) ((t ou n) 0)))	;; unique
("spirotone"	nil	(((s p ai) 1) ((r @) 0) ((t ou n) 1)))	;; unique
("spiting"	nil	(((s p ai t^ )1)((i ng )0)))	;; ing
("spitting"	nil	(((s p i t^ )1)((i ng )0)))	;; ing
("splashing"	nil	(((s p l a sh )1)((i ng )0)))	;; ing
("splattering"	nil	(((s p l a )1)((t^ @ r )0)((i ng )0)))	;; ing
("splatting"	nil	(((s p l a t^ )1)((i ng )0)))	;; ing
("splaying"	nil	(((s p l ei )1)((i ng )0)))	;; ing
("spleening"	nil	(((s p l ii n )1)((i ng )0)))	;; ing
("splendid-looking"	nil	(((s p l e n )1)((d i d )0)((l u k )1)((i ng )0)))	;; ing
("splicing"	nil	(((s p l ai s )1)((i ng )0)))	;; ing
("splintering"	nil	(((s p l i n t )1)((@ r )0)((i ng )0)))	;; ing
("splinting"	nil	(((s p l i n t )1)((i ng )0)))	;; ing
("splitting"	nil	(((s p l i t^ )1)((i ng )0)))	;; ing
("splodging"	nil	(((s p l o jh )1)((i ng )0)))	;; ing
("spluttering"	nil	(((s p l uh )1)((t^ @ r )0)((i ng )0)))	;; ing
("spoiling"	nil	(((s p oi l )1)((i ng )0)))	;; ing
("spokesmans"	nil	(((s p ou k s) 1) ((m @ n z) 0)))	;; unique
("spoliation"	nil	(((s p o l) 1) ((ii) 0) ((ei) 1) ((sh n!) 0)))	;; oul
("sponging"	nil	(((s p uh n jh )1)((i ng )0)))	;; ing
("sponsoring"	nil	(((s p o n )1)((s @ r )0)((i ng )0)))	;; ing
("spoofing"	nil	(((s p uu f )1)((i ng )0)))	;; ing
("spooking"	nil	(((s p uu k )1)((i ng )0)))	;; ing
("spool"	nil	(((s p u l) 1)))	;; uul
("spooled"	nil	(((s p u l d) 1)))	;; uul
("spooler"	nil	(((s p u l) 1) ((@) 0)))	;; uul
("spoolers"	nil	(((s p u l) 1) ((@ z) 0)))	;; uul
("spooling"	nil	(((s p u l) 1) ((i ng) 0)))	;; uul
("spools"	nil	(((s p u l z) 1)))	;; uul
("spoonfeeding"	nil	(((s p uu n )1)((f ii d )1)((i ng )0)))	;; ing
("spooning"	nil	(((s p uu n )1)((i ng )0)))	;; ing
("sporting"	nil	(((s p oo t^ )1)((i ng )0)))	;; ing
("sportscasting"	nil	(((s p oo t s )1)((k aa s t )1)((i ng )0)))	;; ing
("sportswriting"	nil	(((s p oo t s )1)((r ai t^ )1)((i ng )0)))	;; ing
("spotlighting"	nil	(((s p o t )1)((l - ai t^ )0)((i ng )0)))	;; ing
("spotting"	nil	(((s p o t^ )1)((i ng )0)))	;; ing
("spout-hole"	nil	(((s p ow t) 1) ((h o l) 0)))	;; oul
("spout-holes"	nil	(((s p ow t) 1) ((h o l z) 0)))	;; oul
("spouting"	nil	(((s p ow t^ )1)((i ng )0)))	;; ing
("spraining"	nil	(((s p r ei n )1)((i ng )0)))	;; ing
("sprawling"	nil	(((s p r oo l )1)((i ng )0)))	;; ing
("spraying"	nil	(((s p r ei )1)((i ng )0)))	;; ing
("spraypainting"	nil	(((s p r ei )1)((p ei n t )1)((i ng )0)))	;; ing
("spreading"	nil	(((s p r e d )1)((i ng )0)))	;; ing
("spring-cleaning"	nil	(((s p r i ng )1)((k l ii n )1)((i ng )0)))	;; ing
("springing"	nil	(((s p r i n jh )1)((i ng )0)))	;; ing
("sprinkling"	nil	(((s p r i ng )1)((k l! )0)((i ng )0)))	;; ing
("sprinting"	nil	(((s p r i n t )1)((i ng )0)))	;; ing
("sprouting"	nil	(((s p r ow t^ )1)((i ng )0)))	;; ing
("spruce-looking"	nil	(((s p r uu s )1)((l u k )1)((i ng )0)))	;; ing
("sprucing"	nil	(((s p r uu s )1)((i ng )0)))	;; ing
("spurning"	nil	(((s p @@r n )1)((i ng )0)))	;; ing
("spurring"	nil	(((s p @@r r )1)((i ng )0)))	;; ing
("spurting"	nil	(((s p @@r t^ )1)((i ng )0)))	;; ing
("sputtering"	nil	(((s p uh )1)((t^ @ r )0)((i ng )0)))	;; ing
("spyglasss"	nil	(((s p ai) 1) ((g l aa s) 1) ((@ z) 0)))	;; unique
("spyhole"	nil	(((s p ai) 1) ((h o l) 0)))	;; oul
("spyholes"	nil	(((s p ai) 1) ((h o l z) 0)))	;; oul
("spying"	nil	(((s p ai )1)((i ng )0)))	;; ing
("squabbling"	nil	(((s k w o )1)((b l! )0)((i ng )0)))	;; ing
("squalling"	nil	(((s k w oo l )1)((i ng )0)))	;; ing
("squandering"	nil	(((s k w o n )1)((d @ r )0)((i ng )0)))	;; ing
("square-shouldered"	nil	(((s k w e @) 1) ((sh o l) 1) ((d @ d) 0)))	;; beer-bear, oul
("squaring"	nil	(((s k w ir r )1)((i ng )0)))	;; ing
("squashing"	nil	(((s k w o sh )1)((i ng )0)))	;; ing
("squatting"	nil	(((s k w o t^ )1)((i ng )0)))	;; ing
("squawking"	nil	(((s k w oo k )1)((i ng )0)))	;; ing
("squeaking"	nil	(((s k w ii k )1)((i ng )0)))	;; ing
("squealing"	nil	(((s k w ii l )1)((i ng )0)))	;; ing
("squeegeeing"	nil	(((s k w ii )1)((jh iy )0)((i ng )0)))	;; ing
("squeezing"	nil	(((s k w ii z )1)((i ng )0)))	;; ing
("squelching"	nil	(((s k w a l ch )1)((i ng )0)))	;; ing
("squidging"	nil	(((s k w i jh )1)((i ng )0)))	;; ing
("squiffing"	nil	(((s k w i f )1)((i ng )0)))	;; ing
("squiggling"	nil	(((s k w i )1)((g l! )0)((i ng )0)))	;; ing
("squinting"	nil	(((s k w i n t )1)((i ng )0)))	;; ing
("squiress"	nil	(((s k w ai @ z) 1) ((@ z) 0)))	;; unique
("squirming"	nil	(((s k w @@r m )1)((i ng )0)))	;; ing
("squirreling"	nil	(((s k w i )1)((r @ l )0)((i ng )0)))	;; ing
("squirrelling"	nil	(((s k w i )1)((r @ l )0)((i ng )0)))	;; ing
("squirting"	nil	(((s k w @@r t^ )1)((i ng )0)))	;; ing
("squishing"	nil	(((s k w i sh )1)((i ng )0)))	;; ing
("sris"	nil	(((s r ii z) 1)))	;; unique
("ss"	nil	(((e s) 1) ((@ z) 0)))	;; unique
("stabbing"	nil	(((s t a b )1)((i ng )0)))	;; ing
("stabilising"	nil	(((s t ei )1)((b l! )0)((ai z )1)((i ng )0)))	;; ing
("stabilizing"	nil	(((s t ei )1)((b l! )0)((ai z )1)((i ng )0)))	;; ing
("stabling"	nil	(((s t ei )1)((b l! )0)((i ng )0)))	;; ing
("stacking"	nil	(((s t a k )1)((i ng )0)))	;; ing
("staffing"	nil	(((s t aa f )1)((i ng )0)))	;; ing
("stagecoaching"	nil	(((s t ei jh )1)((k ou ch )1)((i ng )0)))	;; ing
("staggering"	nil	(((s t a )1)((g @ r )0)((i ng )0)))	;; ing
("staging"	nil	(((s t ei jh )1)((i ng )0)))	;; ing
("stagnating"	nil	(((s t a g )0)((n ei t^ )1)((i ng )0)))	;; ing
("staining"	nil	(((s t ei n )1)((i ng )0)))	;; ing
("stakeholder"	nil	(((s t ei k) 1) ((h o l d) 1) ((@) 0)))	;; oul
("stakeholders"	nil	(((s t ei k) 1) ((h o l d) 1) ((@ z) 0)))	;; oul
("staking"	nil	(((s t ei k )1)((i ng )0)))	;; ing
("stalking"	nil	(((s t oo k )1)((i ng )0)))	;; ing
("stalling"	nil	(((s t oo l )1)((i ng )0)))	;; ing
("stallones"	nil	(((s t @) 0) ((l ou n z) 1)))	;; unique
("stamfords"	nil	(((s t a m) 1) ((f @ d z) 0)))	;; unique
("stammering"	nil	(((s t a )1)((m @ r )0)((i ng )0)))	;; ing
("stampeding"	nil	(((s t a m )0)((p ii d )1)((i ng )0)))	;; ing
("stamping"	nil	(((s t a m p )1)((i ng )0)))	;; ing
("stanching"	nil	(((s t aa n ch )1)((i ng )0)))	;; ing
("standardising"	nil	(((s t a n )1)((d @ d )0)((ai z )1)((i ng )0)))	;; ing
("standardizing"	nil	(((s t a n )1)((d @ d )0)((ai z )1)((i ng )0)))	;; ing
("standing"	nil	(((s t a n d )1)((i ng )0)))	;; ing
("stanfords"	nil	(((s t a n) 1) ((f @ d z) 0)))	;; unique
("stanleys"	nil	(((s t a n) 1) ((l ii z) 0)))	;; unique
("stantons"	nil	(((s t a n) 1) ((t @ n z) 0)))	;; unique
("stapling"	nil	(((s t ei )1)((p l! )0)((i ng )0)))	;; ing
("starching"	nil	(((s t aa ch )1)((i ng )0)))	;; ing
("stargazing"	nil	(((s t aa )1)((g ei z )1)((i ng )0)))	;; ing
("staring"	nil	(((s t ir r )1)((i ng )0)))	;; ing
("starling"	nil	(((s t aa )1)((l i ng )0)))	;; ing
("starring"	nil	(((s t aa r )1)((i ng )0)))	;; ing
("starting"	nil	(((s t aa t^ )1)((i ng )0)))	;; ing
("startling"	nil	(((s t aa )1)((t l! )0)((i ng )0)))	;; ing
("starveling"	nil	(((s t aa v )1)((l i ng )0)))	;; ing
("starving"	nil	(((s t aa v )1)((i ng )0)))	;; ing
("starwatching"	nil	(((s t aa )1)((w o ch )1)((i ng )0)))	;; ing
("stashing"	nil	(((s t a sh )1)((i ng )0)))	;; ing
("stating"	nil	(((s t ei t^ )1)((i ng )0)))	;; ing
("stationing"	nil	(((s t ei )1)((sh n! )0)((i ng )0)))	;; ing
("staunching"	nil	(((s t oo n ch )1)((i ng )0)))	;; ing
("stauntons"	nil	(((s t oo n) 1) ((t @ n z) 0)))	;; unique
("staving"	nil	(((s t ei v )1)((i ng )0)))	;; ing
("staying"	nil	(((s t ei )1)((i ng )0)))	;; ing
("steading"	nil	(((s t e )1)((d i ng )0)))	;; ing
("steadying"	nil	(((s t e )1)((d iy )0)((i ng )0)))	;; ing
("stealing"	nil	(((s t ii l )1)((i ng )0)))	;; ing
("steaming"	nil	(((s t ii m )1)((i ng )0)))	;; ing
("steamroll"	nil	(((s t ii m) 1) ((r o l) 0)))	;; oul
("steamrolled"	nil	(((s t ii m) 1) ((r o l d) 0)))	;; oul
("steamroller"	nil	(((s t ii m) 1) ((r o l) 1) ((@) 0)))	;; oul
("steamrollered"	nil	(((s t ii m) 1) ((r o l) 1) ((@ d) 0)))	;; oul
("steamrollering"	nil	(((s t ii m) 1) ((r o l) 1) ((@ r) 0) ((i ng) 0)))	;; oul
("steamrollers"	nil	(((s t ii m) 1) ((r o l) 1) ((@ z) 0)))	;; oul
("steamrolling"	nil	(((s t ii m) 1) ((r o l) 1) ((i ng) 0)))	;; oul
("steamrolls"	nil	(((s t ii m) 1) ((r o l z) 0)))	;; oul
("steeling"	nil	(((s t ii l )1)((i ng )0)))	;; ing
("steelmaking"	nil	(((s t ii l )1)((m ei k )1)((i ng )0)))	;; ing
("steepening"	nil	(((s t ii p )1)((@ n )0)((i ng )0)))	;; ing
("steeping"	nil	(((s t ii p )1)((i ng )0)))	;; ing
("steeplechasing"	nil	(((s t ii )1)((p l! )0)((ch ei s )1)((i ng )0)))	;; ing
("steering"	nil	(((s t ir r )1)((i ng )0)))	;; ing
("steinbergs"	nil	(((s t ai n) 1) ((b @@r g z) 0)))	;; unique
("stemming"	nil	(((s t e m )1)((i ng )0)))	;; ing
("stenciling"	nil	(((s t e n )1)((s l! )0)((i ng )0)))	;; ing
("stencilling"	nil	(((s t e n )1)((s l! )0)((i ng )0)))	;; ing
("stepping"	nil	(((s t e p )1)((i ng )0)))	;; ing
("stereotyping"	nil	(((s t e )1)((r iy @ )0)((t ai p )1)((i ng )0)))	;; ing
("sterilising"	nil	(((s t e )1)((r @ l )0)((ai z )0)((i ng )0)))	;; ing
("sterilizing"	nil	(((s t e )1)((r @ l )0)((ai z )0)((i ng )0)))	;; ing
("sterling"	nil	(((s t @@r )1)((l i ng )0)))	;; ing
("sterlings"	nil	(((s t @@r) 1) ((l i ng z) 0)))	;; unique
("sternbergs"	nil	(((s t @@r n) 1) ((b @@r g z) 0)))	;; unique
("stevedoring"	nil	(((s t ii )1)((v @ )0)((d oo r )1)((i ng )0)))	;; ing
("stewarding"	nil	(((s t y uu @ d )1)((i ng )0)))	;; ing
("stewing"	nil	(((s t y uu )1)((i ng )0)))	;; ing
("sticking"	nil	(((s t i k )1)((i ng )0)))	;; ing
("stiffening"	nil	(((s t i f )1)((n! )0)((i ng )0)))	;; ing
("stifling"	nil	(((s t ai )1)((f l! )0)((i ng )0)))	;; ing
("stigmatizing"	nil	(((s t i g )1)((m @ )0)((t ai z )1)((i ng )0)))	;; ing
("stilettoing"	nil	(((s t i )0)((l e )1)((t^ ou )0)((i ng )0)))	;; ing
("stilling"	nil	(((s t i l )1)((i ng )0)))	;; ing
("stilting"	nil	(((s t i l t )1)((i ng )0)))	;; ing
("stimulating"	nil	(((s t i )1)((m y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("stinging"	nil	(((s t i ng )1)((i ng )0)))	;; ing
("stinking"	nil	(((s t i ng k )1)((i ng )0)))	;; ing
("stinting"	nil	(((s t i n t )1)((i ng )0)))	;; ing
("stippling"	nil	(((s t i )1)((p l! )0)((i ng )0)))	;; ing
("stipulating"	nil	(((s t i )1)((p y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("stirling"	nil	(((s t @@r )1)((l i ng )0)))	;; ing
("stirlings"	nil	(((s t @@r) 1) ((l i ng z) 0)))	;; unique
("stirring"	nil	(((s t @@r r )1)((i ng )0)))	;; ing
("stitching"	nil	(((s t i ch )1)((i ng )0)))	;; ing
("stock-taking"	nil	(((s t o k )1)((t ei k )1)((i ng )0)))	;; ing
("stockbreeding"	nil	(((s t o k )1)((b r ii d )1)((i ng )0)))	;; ing
("stockbroking"	nil	(((s t o k )1)((b r ou k )1)((i ng )0)))	;; ing
("stockholder"	nil	(((s t o k) 1) ((h o l d) 1) ((@) 0)))	;; oul
("stockholders"	nil	(((s t o k) 1) ((h o l d) 1) ((@ z) 0)))	;; oul
("stockholding"	nil	(((s t o k) 1) ((h o l d) 1) ((i ng) 0)))	;; oul
("stockholdings"	nil	(((s t o k) 1) ((h o l d) 1) ((i ng z) 0)))	;; oul
("stocking"	nil	(((s t o )1)((k i ng )0)))	;; ing
("stockpiling"	nil	(((s t o k )1)((p ai l )1)((i ng )0)))	;; ing
("stocktaking"	nil	(((s t o k )1)((t ei k )1)((i ng )0)))	;; ing
("stoking"	nil	(((s t ou k )1)((i ng )0)))	;; ing
("stole"	nil	(((s t o l) 1)))	;; oul
("stolen"	nil	(((s t o l) 1) ((@ n) 0)))	;; oul
("stoles"	nil	(((s t o l z) 1)))	;; oul
("stomaching"	nil	(((s t uh )1)((m @ k )0)((i ng )0)))	;; ing
("stomping"	nil	(((s t o m p )1)((i ng )0)))	;; ing
("stonecutting"	nil	(((s t ou n )1)((k uh t^ )1)((i ng )0)))	;; ing
("stonewalling"	nil	(((s t ou n )0)((w oo l )1)((i ng )0)))	;; ing
("stoning"	nil	(((s t ou n )1)((i ng )0)))	;; ing
("stooging"	nil	(((s t uu jh )1)((i ng )0)))	;; ing
("stool"	nil	(((s t u l) 1)))	;; uul
("stools"	nil	(((s t u l z) 1)))	;; uul
("stooping"	nil	(((s t uu p )1)((i ng )0)))	;; ing
("stoppering"	nil	(((s t o p )1)((@ r )0)((i ng )0)))	;; ing
("stopping"	nil	(((s t o p )1)((i ng )0)))	;; ing
("storekeeping"	nil	(((s t oo )1)((k ii p )1)((i ng )0)))	;; ing
("storing"	nil	(((s t oo r )1)((i ng )0)))	;; ing
("storming"	nil	(((s t oo m )1)((i ng )0)))	;; ing
("story-telling"	nil	(((s t oo )1)((r iy )0)((t a l )1)((i ng )0)))	;; ing
("storyboarding"	nil	(((s t oo )1)((r iy )0)((b oo d )1)((i ng )0)))	;; ing
("storytelling"	nil	(((s t oo )1)((r iy )0)((t a l )1)((i ng )0)))	;; ing
("stoving"	nil	(((s t ou v )1)((i ng )0)))	;; ing
("stowing"	nil	(((s t ou )1)((i ng )0)))	;; ing
("straddling"	nil	(((s t r a )1)((d l! )0)((i ng )0)))	;; ing
("strafing"	nil	(((s t r aa f )1)((i ng )0)))	;; ing
("straggling"	nil	(((s t r a )1)((g l! )0)((i ng )0)))	;; ing
("straightening"	nil	(((s t r ei t )1)((n! )0)((i ng )0)))	;; ing
("straining"	nil	(((s t r ei n )1)((i ng )0)))	;; ing
("stranding"	nil	(((s t r a n d )1)((i ng )0)))	;; ing
("strange-looking"	nil	(((s t r ei n jh )1)((l u k )1)((i ng )0)))	;; ing
("stranglehold"	nil	(((s t r a ng) 1) ((g l!) 0) ((h o l d) 1)))	;; oul
("strangleholds"	nil	(((s t r a ng) 1) ((g l!) 0) ((h o l d z) 1)))	;; oul
("strangling"	nil	(((s t r a ng )1)((g l! )0)((i ng )0)))	;; ing
("strangulating"	nil	(((s t r a ng )1)((g y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("straphanging"	nil	(((s t r a p )1)((h a ng )1)((i ng )0)))	;; ing
("strapping"	nil	(((s t r a p )1)((i ng )0)))	;; ing
("strategys"	nil	(((s t r a) 1) ((t^ @) 0) ((jh ii z) 0)))	;; unique
("stratifying"	nil	(((s t r a )1)((t^ @ )0)((f ai )1)((i ng )0)))	;; ing
("straying"	nil	(((s t r ei )1)((i ng )0)))	;; ing
("streaking"	nil	(((s t r ii k )1)((i ng )0)))	;; ing
("streaming"	nil	(((s t r ii m )1)((i ng )0)))	;; ing
("streamlining"	nil	(((s t r ii m )1)((l ai n )1)((i ng )0)))	;; ing
("street-fighting"	nil	(((s t r ii t )1)((f ai t^ )1)((i ng )0)))	;; ing
("streetwalking"	nil	(((s t r ii t )1)((w oo k )1)((i ng )0)))	;; ing
("strengthening"	nil	(((s t r e ng th )1)((@ n )0)((i ng )0)))	;; ing
("stress-shifting"	nil	(((s t r e s )1)((sh i f t )1)((i ng )0)))	;; ing
("stressing"	nil	(((s t r e s )1)((i ng )0)))	;; ing
("stretching"	nil	(((s t r e ch )1)((i ng )0)))	;; ing
("strewing"	nil	(((s t r uu )1)((i ng )0)))	;; ing
("striding"	nil	(((s t r ai d )1)((i ng )0)))	;; ing
("strikebreaking"	nil	(((s t r ai k )1)((b r ei k )1)((i ng )0)))	;; ing
("striking"	nil	(((s t r ai k )1)((i ng )0)))	;; ing
("string-matching"	nil	(((s t r i ng )1)((m a ch )1)((i ng )0)))	;; ing
("stringing"	nil	(((s t r i ng )1)((i ng )0)))	;; ing
("striping"	nil	(((s t r ai p )1)((i ng )0)))	;; ing
("stripling"	nil	(((s t r i p )1)((l i ng )0)))	;; ing
("stripping"	nil	(((s t r i p )1)((i ng )0)))	;; ing
("stripteasing"	nil	(((s t r i p )1)((t - ii z )0)((i ng )0)))	;; ing
("striving"	nil	(((s t r ai v )1)((i ng )0)))	;; ing
("strobing"	nil	(((s t r ou b )1)((i ng )0)))	;; ing
("stroking"	nil	(((s t r ou k )1)((i ng )0)))	;; ing
("stroll"	nil	(((s t r o l) 1)))	;; oul
("strolled"	nil	(((s t r o l d) 1)))	;; oul
("stroller"	nil	(((s t r o l) 1) ((@) 0)))	;; oul
("strollers"	nil	(((s t r o l) 1) ((@ z) 0)))	;; oul
("strolling"	nil	(((s t r o l) 1) ((i ng) 0)))	;; oul
("strolls"	nil	(((s t r o l z) 1)))	;; oul
("stronghold"	nil	(((s t r o ng) 1) ((h o l d) 0)))	;; oul
("strongholds"	nil	(((s t r o ng) 1) ((h o l d z) 0)))	;; oul
("strongsmelling"	nil	(((s t r o ng )1)((s m a l )1)((i ng )0)))	;; ing
("stropping"	nil	(((s t r o p )1)((i ng )0)))	;; ing
("structuring"	nil	(((s t r uh k )1)((ch @ r )0)((i ng )0)))	;; ing
("struggling"	nil	(((s t r uh )1)((g l! )0)((i ng )0)))	;; ing
("strumming"	nil	(((s t r uh m )1)((i ng )0)))	;; ing
("strutting"	nil	(((s t r uh t^ )1)((i ng )0)))	;; ing
("stubbing"	nil	(((s t uh b )1)((i ng )0)))	;; ing
("stuccoing"	nil	(((s t uh )1)((k ou )0)((i ng )0)))	;; ing
("studding"	nil	(((s t uh d )1)((i ng )0)))	;; ing
("studying"	nil	(((s t uh )1)((d iy )0)((i ng )0)))	;; ing
("studys"	nil	(((s t uh) 1) ((d ii z) 0)))	;; unique
("stuffd"	nil	(((s t uh f t) 1)))	;; unique
("stuffing"	nil	(((s t uh f )1)((i ng )0)))	;; ing
("stultifying"	nil	(((s t o l )1)((t @ )0)((f ai )1)((i ng )0)))	;; ing
("stumbling"	nil	(((s t uh m )1)((b l! )0)((i ng )0)))	;; ing
("stumping"	nil	(((s t uh m p )1)((i ng )0)))	;; ing
("stunning"	nil	(((s t uh n )1)((i ng )0)))	;; ing
("stunting"	nil	(((s t uh n t )1)((i ng )0)))	;; ing
("stupefying"	nil	(((s t y uu )1)((p @ )0)((f ai )1)((i ng )0)))	;; ing
("stupids"	nil	(((s t y uu) 1) ((p @ d z) 0)))	;; unique
("stuttering"	nil	(((s t uh )1)((t^ @ r )0)((i ng )0)))	;; ing
("styling"	nil	(((s t ai l )1)((i ng )0)))	;; ing
("stylising"	nil	(((s t ai l )1)((ai z )0)((i ng )0)))	;; ing
("stylizing"	nil	(((s t ai l )1)((ai z )0)((i ng )0)))	;; ing
("stymieing"	nil	(((s t ai )1)((m iy )0)((i ng )0)))	;; ing
("subbing"	nil	(((s uh b )1)((i ng )0)))	;; ing
("subceiling"	nil	(((s uh b )1)((s ii )1)((l i ng )0)))	;; ing
("subclassifying"	nil	(((s uh b )1)((k l a s )1)((@ )0)((f ai )1)((i ng )0)))	;; ing
("subclassing"	nil	(((s uh b )1)((k l aa s )1)((i ng )0)))	;; ing
("subcontracting"	nil	(((s uh b )1)((k @ n )0)((t r a k t )1)((i ng )0)))	;; ing
("subdividing"	nil	(((s uh b )1)((d i )0)((v ai d )1)((i ng )0)))	;; ing
("subduing"	nil	(((s @ b )0)((d y uu )1)((i ng )0)))	;; ing
("subediting"	nil	(((s uh b )1)((e )1)((d @ t^ )0)((i ng )0)))	;; ing
("subfactoring"	nil	(((s uh b )1)((f a k )1)((t @ r )0)((i ng )0)))	;; ing
("subfolder"	nil	(((s uh b) 1) ((f o l d) 1) ((@) 0)))	;; oul
("subfolders"	nil	(((s uh b) 1) ((f o l d) 1) ((@ z) 0)))	;; oul
("subgrouping"	nil	(((s uh b )1)((g r uu p )1)((i ng )0)))	;; ing
("subheading"	nil	(((s uh b )1)((h e d )1)((i ng )0)))	;; ing
("subjecting"	nil	(((s @ b )0)((jh e k t )1)((i ng )0)))	;; ing
("subjectivising"	nil	(((s @ b )0)((jh e k t )1)((i v )0)((ai z )1)((i ng )0)))	;; ing
("subjectivizing"	nil	(((s @ b )0)((jh e k t )1)((i v )0)((ai z )1)((i ng )0)))	;; ing
("subjugating"	nil	(((s uh b )1)((jh u )0)((g ei t^ )1)((i ng )0)))	;; ing
("subleasing"	nil	(((s uh b )1)((l ii s )1)((i ng )0)))	;; ing
("subletting"	nil	(((s uh b )0)((l e t^ )1)((i ng )0)))	;; ing
("sublicensing"	nil	(((s uh b )1)((l ai )1)((s n! s )0)((i ng )0)))	;; ing
("sublimating"	nil	(((s uh )1)((b l @ )0)((m ei t^ )1)((i ng )0)))	;; ing
("submerging"	nil	(((s @ b )0)((m @@r jh )1)((i ng )0)))	;; ing
("submitting"	nil	(((s @ b )0)((m i t^ )1)((i ng )0)))	;; ing
("submodeling"	nil	(((s uh b )1)((m o )1)((d l! )0)((i ng )0)))	;; ing
("subnetting"	nil	(((s uh b )1)((n e t^ )1)((i ng )0)))	;; ing
("subordinating"	nil	(((s @ )0)((b oo )1)((d i n )0)((ei t^ )1)((i ng )0)))	;; ing
("suborning"	nil	(((s @ )0)((b oo n )1)((i ng )0)))	;; ing
("subpoenaing"	nil	(((s @ )0)((p ii )1)((n @ )0)((i ng )0)))	;; ing
("subsampling"	nil	(((s uh b )1)((s aa m )1)((p l! )0)((i ng )0)))	;; ing
("subscribing"	nil	(((s @ b )0)((s k r ai b )1)((i ng )0)))	;; ing
("subscripting"	nil	(((s uh b )1)((s k r i p t )1)((i ng )0)))	;; ing
("subsectoring"	nil	(((s uh b )1)((s e k )1)((t @ r )0)((i ng )0)))	;; ing
("subsetting"	nil	(((s uh b )1)((s e t^ )1)((i ng )0)))	;; ing
("subsiding"	nil	(((s @ b )0)((s ai d )1)((i ng )0)))	;; ing
("subsidising"	nil	(((s uh b )1)((s @ )0)((d ai z )1)((i ng )0)))	;; ing
("subsidizing"	nil	(((s uh b )1)((s @ )0)((d ai z )1)((i ng )0)))	;; ing
("subsisting"	nil	(((s @ b )0)((s i s t )1)((i ng )0)))	;; ing
("subsolar"	nil	(((s uh b) 0) ((s o) 1) ((l @) 0)))	;; oul
("substantiating"	nil	(((s @ b )0)((s t a n )1)((sh iy )0)((ei t^ )1)((i ng )0)))	;; ing
("substituting"	nil	(((s uh b )1)((s t i )0)((t y uu t^ )1)((i ng )0)))	;; ing
("substring"	nil	(((s uh b )1)((s t r i ng )0)))	;; ing
("subsuming"	nil	(((s @ b )0)((s y uu m )1)((i ng )0)))	;; ing
("subthreading"	nil	(((s uh b )1)((th r e d )1)((i ng )0)))	;; ing
("subtitling"	nil	(((s uh b )1)((t ai )1)((t l! )0)((i ng )0)))	;; ing
("subtools"	nil	(((s uh b) 1) ((t u l z) 0)))	;; uul
("subtracting"	nil	(((s @ b )0)((t r a k t )1)((i ng )0)))	;; ing
("subtyping"	nil	(((s uh b )1)((t ai p )1)((i ng )0)))	;; ing
("suburbanizing"	nil	(((s @ )0)((b @@r b )1)((@ n )0)((ai z )1)((i ng )0)))	;; ing
("subverting"	nil	(((s @ b )0)((v @@r t^ )1)((i ng )0)))	;; ing
("succeeding"	nil	(((s @ k )0)((s ii d )1)((i ng )0)))	;; ing
("succinate"	nil	(((s uh k) 1) ((s i) 0) ((n ei t) 2)))	;; unique
("succouring"	nil	(((s uh )1)((k @ r )0)((i ng )0)))	;; ing
("succumbing"	nil	(((s @ )0)((k uh m )1)((i ng )0)))	;; ing
("suckering"	nil	(((s uh k )1)((@ r )0)((i ng )0)))	;; ing
("sucking"	nil	(((s uh k )1)((i ng )0)))	;; ing
("suckling"	nil	(((s uh k )1)((l i ng )0)))	;; ing
("sueing"	nil	(((s uu )1)((i ng )0)))	;; ing
("suffering"	nil	(((s uh )1)((f @ r )0)((i ng )0)))	;; ing
("sufficing"	nil	(((s @ )0)((f ai s )1)((i ng )0)))	;; ing
("suffixing"	nil	(((s uh )1)((f i k s )0)((i ng )0)))	;; ing
("suffocating"	nil	(((s uh )1)((f @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("suffusing"	nil	(((s @ )0)((f y uu z )1)((i ng )0)))	;; ing
("sugaring"	nil	(((sh u )1)((g @ r )0)((i ng )0)))	;; ing
("suggesting"	nil	(((s @ )0)((jh e s t )1)((i ng )0)))	;; ing
("suing"	nil	(((s uu )1)((i ng )0)))	;; ing
("suiting"	nil	(((s uu t^ )1)((i ng )0)))	;; ing
("sulfating"	nil	(((s o l )1)((f ei t^ )0)((i ng )0)))	;; ing
("sulking"	nil	(((s o l k )1)((i ng )0)))	;; ing
("sullivans"	nil	(((s uh) 1) ((l i) 0) ((v n! z) 0)))	;; unique
("sullying"	nil	(((s uh )1)((l iy )0)((i ng )0)))	;; ing
("sultanates"	nil	(((s o l) 1) ((t n!) 0) ((ei t s) 0)))	;; unique
("summarising"	nil	(((s uh )1)((m @ )0)((r ai z )1)((i ng )0)))	;; ing
("summarizing"	nil	(((s uh )1)((m @ )0)((r ai z )1)((i ng )0)))	;; ing
("summering"	nil	(((s uh )1)((m @ r )0)((i ng )0)))	;; ing
("summerizing"	nil	(((s uh )1)((m @ r )0)((ai z )1)((i ng )0)))	;; ing
("summersaulting"	nil	(((s uh )1)((m @ )0)((s oo l t )1)((i ng )0)))	;; ing
("summing"	nil	(((s uh m )1)((i ng )0)))	;; ing
("summoning"	nil	(((s uh )1)((m @ n )0)((i ng )0)))	;; ing
("summonsing"	nil	(((s uh )1)((m @ n z )0)((i ng )0)))	;; ing
("sunbathing"	nil	(((s uh n )1)((b ei dh )1)((i ng )0)))	;; ing
("sunday-school"	nil	(((s uh n) 1) ((d ei) 0) ((s k u l) 1)))	;; uul
("sunday-schools"	nil	(((s uh n) 1) ((d ei) 0) ((s k u l z) 1)))	;; uul
("sundering"	nil	(((s uh n )1)((d @ r )0)((i ng )0)))	;; ing
("sunning"	nil	(((s uh n )1)((i ng )0)))	;; ing
("sunrising"	nil	(((s uh n )1)((r ai z )1)((i ng )0)))	;; ing
("sunscreening"	nil	(((s uh n )1)((s k r ii n )1)((i ng )0)))	;; ing
("sunsetting"	nil	(((s uh n )1)((s e t^ )1)((i ng )0)))	;; ing
("suntanning"	nil	(((s uh n )1)((t a n )1)((i ng )0)))	;; ing
("superannuating"	nil	(((s uu )1)((p @ )0)((r a )1)((n y uw )0)((ei t^ )1)((i ng )0)))	;; ing
("supercold"	nil	(((s uu) 1) ((p @) 0) ((k o l d) 1)))	;; oul
("supercomputing"	nil	(((s uu )1)((p @ )0)((k @ m )0)((p y uu t^ )1)((i ng )0)))	;; ing
("superconducting"	nil	(((s uu )1)((p @ )0)((k @ n )0)((d uh k t )1)((i ng )0)))	;; ing
("supercool"	nil	(((s uu) 1) ((p @) 0) ((k u l) 1)))	;; uul
("supercooled"	nil	(((s uu) 1) ((p @) 0) ((k u l d) 1)))	;; uul
("supercooling"	nil	(((s uu) 1) ((p @) 0) ((k u l) 1) ((i ng) 0)))	;; uul
("superimposing"	nil	(((s uu )1)((p @ r )0)((i m )0)((p ou z )1)((i ng )0)))	;; ing
("superintending"	nil	(((s uu )1)((p @ )0)((r i n )0)((t e n d )1)((i ng )0)))	;; ing
("supermans"	nil	(((s uu) 1) ((p @) 0) ((m a n z) 1)))	;; unique
("superscribing"	nil	(((s uu )1)((p @ )0)((s k r ai b )1)((i ng )0)))	;; ing
("superscripting"	nil	(((s uu )1)((p @ )0)((s k r i p t )1)((i ng )0)))	;; ing
("superseding"	nil	(((s uu )1)((p @ )0)((s ii d )1)((i ng )0)))	;; ing
("supervening"	nil	(((s uu )1)((p @ )0)((v ii n )1)((i ng )0)))	;; ing
("supervising"	nil	(((s uu )1)((p @ )0)((v ai z )1)((i ng )0)))	;; ing
("supping"	nil	(((s uh p )1)((i ng )0)))	;; ing
("supplanting"	nil	(((s @ )0)((p l aa n t )1)((i ng )0)))	;; ing
("supplementing"	nil	(((s uh )1)((p l @ )0)((m e n t )1)((i ng )0)))	;; ing
("supplicating"	nil	(((s uh )1)((p l @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("supplying"	nil	(((s @ )0)((p l ai )1)((i ng )0)))	;; ing
("supporting"	nil	(((s @ )0)((p oo t^ )1)((i ng )0)))	;; ing
("supposing"	nil	(((s @ )0)((p ou z )1)((i ng )0)))	;; ing
("suppressing"	nil	(((s @ )0)((p r e s )1)((i ng )0)))	;; ing
("suppurating"	nil	(((s uh )1)((p y uw )0)((r ei t^ )1)((i ng )0)))	;; ing
("surcharging"	nil	(((s @@r )1)((ch aa jh )0)((i ng )0)))	;; ing
("surfacing"	nil	(((s @@r )1)((f @ s )0)((i ng )0)))	;; ing
("surfboarding"	nil	(((s @@r f )1)((b oo d )1)((i ng )0)))	;; ing
("surfing"	nil	(((s @@r f )1)((i ng )0)))	;; ing
("surging"	nil	(((s @@r jh )1)((i ng )0)))	;; ing
("surmising"	nil	(((s @ )0)((m ai z )1)((i ng )0)))	;; ing
("surmounting"	nil	(((s @ )0)((m ow n t )1)((i ng )0)))	;; ing
("surpassing"	nil	(((s @ )0)((p aa s )1)((i ng )0)))	;; ing
("surprising"	nil	(((s @ )0)((p r ai z )1)((i ng )0)))	;; ing
("surrendering"	nil	(((s @ )0)((r e n )1)((d @ r )0)((i ng )0)))	;; ing
("surrounding"	nil	(((s @ )0)((r ow n d )1)((i ng )0)))	;; ing
("surveying"	nil	(((s @ )0)((v ei )1)((i ng )0)))	;; ing
("surviving"	nil	(((s @ )0)((v ai v )1)((i ng )0)))	;; ing
("susans"	nil	(((s uu) 1) ((z n! z) 0)))	;; unique
("suspecting"	nil	(((s @ )0)((s p e k t )1)((i ng )0)))	;; ing
("suspending"	nil	(((s @ )0)((s p e n d )1)((i ng )0)))	;; ing
("sussing"	nil	(((s uh s )1)((i ng )0)))	;; ing
("sustaining"	nil	(((s @ )0)((s t ei n )1)((i ng )0)))	;; ing
("sutherlands"	nil	(((s uh) 1) ((dh @) 0) ((l @ n d z) 0)))	;; unique
("swabbing"	nil	(((s w o b )1)((i ng )0)))	;; ing
("swaddling"	nil	(((s w o )1)((d l! )0)((i ng )0)))	;; ing
("swaggering"	nil	(((s w a )1)((g @ r )0)((i ng )0)))	;; ing
("swagging"	nil	(((s w a g )1)((i ng )0)))	;; ing
("swallowing"	nil	(((s w o )1)((l ou )0)((i ng )0)))	;; ing
("swamping"	nil	(((s w o m p )1)((i ng )0)))	;; ing
("swanking"	nil	(((s w a ng k )1)((i ng )0)))	;; ing
("swanning"	nil	(((s w o n )1)((i ng )0)))	;; ing
("swapping"	nil	(((s w o p )1)((i ng )0)))	;; ing
("swarming"	nil	(((s w oo m )1)((i ng )0)))	;; ing
("swash-buckling"	nil	(((s w o sh )1)((b uh )1)((k l! )0)((i ng )0)))	;; ing
("swashbuckling"	nil	(((s w o sh )1)((b uh )1)((k l! )0)((i ng )0)))	;; ing
("swashing"	nil	(((s w o sh )1)((i ng )0)))	;; ing
("swathing"	nil	(((s w ei dh )1)((i ng )0)))	;; ing
("swatting"	nil	(((s w o t^ )1)((i ng )0)))	;; ing
("swaying"	nil	(((s w ei )1)((i ng )0)))	;; ing
("swearing"	nil	(((s w ir r )1)((i ng )0)))	;; ing
("sweating"	nil	(((s w e t^ )1)((i ng )0)))	;; ing
("swedens"	nil	(((s w ii) 1) ((d n! z) 0)))	;; unique
("sweeping"	nil	(((s w ii p )1)((i ng )0)))	;; ing
("sweet-smelling"	nil	(((s w ii t )1)((s m a l )1)((i ng )0)))	;; ing
("sweet-tasting"	nil	(((s w ii t )1)((t ei s t )1)((i ng )0)))	;; ing
("sweetening"	nil	(((s w ii t )1)((n! )0)((i ng )0)))	;; ing
("sweethearting"	nil	(((s w ii t )1)((h aa t^ )1)((i ng )0)))	;; ing
("sweeting"	nil	(((s w ii t^ )1)((i ng )0)))	;; ing
("swelling"	nil	(((s w a l )1)((i ng )0)))	;; ing
("sweltering"	nil	(((s w a l )1)((t @ r )0)((i ng )0)))	;; ing
("swerving"	nil	(((s w @@r v )1)((i ng )0)))	;; ing
("swigging"	nil	(((s w i g )1)((i ng )0)))	;; ing
("swilling"	nil	(((s w i l )1)((i ng )0)))	;; ing
("swimming"	nil	(((s w i m )1)((i ng )0)))	;; ing
("swindling"	nil	(((s w i n )1)((d l! )0)((i ng )0)))	;; ing
("swingeing"	nil	(((s w i n jh )1)((i ng )0)))	;; ing
("swinging"	nil	(((s w i ng )1)((i ng )0)))	;; ing
("swiping"	nil	(((s w ai p )1)((i ng )0)))	;; ing
("swirling"	nil	(((s w @@r l )1)((i ng )0)))	;; ing
("swishing"	nil	(((s w i sh )1)((i ng )0)))	;; ing
("switching"	nil	(((s w i ch )1)((i ng )0)))	;; ing
("switchs"	nil	(((s w i ch) 1) ((@ z) 0)))	;; unique
("switzerlands"	nil	(((s w i t) 1) ((s @) 0) ((l @ n d z) 0)))	;; unique
("swiveling"	nil	(((s w i )1)((v l! )0)((i ng )0)))	;; ing
("swivelling"	nil	(((s w i )1)((v l! )0)((i ng )0)))	;; ing
("swizzling"	nil	(((s w i )1)((z l! )0)((i ng )0)))	;; ing
("swollen"	nil	(((s w o) 1) ((l @ n) 0)))	;; oul
("swooning"	nil	(((s w uu n )1)((i ng )0)))	;; ing
("swooping"	nil	(((s w uu p )1)((i ng )0)))	;; ing
("swopping"	nil	(((s w o p )1)((i ng )0)))	;; ing
("swotting"	nil	(((s w o t^ )1)((i ng )0)))	;; ing
("sydneys"	nil	(((s i d) 1) ((n ii z) 0)))	;; unique
("syllabifying"	nil	(((s i )0)((l a )1)((b i )0)((f ai )1)((i ng )0)))	;; ing
("syllogizing"	nil	(((s i )1)((l @ )0)((jh ai z )1)((i ng )0)))	;; ing
("symbolising"	nil	(((s i m )1)((b l! )0)((ai z )1)((i ng )0)))	;; ing
("symbolizing"	nil	(((s i m )1)((b l! )0)((ai z )1)((i ng )0)))	;; ing
("sympathising"	nil	(((s i m )1)((p @ )0)((th ai z )1)((i ng )0)))	;; ing
("sympathizing"	nil	(((s i m )1)((p @ )0)((th ai z )1)((i ng )0)))	;; ing
("synching"	nil	(((s i ng k )1)((i ng )0)))	;; ing
("synchronising"	nil	(((s i ng )1)((k r @ )0)((n ai z )1)((i ng )0)))	;; ing
("synchronizing"	nil	(((s i ng )1)((k r @ )0)((n ai z )1)((i ng )0)))	;; ing
("syncing"	nil	(((s i ng k )1)((i ng )0)))	;; ing
("syndicating"	nil	(((s i n )1)((d i )0)((k ei t^ )1)((i ng )0)))	;; ing
("synergising"	nil	(((s i )1)((n @ )0)((jh ai z )1)((i ng )0)))	;; ing
("synergizing"	nil	(((s i )1)((n @ )0)((jh ai z )1)((i ng )0)))	;; ing
("synergys"	nil	(((s i) 1) ((n @) 0) ((jh ii z) 0)))	;; unique
("syntexs"	nil	(((s i n) 1) ((t e k s) 0) ((@ z) 0)))	;; unique
("synthesising"	nil	(((s i n )1)((th @ )0)((s ai z )1)((i ng )0)))	;; ing
("synthesizing"	nil	(((s i n )1)((th @ )0)((s ai z )1)((i ng )0)))	;; ing
("syphoning"	nil	(((s ai )1)((f n! )0)((i ng )0)))	;; ing
("syrias"	nil	(((s i) 1) ((r ii @ z) 0)))	;; unique
("systematising"	nil	(((s i )1)((s t @ m )0)((@ )0)((t ai z )1)((i ng )0)))	;; ing
("systematizing"	nil	(((s i )1)((s t @ m )0)((@ )0)((t ai z )1)((i ng )0)))	;; ing
("systemising"	nil	(((s i )1)((s t @ m )0)((ai z )1)((i ng )0)))	;; ing
("systemizing"	nil	(((s i )1)((s t @ m )0)((ai z )1)((i ng )0)))	;; ing
("tabbing"	nil	(((t a b )1)((i ng )0)))	;; ing
("tabling"	nil	(((t ei )1)((b l! )0)((i ng )0)))	;; ing
("tabooing"	nil	(((t @ )0)((b uu )1)((i ng )0)))	;; ing
("tabuing"	nil	(((t @ )0)((b uu )1)((i ng )0)))	;; ing
("tabularising"	nil	(((t a )1)((b y @ )0)((l @ r )0)((ai z )1)((i ng )0)))	;; ing
("tabularizing"	nil	(((t a )1)((b y @ )0)((l @ r )0)((ai z )1)((i ng )0)))	;; ing
("tabulating"	nil	(((t a )1)((b y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("tacking"	nil	(((t a k )1)((i ng )0)))	;; ing
("tackling"	nil	(((t a )1)((k l! )0)((i ng )0)))	;; ing
("tadpole"	nil	(((t a d) 1) ((p o l) 0)))	;; oul
("tadpoles"	nil	(((t a d) 1) ((p o l z) 0)))	;; oul
("taewa"	nil	(((t aa) 1) ((e) 0) ((w @) 0)))	;; unique
("tagging"	nil	(((t a g )1)((i ng )0)))	;; ing
("taha"	nil	(((t aa) 1) ((h aa) 0)))	;; unique
("tahae"	nil	(((t aa) 1) ((h ai) 0)))	;; unique
("tahuhu"	nil	(((t aa) 1) ((h uu) 0) ((h uu) 0)))	;; unique
("tai"	nil	(((t ai) 1)))	;; unique
("taiaha"	nil	(((t aa) 1) ((i) 0) ((@) 0) ((h aa) 0)))	;; unique
("taiepa"	nil	(((t aa) 1) ((i) 0) ((@) 0) ((p @) 0)))	;; unique
("taieri"	nil	(((t aa) 1) ((i) 0) ((@) 0) ((r ii) 0)))	;; unique
("taihoa"	nil	(((t ai) 0) ((h ou) 1) ((@) 0)))	;; unique
("taiko"	nil	(((t ai) 1) ((k oo) 0)))	;; unique
("tailgating"	nil	(((t ei l )1)((g ei t^ )1)((i ng )0)))	;; ing
("tailing"	nil	(((t ei l )1)((i ng )0)))	;; ing
("tailoring"	nil	(((t ei )1)((l @ r )0)((i ng )0)))	;; ing
("tainting"	nil	(((t ei n t )1)((i ng )0)))	;; ing
("tainui"	nil	(((t ai) 0) ((n uu) 1) ((ii) 0)))	;; unique
("taipo"	nil	(((t ai) 1) ((p ou) 0)))	;; unique
("tairoa"	nil	(((t ai) 1) ((r ou) 0) ((@) 0)))	;; unique
("taitokerau"	nil	(((t ai) 1) ((t ou) 0) ((k e) 1) ((r ow) 0)))	;; unique
("taiwans"	nil	(((t ai) 0) ((w o n z) 1)))	;; unique
("taka"	nil	(((t aa) 1) ((k @) 0)))	;; unique
("takahe"	nil	(((t aa) 1) ((k @) 0) ((h ii) 0)))	;; unique
("takapu"	nil	(((t aa) 1) ((k aa) 0) ((p uu) 0)))	;; unique
("takapuna"	nil	(((t a) 1) ((k @) 0) ((p uu) 1) ((n @) 0)))	;; unique
("takawaenga"	nil	(((t aa) 0) ((k aa) 0) ((w aa) 1) ((e ng) 0) ((@) 0)))	;; unique
("takeke"	nil	(((t aa) 1) ((k e) 0) ((k ei) 0)))	;; unique
("taking"	nil	(((t ei k )1)((i ng )0)))	;; ing
("talbots"	nil	(((t oo l) 1) ((b @ t s) 0)))	;; unique
("talkd"	nil	(((t oo k t) 1)))	;; unique
("talking"	nil	(((t oo k )1)((i ng )0)))	;; ing
("talls"	nil	(((t oo l z) 1)))	;; unique
("tallying"	nil	(((t a )1)((l iy )0)((i ng )0)))	;; ing
("tamaiti"	nil	(((t aa) 1) ((m @) 0) ((ii) 1) ((t ii) 0)))	;; unique
("tamaki-makau-rau"	nil	(((t aa) 1) ((m aa) 0) ((k ii) 0) ((m aa) 1) ((k ow) 0) ((r ow) 1)))	;; unique
("tamaki-nui-a-rua"	nil	(((t aa) 0) ((m aa) 0) ((k ii) 0) ((n uu) 0) ((ii) 0) ((aa) 0) ((r uu) 0) ((@) 0)))	;; unique
("tamariki"	nil	(((t aa) 1) ((m aa) 0) ((r ii) 1) ((k ii) 0)))	;; unique
("taming"	nil	(((t ei m )1)((i ng )0)))	;; ing
("tampering"	nil	(((t a m )1)((p @ r )0)((i ng )0)))	;; ing
("tamping"	nil	(((t a m p )1)((i ng )0)))	;; ing
("tamure"	nil	(((t aa) 1) ((m uu) 0) ((r ei) 0)))	;; unique
("tane"	nil	(((t aa) 1) ((n ei) 0)))	;; unique
("tanekaha"	nil	(((t aa) 1) ((n e) 0) ((k aa) 0) ((h aa) 0)))	;; unique
("tangaroa"	nil	(((t uh ng) 1) ((aa) 0) ((r ou) 1) ((@) 0)))	;; unique
("tangata"	nil	(((t uh ng) 1) ((@) 0) ((t^ @) 0)))	;; unique
("tangeao"	nil	(((t uh ng) 1) ((e) 0) ((ow) 0)))	;; unique
("tangi"	nil	(((t uh ng) 1) ((ii) 0)))	;; unique
("tangihanga"	nil	(((t uh ng) 1) ((ii) 0) ((h uh ng) 0) ((@) 0)))	;; unique
("tangiwai"	nil	(((t uh ng) 1) ((ii) 0) ((w ai) 0)))	;; unique
("tangling"	nil	(((t a ng )1)((g l! )0)((i ng )0)))	;; ing
("tangoing"	nil	(((t a ng )1)((g ou )0)((i ng )0)))	;; ing
("tangs"	nil	(((t a ng z) 1)))	;; unique
("taniko"	nil	(((t aa) 1) ((n ii) 0) ((k oo) 0)))	;; unique
("taniwha"	nil	(((t aa) 1) ((n ii) 0) ((f aa) 0)))	;; unique
("tanking"	nil	(((t a ng k )1)((i ng )0)))	;; ing
("tanning"	nil	(((t a n )1)((i ng )0)))	;; ing
("tantalising"	nil	(((t a n )1)((t @ )0)((l ai z )1)((i ng )0)))	;; ing
("tantalizing"	nil	(((t a n )1)((t @ )0)((l ai z )1)((i ng )0)))	;; ing
("tanyas"	nil	(((t a) 1) ((n y @ z) 0)))	;; unique
("tanzanias"	nil	(((t a n) 1) ((z @) 0) ((n ii @ z) 1)))	;; unique
("taonga"	nil	(((t aa) 1) ((o ng) 0) ((@) 0)))	;; unique
("tapanui"	nil	(((t aa) 0) ((p @) 0) ((n uu) 1) ((ii) 0)))	;; unique
("tapering"	nil	(((t ei )1)((p @ r )0)((i ng )0)))	;; ing
("taping"	nil	(((t ei p )1)((i ng )0)))	;; ing
("tapping"	nil	(((t a p )1)((i ng )0)))	;; ing
("tapu"	nil	(((t aa) 1) ((p uu) 0)))	;; unique
("tarahina"	nil	(((t a) 1) ((r aa) 0) ((h ii) 1) ((n @) 0)))	;; unique
("taraire"	nil	(((t aa) 0) ((r ai) 1) ((r ei) 0)))	;; unique
("tarakihi"	nil	(((t aa) 1) ((r @) 0) ((k ii) 0)))	;; unique
("taramea"	nil	(((t aa) 1) ((r aa) 0) ((m e) 0) ((@) 0)))	;; unique
("taranaki"	nil	(((t a) 1) ((r @) 0) ((n a) 1) ((k ii) 0)))	;; unique
("taranga"	nil	(((t aa) 1) ((r uh ng) 0) ((@) 0)))	;; unique
("tarapo"	nil	(((t aa) 0) ((r aa) 0) ((p oo) 1)))	;; unique
("tarapunga"	nil	(((t aa) 0) ((r aa) 1) ((p uu ng) 0) ((@) 0)))	;; unique
("tararua"	nil	(((t a) 1) ((r aa) 0) ((r uu) 1) ((@) 0)))	;; unique
("tarata"	nil	(((t aa) 1) ((r aa) 0) ((t^ @) 0)))	;; unique
("targeting"	nil	(((t aa )1)((g @ t^ )0)((i ng )0)))	;; ing
("targetting"	nil	(((t aa )1)((g @ t^ )0)((i ng )0)))	;; ing
("tarnishing"	nil	(((t aa )1)((n i sh )0)((i ng )0)))	;; ing
("taro"	nil	(((t aa) 1) ((r ou) 0)))	;; unique
("tarring"	nil	(((t aa r )1)((i ng )0)))	;; ing
("tarrying"	nil	(((t a )1)((r iy )0)((i ng )0)))	;; ing
("tarting"	nil	(((t aa t^ )1)((i ng )0)))	;; ing
("tas"	nil	(((t aa z) 1)))	;; unique
("tasking"	nil	(((t aa s k )1)((i ng )0)))	;; ing
("tasselling"	nil	(((t a )1)((s l! )0)((i ng )0)))	;; ing
("tasting"	nil	(((t ei s t )1)((i ng )0)))	;; ing
("tataramoa"	nil	(((t aa) 0) ((t aa) 0) ((r aa) 0) ((m oo) 1) ((@) 0)))	;; unique
("tatting"	nil	(((t a t^ )1)((i ng )0)))	;; ing
("tattling"	nil	(((t a )1)((t l! )0)((i ng )0)))	;; ing
("tattooing"	nil	(((t @ )0)((t uu )1)((i ng )0)))	;; ing
("taua"	nil	(((t ow) 1) ((@) 0)))	;; unique
("tauhinu"	nil	(((t ow) 1) ((h ii) 0) ((n uu) 0)))	;; unique
("tauhou"	nil	(((t ow) 1) ((h ou) 0) ((uu) 0)))	;; unique
("tauira"	nil	(((t ow) 1) ((ii) 0) ((r @) 0)))	;; unique
("tauiwi"	nil	(((t ow) 1) ((ii) 0) ((w ii) 0)))	;; unique
("taumaka"	nil	(((t ow) 1) ((m aa) 0) ((k @) 0)))	;; unique
("taumata"	nil	(((t ow) 1) ((m aa) 0) ((t^ @) 0)))	;; unique
("taunting"	nil	(((t oo n t )1)((i ng )0)))	;; ing
("taupara"	nil	(((t ow) 1) ((p aa) 0) ((r @) 0)))	;; unique
("taupata"	nil	(((t ow) 1) ((p aa) 0) ((t^ @) 0)))	;; unique
("tauranga"	nil	(((t ow) 1) ((r o ng) 0) ((@) 0)))	;; unique
("tauranga-moana"	nil	(((t ow) 1) ((r uh ng) 0) ((aa) 0) ((m ou) 0) ((a) 1) ((n @) 0)))	;; unique
("taurekareka"	nil	(((t ow) 0) ((r e) 1) ((k aa) 0) ((r e) 0) ((k @) 0)))	;; unique
("tautoko"	nil	(((t ow) 1) ((t o) 0) ((k ou) 0)))	;; unique
("tawa"	nil	(((t aa) 1) ((w @) 0)))	;; unique
("tawai"	nil	(((t aa) 1) ((w ai) 0)))	;; unique
("tawake"	nil	(((t aa) 1) ((w aa) 0) ((k ei) 0)))	;; unique
("tawapou"	nil	(((t aa) 0) ((w aa) 1) ((p ou) 0)))	;; unique
("tawari"	nil	(((t aa) 1) ((w aa) 0) ((r ii) 0)))	;; unique
("tawatawa"	nil	(((t aa) 1) ((w aa) 0) ((t aa) 0) ((w @) 0)))	;; unique
("tawhara"	nil	(((t aa) 1) ((f aa) 0) ((r @) 0)))	;; unique
("tawheowheo"	nil	(((t aa) 0) ((f e) 1) ((oo) 0) ((f e) 0) ((oo) 0)))	;; unique
("tawhero"	nil	(((t aa) 1) ((f e) 0) ((r ou) 0)))	;; unique
("tawhiri"	nil	(((t aa) 1) ((f i) 0) ((r ii) 0)))	;; unique
("taxiing"	nil	(((t a k )1)((s iy )0)((i ng )0)))	;; ing
("taxing"	nil	(((t a k s )1)((i ng )0)))	;; ing
("taxpaying"	nil	(((t a k s )1)((p ei )1)((i ng )0)))	;; ing
("te"	nil	(((t ei) 1)))	;; unique
("tea-drinking"	nil	(((t ii )1)((d r i ng k )1)((i ng )0)))	;; ing
("teaching"	nil	(((t ii ch )1)((i ng )0)))	;; ing
("teaming"	nil	(((t ii m )1)((i ng )0)))	;; ing
("tearing"	nil	(((t ir r )1)((i ng )0)))	;; ing
("teasing"	nil	(((t ii z )1)((i ng )0)))	;; ing
("technologys"	nil	(((t e k) 0) ((n o) 1) ((l @) 0) ((jh ii z) 0)))	;; unique
("teddys"	nil	(((t e d) 1) ((ii z) 0)))	;; unique
("teds"	nil	(((t e d z) 1)))	;; unique
("teeing"	nil	(((t ii )1)((i ng )0)))	;; ing
("teeming"	nil	(((t ii m )1)((i ng )0)))	;; ing
("teetering"	nil	(((t ii )1)((t^ @ r )0)((i ng )0)))	;; ing
("teething"	nil	(((t ii dh )1)((i ng )0)))	;; ing
("tehrans"	nil	(((t ir) 0) ((r aa n z) 1)))	;; unique
("teina"	nil	(((t ei) 1) ((n @) 0)))	;; unique
("tekoteko"	nil	(((t e) 1) ((k ou) 0) ((t e) 0) ((k ou) 0)))	;; unique
("tektronixs"	nil	(((t e k) 0) ((t r o) 1) ((n i k s) 0) ((@ z) 0)))	;; unique
("telecommuting"	nil	(((t a )1)((l i )0)((k @ )0)((m y uu t^ )1)((i ng )0)))	;; ing
("teleconferencing"	nil	(((t a )1)((l iy )0)((k o n )1)((f @ r )0)((@ n s )0)((i ng )0)))	;; ing
("telegraphing"	nil	(((t a )1)((l @ )0)((g r aa f )1)((i ng )0)))	;; ing
("telemarketing"	nil	(((t a )1)((l iy )0)((m aa )1)((k @ t^ )0)((i ng )0)))	;; ing
("telephoning"	nil	(((t a )1)((l @ )0)((f ou n )1)((i ng )0)))	;; ing
("teleprocessing"	nil	(((t a )1)((l i )0)((p r ou )1)((s e s )0)((i ng )0)))	;; ing
("telescoping"	nil	(((t a )1)((l @ )0)((s k ou p )1)((i ng )0)))	;; ing
("teletypesetting"	nil	(((t a )1)((l i )0)((t ai p )1)((s e t^ )1)((i ng )0)))	;; ing
("televising"	nil	(((t a )1)((l @ )0)((v ai z )1)((i ng )0)))	;; ing
("telling"	nil	(((t a l )1)((i ng )0)))	;; ing
("telnetting"	nil	(((t a l )1)((n e t^ )1)((i ng )0)))	;; ing
("tels"	nil	(((t a l z) 1)))	;; unique
("tempering"	nil	(((t e m )1)((p @ r )0)((i ng )0)))	;; ing
("temping"	nil	(((t e m p )1)((i ng )0)))	;; ing
("templating"	nil	(((t e m )1)((p l ei t^ )0)((i ng )0)))	;; ing
("temporising"	nil	(((t e m )1)((p @ )0)((r ai z )1)((i ng )0)))	;; ing
("temporizing"	nil	(((t e m )1)((p @ )0)((r ai z )1)((i ng )0)))	;; ing
("tempting"	nil	(((t e m p t )1)((i ng )0)))	;; ing
("tena"	nil	(((t e) 1) ((n @) 0)))	;; unique
("tenakoe"	nil	(((t @) 0) ((n aa) 1) ((k w e i) 0)))	;; unique
("tendering"	nil	(((t e n )1)((d @ r )0)((i ng )0)))	;; ing
("tenderising"	nil	(((t e n )1)((d @ r )0)((ai z )1)((i ng )0)))	;; ing
("tenderizing"	nil	(((t e n )1)((d @ r )0)((ai z )1)((i ng )0)))	;; ing
("tending"	nil	(((t e n d )1)((i ng )0)))	;; ing
("tenfold"	nil	(((t e n) 1) ((f o l d) 0)))	;; oul
("tensing"	nil	(((t e n s )1)((i ng )0)))	;; ing
("terminating"	nil	(((t @@r )1)((m @ )0)((n ei t^ )1)((i ng )0)))	;; ing
("terming"	nil	(((t @@r m )1)((i ng )0)))	;; ing
("terminuss"	nil	(((t @@r) 1) ((m @) 0) ((n @ s) 0) ((@ z) 0)))	;; unique
("terracing"	nil	(((t e )1)((r @ s )0)((i ng )0)))	;; ing
("terrifying"	nil	(((t e )1)((r @ )0)((f ai )1)((i ng )0)))	;; ing
("territorys"	nil	(((t e) 1) ((r @) 0) ((t^ @) 0) ((r ii z) 0)))	;; unique
("terrorising"	nil	(((t e )1)((r @ r )0)((ai z )1)((i ng )0)))	;; ing
("terrorisms"	nil	(((t e) 1) ((r @ r) 0) ((i) 1) ((z m! z) 0)))	;; unique
("terrorizing"	nil	(((t e )1)((r @ r )0)((ai z )1)((i ng )0)))	;; ing
("terrys"	nil	(((t e) 1) ((r ii z) 0)))	;; unique
("tessellating"	nil	(((t e )1)((s @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("tesss"	nil	(((t e s) 1) ((@ z) 0)))	;; unique
("test-driving"	nil	(((t e s t )1)((d r ai v )1)((i ng )0)))	;; ing
("testifying"	nil	(((t e )1)((s t @ )0)((f ai )1)((i ng )0)))	;; ing
("testing"	nil	(((t e s t )1)((i ng )0)))	;; ing
("tete"	nil	(((t e) 1) ((t ei) 0))) 	;; maori
("teteawaka"	nil	(((t e) 0) ((t e) 1) ((aa) 0) ((w aa) 0) ((k @) 0)))	;; unique
("tetere"	nil	(((t e) 1) ((t e) 0) ((r ei) 0)))	;; unique
("tethering"	nil	(((t e )1)((dh @ r )0)((i ng )0)))	;; ing
("tewhanga-nui-a-tara"	nil	(((t e) 0) ((f uh ng) 1) ((aa) 0) ((n uu) 0) ((ii) 0) ((aa) 0) ((t aa) 1) ((r @) 0)))	;; unique
("tewhatewha"	nil	(((t e) 1) ((f @) 0) ((t e) 0) ((f @) 0)))	;; unique
("texturing"	nil	(((t e k s )1)((ch @ r )0)((i ng )0)))	;; ing
("thackerays"	nil	(((th a) 1) ((k @) 0) ((r ii z) 0)))	;; unique
("thailands"	nil	(((t ai) 1) ((l a n d z) 0)))	;; unique
("thankd"	nil	(((th a ng k t) 1)))	;; unique
("thanking"	nil	(((th a ng k )1)((i ng )0)))	;; ing
("thanksgiving"	nil	(((th a ng k s )1)((g i v )1)((i ng )0)))	;; ing
("that'd"	nil	(((dh a t^) 1) ((@ d) 0)))	;; contraction
("that'll"	nil	(((dh a t) 1) ((l!) 0)))	;; contraction
("that's"	nil	(((dh a t s) 1)))	;; contraction
("thatching"	nil	(((th a ch )1)((i ng )0)))	;; ing
("thawing"	nil	(((th oo )1)((i ng )0)))	;; ing
("theorising"	nil	(((th ii @ )1)((r ai z )0)((i ng )0)))	;; ing
("theorizing"	nil	(((th ii @ )1)((r ai z )0)((i ng )0)))	;; ing
("theorys"	nil	(((th ii @) 1) ((r ii z) 0)))	;; unique
("thereve"	nil	(((dh ir v) 1)))	;; unique
("thermoluminescence"	nil	(((th @@r m) 1) ((o) 0) ((l uu) 1) ((m @) 0) ((n e s) 1) ((n! s) 0)))	;; oul
("thermoluminescent"	nil	(((th @@r m) 1) ((o) 0) ((l uu) 1) ((m @) 0) ((n e s) 1) ((n! t) 0)))	;; oul
("thermosetting"	nil	(((th @@r )1)((m ou )0)((s e t^ )1)((i ng )0)))	;; ing
("they'd"	nil	(((dh ei d) 1)))	;; contraction
("they'll"	nil	(((dh ei l) 1)))	;; contraction
("they're"	nil	(((dh ir) 1)))	;; contraction
("they've"	nil	(((dh ei v) 1)))	;; contraction
("thickening"	nil	(((th i k )1)((@ n )0)((i ng )0)))	;; ing
("thiefs"	nil	(((th ii f s) 1)))	;; unique
("thieving"	nil	(((th ii v )1)((i ng )0)))	;; ing
("thinking"	nil	(((th i ng k )1)((i ng )0)))	;; ing
("thinning"	nil	(((th i n )1)((i ng )0)))	;; ing
("thirsting"	nil	(((th @@r s t )1)((i ng )0)))	;; ing
("thirtyfold"	nil	(((th @@r) 1) ((t^ ii) 0) ((f o l d) 1)))	;; oul
("thisll"	nil	(((dh i s) 1) ((l!) 0)))	;; unique
("thomass"	nil	(((t o) 1) ((m @ s) 0) ((@ z) 0)))	;; unique
("thomsons"	nil	(((t o m) 1) ((s n! z) 0)))	;; unique
("thoreaus"	nil	(((th oo) 1) ((r ou z) 0)))	;; unique
("thoroughgoing"	nil	(((th uh )1)((r @ )0)((g ou )1)((i ng )0)))	;; ing
("thorps"	nil	(((th oo p s) 1)))	;; unique
("thors"	nil	(((th oo z) 1)))	;; unique
("thousandfold"	nil	(((th ow) 1) ((z n! d) 0) ((f o l d) 1)))	;; oul
("thrashing"	nil	(((th r a sh )1)((i ng )0)))	;; ing
("threading"	nil	(((th r e d )1)((i ng )0)))	;; ing
("threatening"	nil	(((th r e t )1)((n! )0)((i ng )0)))	;; ing
("three-year-old"	nil	(((th r ii) 1) ((y ir r) 0) ((o l d) 1)))	;; oul
("three-year-olds"	nil	(((th r ii) 1) ((y ir r) 0) ((o l d z) 1)))	;; oul
("threefold"	nil	(((th r ii) 1) ((f o l d) 0)))	;; oul
("threefoldness"	nil	(((th r ii) 1) ((f o l d) 0) ((n @ s) 0)))	;; oul
("threshhold"	nil	(((th r e sh) 1) ((h o l d) 0)))	;; oul
("threshholds"	nil	(((th r e sh) 1) ((h o l d z) 0)))	;; oul
("threshing"	nil	(((th r e sh )1)((i ng )0)))	;; ing
("threshold"	nil	(((th r e sh) 1) ((h o l d) 0)))	;; oul
("thresholds"	nil	(((th r e sh) 1) ((h o l d z) 0)))	;; oul
("thrilling"	nil	(((th r i l )1)((i ng )0)))	;; ing
("thriving"	nil	(((th r ai v )1)((i ng )0)))	;; ing
("throbbing"	nil	(((th r o b )1)((i ng )0)))	;; ing
("thronging"	nil	(((th r o ng )1)((i ng )0)))	;; ing
("throttling"	nil	(((th r o )1)((t l! )0)((i ng )0)))	;; ing
("throughflowing"	nil	(((th r uu )1)((f l ou )1)((i ng )0)))	;; ing
("throwing"	nil	(((th r ou )1)((i ng )0)))	;; ing
("thrumming"	nil	(((th r uh m )1)((i ng )0)))	;; ing
("thrusting"	nil	(((th r uh s t )1)((i ng )0)))	;; ing
("thudding"	nil	(((th uh d )1)((i ng )0)))	;; ing
("thumbing"	nil	(((th uh m )1)((i ng )0)))	;; ing
("thumbprinting"	nil	(((th uh m )1)((p r i n t )1)((i ng )0)))	;; ing
("thumbscrewing"	nil	(((th uh m )1)((s k r uu )1)((i ng )0)))	;; ing
("thumping"	nil	(((th uh m p )1)((i ng )0)))	;; ing
("thunderbolt"	nil	(((th uh n) 1) ((d @) 0) ((b o l t) 1)))	;; oul
("thunderbolts"	nil	(((th uh n) 1) ((d @) 0) ((b o l t s) 1)))	;; oul
("thundering"	nil	(((th uh n )1)((d @ r )0)((i ng )0)))	;; ing
("thwacking"	nil	(((th w a k )1)((i ng )0)))	;; ing
("thwarting"	nil	(((th w oo t^ )1)((i ng )0)))	;; ing
("thyroxine"	nil	(((th ai) 0) ((r o k) 1) ((s ii n) 2))) 	;; drug
("tiaki"	nil	(((t ii) 1) ((aa) 0) ((k ii) 0)))	;; unique
("ticketing"	nil	(((t i )1)((k @ t^ )0)((i ng )0)))	;; ing
("ticking"	nil	(((t i k )1)((i ng )0)))	;; ing
("tickling"	nil	(((t i )1)((k l! )0)((i ng )0)))	;; ing
("tidepool"	nil	(((t ai d) 1) ((p u l) 0)))	;; uul
("tidepools"	nil	(((t ai d) 1) ((p u l z) 0)))	;; uul
("tiding"	nil	(((t ai d )1)((i ng )0)))	;; ing
("tidying"	nil	(((t ai )1)((d iy )0)((i ng )0)))	;; ing
("tieing"	nil	(((t ai )1)((i ng )0)))	;; ing
("tieke"	nil	(((t ii) 1) ((e) 0) ((k ei) 0)))	;; unique
("tiffing"	nil	(((t i f )1)((i ng )0)))	;; ing
("tightening"	nil	(((t ai t )1)((n! )0)((i ng )0)))	;; ing
("tightfitting"	nil	(((t ai t )1)((f i t^ )1)((i ng )0)))	;; ing
("tihore"	nil	(((t ii) 1) ((h oo) 0) ((r ei) 0)))	;; unique
("tika"	nil	(((t ii) 1) ((k @) 0)))	;; unique
("tikanga"	nil	(((t ii) 1) ((k uh ng) 0) ((@) 0)))	;; unique
("tikati"	nil	(((t i) 1) ((k aa) 0) ((t^ ii) 0)))	;; unique
("tiki"	nil	(((t ii) 1) ((k ii) 0)))	;; unique
("tikumu"	nil	(((t ii) 1) ((k uu) 0) ((m uu) 0)))	;; unique
("tiling"	nil	(((t ai l )1)((i ng )0)))	;; ing
("tilling"	nil	(((t i l )1)((i ng )0)))	;; ing
("tilting"	nil	(((t i l t )1)((i ng )0)))	;; ing
("timbering"	nil	(((t i m )1)((b @ r )0)((i ng )0)))	;; ing
("time-consuming"	nil	(((t ai m )1)((k @ n )0)((s y uu m )1)((i ng )0)))	;; ing
("timekeeping"	nil	(((t ai m )1)((k ii p )1)((i ng )0)))	;; ing
("timesaving"	nil	(((t ai m )1)((s ei v )1)((i ng )0)))	;; ing
("timeserving"	nil	(((t ai m )1)((s @@r v )1)((i ng )0)))	;; ing
("timesharing"	nil	(((t ai m )1)((sh ir r )1)((i ng )0)))	;; ing
("timeslicing"	nil	(((t ai m )1)((s l ai s )1)((i ng )0)))	;; ing
("timestamping"	nil	(((t ai m )1)((s t a m p )1)((i ng )0)))	;; ing
("timetabling"	nil	(((t ai m )1)((t ei )1)((b l! )0)((i ng )0)))	;; ing
("timewarping"	nil	(((t ai m )1)((w oo p )1)((i ng )0)))	;; ing
("timing"	nil	(((t ai m )1)((i ng )0)))	;; ing
("tinana"	nil	(((t ii) 1) ((n a) 0) ((n @) 0)))	;; unique
("tincturing"	nil	(((t i ng k )1)((ch @ r )0)((i ng )0)))	;; ing
("tingeing"	nil	(((t i n jh )1)((i ng )0)))	;; ing
("tingling"	nil	(((t i ng )1)((g l! )0)((i ng )0)))	;; ing
("tinkering"	nil	(((t i ng )1)((k @ r )0)((i ng )0)))	;; ing
("tinkling"	nil	(((t i ng )1)((k l! )0)((i ng )0)))	;; ing
("tinning"	nil	(((t i n )1)((i ng )0)))	;; ing
("tino"	nil	(((t ii) 1) ((n oo) 0)))	;; unique
("tinselling"	nil	(((t i n )1)((s l! )0)((i ng )0)))	;; ing
("tinting"	nil	(((t i n t )1)((i ng )0)))	;; ing
("tintinnabulating"	nil	(((t i n )1)((t i )0)((n a )1)((b y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("tio"	nil	(((t ii) 1) ((oo) 0)))	;; unique
("tip-toeing"	nil	(((t i p )1)((t ou )1)((i ng )0)))	;; ing
("tipare"	nil	(((t ii) 1) ((p aa) 0) ((r ei) 0)))	;; unique
("tipau"	nil	(((t ii) 1) ((p ow) 0)))	;; unique
("tipi"	nil	(((t i) 1) ((p ii) 0)))	;; unique
("tipping"	nil	(((t i p )1)((i ng )0)))	;; ing
("tippling"	nil	(((t i )1)((p l! )0)((i ng )0)))	;; ing
("tiptoeing"	nil	(((t i p )1)((t - ou )0)((i ng )0)))	;; ing
("tipuna"	nil	(((t ii) 1) ((p uu) 0) ((n @) 0)))	;; unique
("tiremaking"	nil	(((t ai @ )1)((m ei k )1)((i ng )0)))	;; ing
("tireni"	nil	(((t ii) 1) ((r e) 0) ((n ii) 0)))	;; unique
("tiring"	nil	(((t ai @ r )1)((i ng )0)))	;; ing
("tiriti"	nil	(((t i) 1) ((r i) 0) ((t^ ii) 0)))	;; unique
("tis"	nil	(((t i z) 1)))	;; unique
("titaniums"	nil	(((t i) 0) ((t ei) 1) ((n ii @ m z) 0)))	;; unique
("tithing"	nil	(((t ai dh )1)((i ng )0)))	;; ing
("titi"	nil	(((t ii) 1) ((t^ ii) 0)))	;; unique
("titi-wainui"	nil	(((t i) 0) ((t^ ii) 0) ((w ai) 1) ((n uu) 0) ((ii) 0)))	;; unique
("titillating"	nil	(((t i )1)((t^ i l )0)((ei t^ )1)((i ng )0)))	;; ing
("titipounamu"	nil	(((t i) 0) ((t^ ii) 0) ((p ou) 1) ((n aa) 0) ((m uu) 0)))	;; unique
("titivating"	nil	(((t i )1)((t^ @ )0)((v ei t^ )1)((i ng )0)))	;; ing
("titleholder"	nil	(((t ai) 1) ((t l!) 0) ((h o l d) 1) ((@) 0)))	;; oul
("titleholders"	nil	(((t ai) 1) ((t l!) 0) ((h o l d) 1) ((@ z) 0)))	;; oul
("titling"	nil	(((t ai )1)((t l! )0)((i ng )0)))	;; ing
("tito"	nil	(((t ii) 1) ((t^ ou) 0))) 	;; maori
("titoki"	nil	(((t ii) 1) ((t ou) 0) ((k ii) 0)))	;; unique
("titos"	nil	(((t ii) 1) ((t^ ou z) 0)))	;; unique
("tittering"	nil	(((t i )1)((t^ @ r )0)((i ng )0)))	;; ing
("tittivating"	nil	(((t i )1)((t^ @ )0)((v ei t^ )1)((i ng )0)))	;; ing
("tittle-tattling"	nil	(((t i )1)((t l! )0)((t a )1)((t l! )0)((i ng )0)))	;; ing
("tittling"	nil	(((t i )1)((t l! )0)((i ng )0)))	;; ing
("tiwai"	nil	(((t ii) 1) ((w ai) 0)))	;; unique
("tiwakawaka"	nil	(((t ii) 0) ((w aa) 1) ((k aa) 0) ((w aa) 0) ((k @) 0)))	;; unique
("toa"	nil	(((t oo) 1) ((@) 0)))	;; unique
("toad-in-the-hole"	nil	(((t ou d) 1) ((i n) 0) ((dh @) 0) ((h o l) 1)))	;; oul
("toadstool"	nil	(((t ou d) 1) ((s t u l) 0)))	;; uul
("toadstools"	nil	(((t ou d) 1) ((s t u l z) 0)))	;; uul
("toadying"	nil	(((t ou d )1)((iy )0)((i ng )0)))	;; ing
("toanui"	nil	(((t oo) 1) ((aa) 0) ((n uu) 0) ((ii) 0)))	;; unique
("toasting"	nil	(((t ou s t )1)((i ng )0)))	;; ing
("toatoa"	nil	(((t ou) 1) ((@) 0) ((t ou) 0) ((@) 0)))	;; unique
("tobagos"	nil	(((t @) 0) ((b ei) 1) ((g ou z) 0)))	;; unique
("tobogganing"	nil	(((t @ )0)((b o )1)((g @ n )0)((i ng )0)))	;; ing
("tobys"	nil	(((t ou) 1) ((b ii z) 0)))	;; unique
("todayll"	nil	(((t @) 0) ((d ei @ l) 1)))	;; unique
("toddling"	nil	(((t o )1)((d l! )0)((i ng )0)))	;; ing
("todds"	nil	(((t o d z) 1)))	;; unique
("toehold"	nil	(((t ou) 1) ((h o l d) 0)))	;; oul
("toeholds"	nil	(((t ou) 1) ((h o l d z) 0)))	;; oul
("toeing"	nil	(((t ou )1)((i ng )0)))	;; ing
("toetoe"	nil	(((t ou) 1) ((ii) 0) ((t ou) 0) ((ii) 0)))	;; unique
("togging"	nil	(((t o g )1)((i ng )0)))	;; ing
("toggling"	nil	(((t o )1)((g l! )0)((i ng )0)))	;; ing
("togos"	nil	(((t ou) 1) ((g ou z) 0)))	;; unique
("toheroa"	nil	(((t ou) 0) ((@) 0) ((r ou) 1) ((@) 0)))	;; unique
("tohora"	nil	(((t oo) 0) ((h oo) 0) ((r aa) 1)))	;; unique
("tohunga"	nil	(((t oo) 1) ((h uu ng) 0) ((@) 0)))	;; unique
("toi"	nil	(((t oo) 1) ((ii) 0)))	;; unique
("toiling"	nil	(((t oi l )1)((i ng )0)))	;; ing
("toitoi"	nil	(((t o i) 1) ((t oi) 0)))	;; unique
("tokenizing"	nil	(((t ou )1)((k @ n )0)((ai z )1)((i ng )0)))	;; ing
("toki"	nil	(((t oo) 1) ((k ii) 0)))	;; unique
("toko"	nil	(((t ou) 1) ((k ou) 0)))	;; unique
("tokoeka"	nil	(((t oo) 0) ((k oo) 1) ((e) 0) ((k @) 0)))	;; unique
("tokotoko"	nil	(((t ou) 1) ((k ou) 0) ((t ou) 1) ((k ou) 0)))	;; unique
("told"	nil	(((t o l d) 1)))	;; oul
("tolerating"	nil	(((t o )1)((l @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("toll"	nil	(((t o l) 1)))	;; oul
("toll-gatherer"	nil	(((t o l) 1) ((g a) 1) ((dh @ r) 0) ((@) 0)))	;; oul
("toll-gatherers"	nil	(((t o l) 1) ((g a) 1) ((dh @ r) 0) ((@ z) 0)))	;; oul
("tollable"	nil	(((t o l) 1) ((@) 0) ((b l!) 0)))	;; oul
("tollbooth"	nil	(((t o l) 1) ((b uu dh) 0)))	;; oul
("tollbooths"	nil	(((t o l) 1) ((b uu dh z) 0)))	;; oul
("tollbridge"	nil	(((t o l) 1) ((b r i jh) 0)))	;; oul
("tollbridges"	nil	(((t o l) 1) ((b r i jh) 1) ((@ z) 0)))	;; oul
("tollcollector"	nil	(((t o l) 1) ((k @) 0) ((l e k t) 1) ((@) 0)))	;; oul
("tollcollectors"	nil	(((t o l) 1) ((k @) 0) ((l e k t) 1) ((@ z) 0)))	;; oul
("tolled"	nil	(((t o l d) 1)))	;; oul
("toller"	nil	(((t o l) 1) ((@) 0)))	;; oul
("tollesbury"	nil	(((t o l z) 1) ((b @) 0) ((r ii) 0)))	;; oul
("tollfree"	nil	(((t o l) 0) ((f r ii) 1)))	;; oul
("tollgate"	nil	(((t o l) 1) ((g ei t) 0)))	;; oul
("tollgates"	nil	(((t o l) 1) ((g ei t s) 0)))	;; oul
("tollhouse"	nil	(((t o l) 1) ((h ow s) 0)))	;; oul
("tollhouses"	nil	(((t o l) 1) ((h ow z) 1) ((@ z) 0)))	;; oul
("tolling"	nil	(((t o l) 1) ((i ng) 0)))	;; oul
("tolls"	nil	(((t o l z) 1)))	;; oul
("tombola"	nil	(((t o m) 0) ((b o) 1) ((l @) 0)))	;; oul
("tombolas"	nil	(((t o m) 0) ((b o) 1) ((l @ z) 0)))	;; oul
("tomfool"	nil	(((t o m) 0) ((f u l) 1)))	;; uul
("tomfoolery"	nil	(((t o m) 0) ((f u l) 1) ((@) 0) ((r ii) 0)))	;; uul
("tomo"	nil	(((t ou) 1) ((m ou) 0)))	;; unique
("tompkinss"	nil	(((t o m) 1) ((k i n s) 0) ((@ z) 0)))	;; unique
("toning"	nil	(((t ou n )1)((i ng )0)))	;; ing
("tonys"	nil	(((t ou) 1) ((n ii z) 0)))	;; unique
("tool"	nil	(((t u l) 1)))	;; uul
("toolbar"	nil	(((t u l) 1) ((b aa) 0)))	;; uul
("toolbars"	nil	(((t u l) 1) ((b aa z) 0)))	;; uul
("toolbox"	nil	(((t u l) 1) ((b o k s) 0)))	;; uul
("toolboxes"	nil	(((t u l) 1) ((b o k s) 1) ((@ z) 0)))	;; uul
("toolchest"	nil	(((t u l) 1) ((ch e s t) 0)))	;; uul
("toolchests"	nil	(((t u l) 1) ((ch e s t s) 0)))	;; uul
("toole"	nil	(((t u l) 1)))	;; uul
("tooling"	nil	(((t u l) 1) ((i ng) 0)))	;; uul
("toolkit"	nil	(((t u l) 1) ((k i t) 0)))	;; uul
("toolkits"	nil	(((t u l) 1) ((k i t s) 0)))	;; uul
("toolmake"	nil	(((t u l) 1) ((m ei k) 0)))	;; uul
("toolmaker"	nil	(((t u l) 1) ((m ei k) 1) ((@) 0)))	;; uul
("toolmakers"	nil	(((t u l) 1) ((m ei k) 1) ((@ z) 0)))	;; uul
("toolmaking"	nil	(((t u l) 1) ((m ei k) 1) ((i ng) 0)))	;; uul
("tools"	nil	(((t u l z) 1)))	;; uul
("toolset"	nil	(((t u l) 1) ((s e t) 0)))	;; uul
("toolsets"	nil	(((t u l) 1) ((s e t s) 0)))	;; uul
("toolsmith"	nil	(((t u l) 1) ((s m i th) 0)))	;; uul
("toolsmiths"	nil	(((t u l) 1) ((s m i th s) 0)))	;; uul
("toothbrushing"	nil	(((t uu th )1)((b r uh sh )1)((i ng )0)))	;; ing
("tooting"	nil	(((t uu t^ )1)((i ng )0)))	;; ing
("tootling"	nil	(((t uu )1)((t l! )0)((i ng )0)))	;; ing
("top-ranking"	nil	(((t - o p )0)((r a ng k )1)((i ng )0)))	;; ing
("topknotting"	nil	(((t o p )1)((n o t^ )1)((i ng )0)))	;; ing
("topping"	nil	(((t o p )1)((i ng )0)))	;; ing
("toppling"	nil	(((t o )1)((p l! )0)((i ng )0)))	;; ing
("topspinning"	nil	(((t o p )1)((s p i n )1)((i ng )0)))	;; ing
("topuni"	nil	(((t oo) 1) ((p uu) 0) ((n ii) 0)))	;; unique
("torching"	nil	(((t oo ch )1)((i ng )0)))	;; ing
("torea"	nil	(((t oo) 1) ((r e) 0) ((@) 0)))	;; unique
("torehe"	nil	(((t oo) 1) ((r e) 0) ((h ei) 0)))	;; unique
("tormenting"	nil	(((t oo )0)((m e n t )1)((i ng )0)))	;; ing
("toro"	nil	(((t oo) 1) ((r ou) 0)))	;; unique
("toroa"	nil	(((t oo) 1) ((r ou) 0) ((@) 0)))	;; unique
("torontos"	nil	(((t @) 0) ((r o n) 1) ((t ou z) 0)))	;; unique
("toropapa"	nil	(((t oo) 1) ((r ou) 0) ((p aa) 0) ((p @) 0)))	;; unique
("tororaro"	nil	(((t oo) 0) ((r ou) 0) ((r aa) 1) ((r ou) 0)))	;; unique
("torori"	nil	(((t oo) 1) ((r ou) 0) ((r ii) 0)))	;; unique
("torotoro"	nil	(((t oo) 1) ((r ou) 0) ((t oo) 1) ((r ou) 0)))	;; unique
("torpedoing"	nil	(((t oo )0)((p ii )1)((d ou )0)((i ng )0)))	;; ing
("torturing"	nil	(((t oo )1)((ch @ r )0)((i ng )0)))	;; ing
("toshibas"	nil	(((t o) 0) ((sh ii) 1) ((b @ z) 0)))	;; unique
("tossing"	nil	(((t o s )1)((i ng )0)))	;; ing
("totaling"	nil	(((t ou )1)((t l! )0)((i ng )0)))	;; ing
("totalling"	nil	(((t ou )1)((t l! )0)((i ng )0)))	;; ing
("totara"	nil	(((t ou) 1) ((t^ @) 0) ((r @) 0)))	;; unique
("tother"	nil	(((t uh) 1) ((dh @) 0)))	;; unique
("toting"	nil	(((t ou t^ )1)((i ng )0)))	;; ing
("totokipio"	nil	(((t oo) 0) ((t oo) 1) ((k ii) 0) ((p ii) 0) ((oo) 0)))	;; unique
("tottering"	nil	(((t o )1)((t^ @ r )0)((i ng )0)))	;; ing
("totting"	nil	(((t o t^ )1)((i ng )0)))	;; ing
("touching"	nil	(((t uh ch )1)((i ng )0)))	;; ing
("toughening"	nil	(((t uh f )1)((n! )0)((i ng )0)))	;; ing
("touring"	nil	(((t ur r )1)((i ng )0)))	;; ing
("tourisms"	nil	(((t uu r) 1) ((i) 0) ((z m! z) 0)))	;; unique
("tousling"	nil	(((t ow )1)((z l! )0)((i ng )0)))	;; ing
("touting"	nil	(((t ow t^ )1)((i ng )0)))	;; ing
("toutouwai"	nil	(((t ou) 1) ((t^ @) 0) ((w ai) 1)))	;; unique
("towai"	nil	(((t ou) 1) ((w ai) 0)))	;; unique
("toweling"	nil	(((t ow @ l )1)((i ng )0)))	;; ing
("towelling"	nil	(((t ow @ l )1)((i ng )0)))	;; ing
("towering"	nil	(((t ow @ r )1)((i ng )0)))	;; ing
("towing"	nil	(((t ou )1)((i ng )0)))	;; ing
("townscaping"	nil	(((t ow n )1)((s k ei p )1)((i ng )0)))	;; ing
("townsends"	nil	(((t ow n) 1) ((z e n d z) 0)))	;; unique
("toying"	nil	(((t oi )1)((i ng )0)))	;; ing
("toymaking"	nil	(((t oi )1)((m ei k )1)((i ng )0)))	;; ing
("tracing"	nil	(((t r ei s )1)((i ng )0)))	;; ing
("tracking"	nil	(((t r a k )1)((i ng )0)))	;; ing
("tracys"	nil	(((t r ei) 1) ((s ii z) 0)))	;; unique
("trademarking"	nil	(((t r ei d )1)((m aa k )1)((i ng )0)))	;; ing
("tradesmans"	nil	(((t r ei d z) 1) ((m @ n z) 0)))	;; unique
("tradesmens"	nil	(((t r ei d z) 1) ((m @ n z) 0)))	;; unique
("trading"	nil	(((t r ei d )1)((i ng )0)))	;; ing
("traducing"	nil	(((t r @ )0)((d y uu s )1)((i ng )0)))	;; ing
("trafficking"	nil	(((t r a )1)((f i k )0)((i ng )0)))	;; ing
("trailblazing"	nil	(((t r ei l )1)((b l ei z )1)((i ng )0)))	;; ing
("trailing"	nil	(((t r ei l )1)((i ng )0)))	;; ing
("training"	nil	(((t r ei n )1)((i ng )0)))	;; ing
("traipsing"	nil	(((t r ei p s )1)((i ng )0)))	;; ing
("tramlining"	nil	(((t r a m )1)((l ai n )1)((i ng )0)))	;; ing
("trammeling"	nil	(((t r a )1)((m l! )0)((i ng )0)))	;; ing
("trammelling"	nil	(((t r a )1)((m l! )0)((i ng )0)))	;; ing
("tramping"	nil	(((t r a m p )1)((i ng )0)))	;; ing
("trampling"	nil	(((t r a m )1)((p l! )0)((i ng )0)))	;; ing
("trampolining"	nil	(((t r a m )1)((p @ )0)((l ii n )1)((i ng )0)))	;; ing
("tranquilizing"	nil	(((t r a ng )1)((k w @ l )0)((ai z )1)((i ng )0)))	;; ing
("tranquillising"	nil	(((t r a ng )1)((k w @ l )0)((ai z )1)((i ng )0)))	;; ing
("transacting"	nil	(((t r a n )0)((z a k t )1)((i ng )0)))	;; ing
("transceiving"	nil	(((t r a n )1)((s ii )1)((v i ng )0)))	;; ing
("transcending"	nil	(((t r a n )0)((s e n d )1)((i ng )0)))	;; ing
("transcribing"	nil	(((t r a n )0)((s k r ai b )1)((i ng )0)))	;; ing
("transecting"	nil	(((t r a n )0)((s e k t )1)((i ng )0)))	;; ing
("transfering"	nil	(((t r a n s )0)((f @@r r )1)((i ng )0)))	;; ing
("transferring"	nil	(((t r a n s )0)((f @@r r )1)((i ng )0)))	;; ing
("transfiguring"	nil	(((t r a n z )0)((f i )1)((g @ r )0)((i ng )0)))	;; ing
("transfixing"	nil	(((t r a n s )0)((f i k s )1)((i ng )0)))	;; ing
("transforming"	nil	(((t r a n s )0)((f oo m )1)((i ng )0)))	;; ing
("transfusing"	nil	(((t r a n s )0)((f y uu z )1)((i ng )0)))	;; ing
("transgressing"	nil	(((t r a n z )0)((g r e s )1)((i ng )0)))	;; ing
("transitioning"	nil	(((t r a n )0)((z i )1)((sh n! )0)((i ng )0)))	;; ing
("translating"	nil	(((t r a n z )0)((l ei t^ )1)((i ng )0)))	;; ing
("transliterating"	nil	(((t r a n z )0)((l i )1)((t^ @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("transmigrating"	nil	(((t r a n z )1)((m ai )0)((g r ei t^ )1)((i ng )0)))	;; ing
("transmitting"	nil	(((t r a n z )0)((m i t^ )1)((i ng )0)))	;; ing
("transmogrifying"	nil	(((t r a n z )0)((m o )1)((g r @ )0)((f ai )1)((i ng )0)))	;; ing
("transmuting"	nil	(((t r a n z )0)((m y uu t^ )1)((i ng )0)))	;; ing
("transpiring"	nil	(((t r a n )0)((s p ai @ r )1)((i ng )0)))	;; ing
("transplanting"	nil	(((t r a n s )0)((p l aa n t )1)((i ng )0)))	;; ing
("transpolar"	nil	(((t r a n z) 0) ((p o l) 1) ((@) 0)))	;; oul
("transporting"	nil	(((t r a n )0)((s p oo t^ )1)((i ng )0)))	;; ing
("transposing"	nil	(((t r a n s )0)((p ou z )1)((i ng )0)))	;; ing
("transshipping"	nil	(((t r a n )0)((sh i p )1)((i ng )0)))	;; ing
("trapping"	nil	(((t r a p )1)((i ng )0)))	;; ing
("trapshooting"	nil	(((t r a p )1)((sh uu t^ )1)((i ng )0)))	;; ing
("trashing"	nil	(((t r a sh )1)((i ng )0)))	;; ing
("traumatizing"	nil	(((t r oo )1)((m @ )0)((t ai z )1)((i ng )0)))	;; ing
("traveling"	nil	(((t r a )1)((v l! )0)((i ng )0)))	;; ing
("travelling"	nil	(((t r a )1)((v l! )0)((i ng )0)))	;; ing
("traversing"	nil	(((t r @ )0)((v @@r s )1)((i ng )0)))	;; ing
("trawling"	nil	(((t r oo l )1)((i ng )0)))	;; ing
("treading"	nil	(((t r e d )1)((i ng )0)))	;; ing
("treasuring"	nil	(((t r e )1)((zh r )0)((i ng )0)))	;; ing
("treasurys"	nil	(((t r e) 1) ((zh @ r) 0) ((ii z) 0)))	;; unique
("treating"	nil	(((t r ii t^ )1)((i ng )0)))	;; ing
("treatys"	nil	(((t r ii) 1) ((t^ ii z) 0)))	;; unique
("trebling"	nil	(((t r e )1)((b l! )0)((i ng )0)))	;; ing
("trekking"	nil	(((t r e k )1)((i ng )0)))	;; ing
("trellising"	nil	(((t r a )1)((l i s )0)((i ng )0)))	;; ing
("trembling"	nil	(((t r e m )1)((b l! )0)((i ng )0)))	;; ing
("trenching"	nil	(((t r e n ch )1)((i ng )0)))	;; ing
("trend-setting"	nil	(((t r e n d )1)((s e t^ )1)((i ng )0)))	;; ing
("trending"	nil	(((t r e n d )1)((i ng )0)))	;; ing
("trendsetting"	nil	(((t r e n d )1)((s e t^ )1)((i ng )0)))	;; ing
("trepanning"	nil	(((t r @ )0)((p a n )1)((i ng )0)))	;; ing
("trespassing"	nil	(((t r e )1)((s p @ s )0)((i ng )0)))	;; ing
("trevors"	nil	(((t r e) 1) ((v @ z) 0)))	;; unique
("triangulating"	nil	(((t r ai )0)((a ng )1)((g y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("tricking"	nil	(((t r i k )1)((i ng )0)))	;; ing
("trickling"	nil	(((t r i )1)((k l! )0)((i ng )0)))	;; ing
("tricycling"	nil	(((t r ai )1)((s i )0)((k l i ng )0)))	;; ing
("triennializing"	nil	(((t r ai )0)((e )1)((n iy @ l )0)((ai z )1)((i ng )0)))	;; ing
("trifling"	nil	(((t r ai )1)((f l! )0)((i ng )0)))	;; ing
("triggering"	nil	(((t r i )1)((g @ r )0)((i ng )0)))	;; ing
("trilling"	nil	(((t r i l )1)((i ng )0)))	;; ing
("trimethoprim"	nil	(((t r @) 0) ((m e) 1) ((th @) 0) ((p r i m) 2)))	;; unique
("trimming"	nil	(((t r i m )1)((i ng )0)))	;; ing
("trinitrate"	nil	(((t r i) 1) ((n i) 0) ((t r ei t) 2)))	;; unique
("trinketing"	nil	(((t r i ng )1)((k i t^ )0)((i ng )0)))	;; ing
("triplicating"	nil	(((t r i )1)((p l @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("tripling"	nil	(((t r i )1)((p l! )0)((i ng )0)))	;; ing
("tripolis"	nil	(((t r i) 1) ((p @) 0) ((l ii z) 0)))	;; unique
("tripping"	nil	(((t r i p )1)((i ng )0)))	;; ing
("trisecting"	nil	(((t r ai )0)((s e k t )1)((i ng )0)))	;; ing
("triumphing"	nil	(((t r ai )1)((uh m f )0)((i ng )0)))	;; ing
("trivialising"	nil	(((t r i )1)((v iy @ l )0)((ai z )1)((i ng )0)))	;; ing
("trivialitys"	nil	(((t r i) 1) ((v ii) 0) ((a l) 1) ((@) 0) ((t^ ii z) 0)))	;; unique
("trivializing"	nil	(((t r i )1)((v iy @ l )0)((ai z )1)((i ng )0)))	;; ing
("troll"	nil	(((t r o l) 1)))	;; oul
("trolled"	nil	(((t r o l d) 1)))	;; oul
("troller"	nil	(((t r o l) 1) ((@) 0)))	;; oul
("trollers"	nil	(((t r o l) 1) ((@ z) 0)))	;; oul
("trolling"	nil	(((t r o l) 1) ((i ng) 0)))	;; oul
("trollings"	nil	(((t r o l) 1) ((i ng z) 0)))	;; oul
("trolls"	nil	(((t r o l z) 1)))	;; oul
("tromping"	nil	(((t r o m p )1)((i ng )0)))	;; ing
("trooping"	nil	(((t r uu p )1)((i ng )0)))	;; ing
("trotting"	nil	(((t r o t^ )1)((i ng )0)))	;; ing
("troublemaking"	nil	(((t r uh )1)((b l! )0)((m ei k )1)((i ng )0)))	;; ing
("troubleshooting"	nil	(((t r uh )1)((b l! )0)((sh uu t^ )1)((i ng )0)))	;; ing
("troublesweeping"	nil	(((t r uh )1)((b l! )0)((s w ii p )1)((i ng )0)))	;; ing
("troubling"	nil	(((t r uh )1)((b l! )0)((i ng )0)))	;; ing
("trouncing"	nil	(((t r ow n s )1)((i ng )0)))	;; ing
("trousering"	nil	(((t r ow )1)((z @ r )0)((i ng )0)))	;; ing
("troweling"	nil	(((t r ow @ l )1)((i ng )0)))	;; ing
("trowelling"	nil	(((t r ow @ l )1)((i ng )0)))	;; ing
("troys"	nil	(((t r oi z) 1)))	;; unique
("trucking"	nil	(((t r uh k )1)((i ng )0)))	;; ing
("trudging"	nil	(((t r uh jh )1)((i ng )0)))	;; ing
("trumpeting"	nil	(((t r uh m )1)((p @ t^ )0)((i ng )0)))	;; ing
("trumping"	nil	(((t r uh m p )1)((i ng )0)))	;; ing
("truncating"	nil	(((t r uh ng )0)((k ei t^ )1)((i ng )0)))	;; ing
("trundling"	nil	(((t r uh n )1)((d l! )0)((i ng )0)))	;; ing
("trunking"	nil	(((t r uh ng k )1)((i ng )0)))	;; ing
("trussing"	nil	(((t r uh s )1)((i ng )0)))	;; ing
("trusting"	nil	(((t r uh s t )1)((i ng )0)))	;; ing
("truthing"	nil	(((t r uu th )1)((i ng )0)))	;; ing
("trying"	nil	(((t r ai )1)((i ng )0)))	;; ing
("ts"	nil	(((t ii z) 1)))	;; unique
("tsais"	nil	(((t s ai z) 1)))	;; unique
("tuakana"	nil	(((t uu) 0) ((@) 0) ((k aa) 1) ((n @) 0)))	;; unique
("tuakura"	nil	(((t uu) 1) ((@) 0) ((k uu) 0) ((r @) 0)))	;; unique
("tuangi"	nil	(((t uu) 1) ((uh ng) 0) ((ii) 0)))	;; unique
("tuatara"	nil	(((t uu) 0) ((@) 0) ((t aa) 1) ((r @) 0)))	;; unique
("tuatini"	nil	(((t uu) 1) ((@) 0) ((t i) 0) ((n ii) 0)))	;; unique
("tuatua"	nil	(((t uu) 1) ((@) 0) ((t uu) 1) ((@) 0)))	;; unique
("tubing"	nil	(((t y uu b )1)((i ng )0)))	;; ing
("tucking"	nil	(((t uh k )1)((i ng )0)))	;; ing
("tuere"	nil	(((t uu) 1) ((e) 0) ((r ei) 0)))	;; unique
("tufting"	nil	(((t uh f t )1)((i ng )0)))	;; ing
("tugging"	nil	(((t uh g )1)((i ng )0)))	;; ing
("tui"	nil	(((t uu) 1) ((ii) 0)))	;; unique
("tuku"	nil	(((t uu) 1) ((k uu) 0)))	;; unique
("tukutuku"	nil	(((t u) 1) ((k uu) 0) ((t u) 1) ((k uu) 0)))	;; unique
("tumatakura"	nil	(((t uu) 1) ((m aa) 0) ((t aa) 0) ((k uu) 1) ((r @) 0)))	;; unique
("tumatauenga"	nil	(((t uu) 1) ((m aa) 0) ((t ow) 0) ((e ng) 0) ((@) 0)))	;; unique
("tumbling"	nil	(((t uh m )1)((b l! )0)((i ng )0)))	;; ing
("tumuaki"	nil	(((t uu) 1) ((m uu) 0) ((aa) 0) ((k ii) 0)))	;; unique
("tuning"	nil	(((t y uu n )1)((i ng )0)))	;; ing
("tunisias"	nil	(((t y uw) 0) ((n i) 1) ((z ii @ z) 0)))	;; unique
("tunneling"	nil	(((t uh )1)((n l! )0)((i ng )0)))	;; ing
("tunnelling"	nil	(((t uh )1)((n l! )0)((i ng )0)))	;; ing
("tuokura"	nil	(((t uu) 1) ((oo) 0) ((k uu) 1) ((r @) 0)))	;; unique
("tupakihi"	nil	(((t uu) 1) ((p aa) 0) ((k ii) 0) ((h ii) 0)))	;; unique
("tupapaku"	nil	(((t uu) 0) ((p aa) 1) ((p aa) 0) ((k uu) 0)))	;; unique
("tupara"	nil	(((t uu) 1) ((p aa) 0) ((r @) 0)))	;; unique
("tupare"	nil	(((t uu) 1) ((p aa) 0) ((r ei) 0)))	;; unique
("tupuna"	nil	(((t uu) 1) ((p uu) 0) ((n @) 0)))	;; unique
("turanga-nui-a-kiwa"	nil	(((t uu) 0) ((r uh ng) 0) ((a) 0) ((n uu) 0) ((ii) 0) ((aa) 0) ((k ii) 0) ((w @) 0)))	;; unique
("turangawaewae"	nil	(((t uu) 1) ((r uh ng) 0) ((aa) 0) ((w aa) 1) ((e) 0) ((w aa) 0) ((ei) 0)))	;; unique
("turbocharging"	nil	(((t @@r )1)((b ou )0)((ch aa jh )1)((i ng )0)))	;; ing
("turehu"	nil	(((t uu) 1) ((r e) 0) ((h uu) 0)))	;; unique
("turepo"	nil	(((t uu) 1) ((r e) 0) ((p oo) 0)))	;; unique
("turfing"	nil	(((t @@r f )1)((i ng )0)))	;; ing
("turing"	nil	(((t y ur )1)((r i ng )0)))	;; ing
("turings"	nil	(((t y uu) 1) ((r i ng z) 0)))	;; unique
("turnbulls"	nil	(((t @@r n) 1) ((b u l z) 0)))	;; unique
("turning"	nil	(((t @@r n )1)((i ng )0)))	;; ing
("turtling"	nil	(((t @@r )1)((t l! )0)((i ng )0)))	;; ing
("turutu"	nil	(((t u) 1) ((r @) 0) ((t uu) 0)))	;; unique
("tussling"	nil	(((t uh )1)((s l! )0)((i ng )0)))	;; ing
("tutae"	nil	(((t uu) 1) ((t ai) 0)))	;; unique
("tutaekuri"	nil	(((t uu) 1) ((t aa) 0) ((e) 0) ((k uu) 0) ((r ii) 0)))	;; unique
("tutoring"	nil	(((t y uu )1)((t^ @ r )0)((i ng )0)))	;; ing
("tutting"	nil	(((t uh t^ )1)((i ng )0)))	;; ing
("tutukiwi"	nil	(((t uu) 1) ((t uu) 0) ((k ii) 1) ((w ii) 0)))	;; unique
("tuturiwhatu"	nil	(((t u) 0) ((t u) 1) ((r ii) 0) ((f aa) 1) ((t uu) 0)))	;; unique
("tuturuatu"	nil	(((t uu) 0) ((t uu) 0) ((r uu) 1) ((aa) 0) ((t uu) 0)))	;; unique
("twaddling"	nil	(((t w o )1)((d l! )0)((i ng )0)))	;; ing
("twanging"	nil	(((t w a ng )1)((i ng )0)))	;; ing
("tweaking"	nil	(((t w ii k )1)((i ng )0)))	;; ing
("tweening"	nil	(((t w ii n )1)((i ng )0)))	;; ing
("tweeting"	nil	(((t w ii t^ )1)((i ng )0)))	;; ing
("twelvefold"	nil	(((t w a l v) 1) ((f o l d) 0)))	;; oul
("twenty-year-old"	nil	(((t w e n) 1) ((t ii) 0) ((y ir r) 0) ((o l d) 1)))	;; oul
("twenty-year-olds"	nil	(((t w e n) 1) ((t ii) 0) ((y ir r) 0) ((o l d z) 1)))	;; oul
("twentyfold"	nil	(((t w e n) 1) ((t ii) 0) ((f o l d) 1)))	;; oul
("twiddling"	nil	(((t w i )1)((d l! )0)((i ng )0)))	;; ing
("twigging"	nil	(((t w i g )1)((i ng )0)))	;; ing
("twingeing"	nil	(((t w i n jh )1)((i ng )0)))	;; ing
("twining"	nil	(((t w ai )1)((n i ng )0)))	;; ing
("twinkling"	nil	(((t w i ng )1)((k l! )0)((i ng )0)))	;; ing
("twinning"	nil	(((t w i n )1)((i ng )0)))	;; ing
("twirling"	nil	(((t w @@r l )1)((i ng )0)))	;; ing
("twisting"	nil	(((t w i s t )1)((i ng )0)))	;; ing
("twitching"	nil	(((t w i ch )1)((i ng )0)))	;; ing
("twittering"	nil	(((t w i )1)((t^ @ r )0)((i ng )0)))	;; ing
("twitting"	nil	(((t w i t^ )1)((i ng )0)))	;; ing
("two-fold"	nil	(((t uu) 1) ((f o l d) 0)))	;; oul
("two-year-old"	nil	(((t uu) 1) ((y ir r) 0) ((o l d) 1)))	;; oul
("two-year-olds"	nil	(((t uu) 1) ((y ir r) 0) ((o l d z) 1)))	;; oul
("twofold"	nil	(((t uu) 1) ((f o l d) 0)))	;; oul
("tying"	nil	(((t ai )1)((i ng )0)))	;; ing
("typecasting"	nil	(((t ai p )1)((k aa s t )1)((i ng )0)))	;; ing
("typechecking"	nil	(((t ai p )1)((ch e k )1)((i ng )0)))	;; ing
("typesetting"	nil	(((t ai p )1)((s e t^ )1)((i ng )0)))	;; ing
("typewriting"	nil	(((t ai p )1)((r ai t^ )1)((i ng )0)))	;; ing
("typifying"	nil	(((t i p )1)((i )0)((f ai )1)((i ng )0)))	;; ing
("typing"	nil	(((t ai p )1)((i ng )0)))	;; ing
("tyrannizing"	nil	(((t i )1)((r @ )0)((n ai z )1)((i ng )0)))	;; ing
("tyrol"	nil	(((t i) 0) ((r o l) 1)))	;; oul
("u-turning"	nil	(((y uu )1)((t - @@r n )0)((i ng )0)))	;; ing
("ugandas"	nil	(((y uw) 0) ((g a n) 1) ((d @ z) 0)))	;; unique
("ugly-looking"	nil	(((uh )1)((g l iy )0)((l u k )1)((i ng )0)))	;; ing
("ukraines"	nil	(((y uw) 0) ((k r ei n z) 1)))	;; unique
("ululating"	nil	(((o )1)((l y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("umu"	nil	(((uw) 1) ((m uu) 0)))	;; unique
("unabating"	nil	(((uh n )1)((@ )0)((b ei t^ )1)((i ng )0)))	;; ing
("unaccommodating"	nil	(((uh n )1)((@ )0)((k o )1)((m @ )0)((d ei t^ )1)((i ng )0)))	;; ing
("unadmiring"	nil	(((uh n )1)((@ d )0)((m ai @ r )1)((i ng )0)))	;; ing
("unaffecting"	nil	(((uh n )1)((@ )0)((f e k t )1)((i ng )0)))	;; ing
("unaltering"	nil	(((uh n )0)((oo l )1)((t @ r )0)((i ng )0)))	;; ing
("unamusing"	nil	(((uh n )1)((@ )0)((m y uu z )1)((i ng )0)))	;; ing
("unanswering"	nil	(((uh n )0)((aa n )1)((s @ r )0)((i ng )0)))	;; ing
("unappealing"	nil	(((uh n )1)((@ )0)((p ii l )1)((i ng )0)))	;; ing
("unappetising"	nil	(((uh n )0)((a )1)((p @ )0)((t ai z )1)((i ng )0)))	;; ing
("unappetizing"	nil	(((uh n )0)((a )1)((p @ )0)((t ai z )1)((i ng )0)))	;; ing
("unapprehending"	nil	(((uh n )1)((a )0)((p r i )0)((h e n d )1)((i ng )0)))	;; ing
("unapproving"	nil	(((uh n )1)((@ )0)((p r uu v )1)((i ng )0)))	;; ing
("unaspiring"	nil	(((uh n )1)((@ )0)((s p ai @ r )1)((i ng )0)))	;; ing
("unassisting"	nil	(((uh n )1)((@ )0)((s i s t )1)((i ng )0)))	;; ing
("unassuming"	nil	(((uh n )1)((@ )0)((s y uu m )1)((i ng )0)))	;; ing
("unattending"	nil	(((uh n )1)((@ )0)((t e n d )1)((i ng )0)))	;; ing
("unavailing"	nil	(((uh n )1)((@ )0)((v ei l )1)((i ng )0)))	;; ing
("unawakening"	nil	(((uh n )1)((@ )0)((w ei k )1)((@ n )0)((i ng )0)))	;; ing
("unbalancing"	nil	(((uh n )0)((b a )1)((l @ n s )0)((i ng )0)))	;; ing
("unbanning"	nil	(((uh n )0)((b a n )1)((i ng )0)))	;; ing
("unbarring"	nil	(((uh n )0)((b aa r )1)((i ng )0)))	;; ing
("unbearing"	nil	(((uh n )0)((b ir r )1)((i ng )0)))	;; ing
("unbecoming"	nil	(((uh n )1)((b i )0)((k uh m )1)((i ng )0)))	;; ing
("unbefitting"	nil	(((uh n )1)((b i )0)((f i t^ )1)((i ng )0)))	;; ing
("unbeholden"	nil	(((uh n) 1) ((b i) 0) ((h o l d) 1) ((n!) 0)))	;; oul
("unbeing"	nil	(((uh n )0)((b ii )1)((i ng )0)))	;; ing
("unbelieving"	nil	(((uh n )1)((b @ )0)((l ii v )1)((i ng )0)))	;; ing
("unbending"	nil	(((uh n )0)((b e n d )1)((i ng )0)))	;; ing
("unbinding"	nil	(((uh n )0)((b ai n d )1)((i ng )0)))	;; ing
("unblindfold"	nil	(((uh n) 0) ((b l ai n d) 1) ((f o l d) 0)))	;; oul
("unblindfolded"	nil	(((uh n) 0) ((b l ai n d) 1) ((f o l d) 0) ((@ d) 0)))	;; oul
("unblindfolds"	nil	(((uh n) 0) ((b l ai n d) 1) ((f o l d z) 0)))	;; oul
("unblinking"	nil	(((uh n )0)((b l i ng k )1)((i ng )0)))	;; ing
("unblocking"	nil	(((uh n )0)((b l o k )1)((i ng )0)))	;; ing
("unblushing"	nil	(((uh n )0)((b l uh sh )1)((i ng )0)))	;; ing
("unbolt"	nil	(((uh n) 0) ((b o l t) 1)))	;; oul
("unbolted"	nil	(((uh n) 0) ((b o l t) 1) ((@ d) 0)))	;; oul
("unbolts"	nil	(((uh n) 0) ((b o l t s) 1)))	;; oul
("unbosoming"	nil	(((uh n )0)((b u )1)((z m! )0)((i ng )0)))	;; ing
("unbounding"	nil	(((uh n )0)((b ow n d )1)((i ng )0)))	;; ing
("unbracing"	nil	(((uh n )0)((b r ei s )1)((i ng )0)))	;; ing
("unbreathing"	nil	(((uh n )0)((b r ii dh )1)((i ng )0)))	;; ing
("unbuckling"	nil	(((uh n )0)((b uh )1)((k l! )0)((i ng )0)))	;; ing
("unbundling"	nil	(((uh n )0)((b uh n )1)((d l! )0)((i ng )0)))	;; ing
("unbuttoning"	nil	(((uh n )0)((b uh )1)((t n! )0)((i ng )0)))	;; ing
("uncalculating"	nil	(((uh n )0)((k a l )1)((k y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("uncaring"	nil	(((uh n )0)((k ir r )1)((i ng )0)))	;; ing
("unceasing"	nil	(((uh n )0)((s ii s )1)((i ng )0)))	;; ing
("unchaining"	nil	(((uh n )0)((ch ei n )1)((i ng )0)))	;; ing
("unchanging"	nil	(((uh n )0)((ch ei n jh )1)((i ng )0)))	;; ing
("uncharming"	nil	(((uh n )0)((ch aa m )1)((i ng )0)))	;; ing
("unclasping"	nil	(((uh n )0)((k l aa s p )1)((i ng )0)))	;; ing
("unclenching"	nil	(((uh n )0)((k l e n ch )1)((i ng )0)))	;; ing
("uncoiling"	nil	(((uh n )0)((k oi l )1)((i ng )0)))	;; ing
("uncomplaining"	nil	(((uh n )1)((k @ m )0)((p l ei n )1)((i ng )0)))	;; ing
("uncomplying"	nil	(((uh n )1)((k @ m )0)((p l ai )1)((i ng )0)))	;; ing
("uncomprehending"	nil	(((uh n )1)((k o m )0)((p r i )0)((h e n d )1)((i ng )0)))	;; ing
("uncompressing"	nil	(((uh n )1)((k @ m )0)((p r e s )1)((i ng )0)))	;; ing
("uncompromising"	nil	(((uh n )0)((k o m )1)((p r @ )0)((m ai z )1)((i ng )0)))	;; ing
("unconcealing"	nil	(((uh n )1)((k @ n )0)((s ii l )1)((i ng )0)))	;; ing
("unconcerning"	nil	(((uh n )1)((k @ n )0)((s @@r n )1)((i ng )0)))	;; ing
("unconforming"	nil	(((uh n )1)((k @ n )0)((f oo m )1)((i ng )0)))	;; ing
("unconniving"	nil	(((uh n )1)((k @ )0)((n ai v )1)((i ng )0)))	;; ing
("unconsenting"	nil	(((uh n )1)((k @ n )0)((s e n t )1)((i ng )0)))	;; ing
("unconsidering"	nil	(((uh n )1)((k @ n )0)((s i )1)((d @ r )0)((i ng )0)))	;; ing
("unconsoled"	nil	(((uh n) 1) ((k @ n) 0) ((s o l d) 1)))	;; oul
("uncontrollable"	nil	(((uh n) 1) ((k @ n) 0) ((t r o l) 1) ((@) 0) ((b l!) 0)))	;; oul
("uncontrollableness"	nil	(((uh n) 1) ((k @ n) 0) ((t r o l) 1) ((@) 0) ((b l!) 0) ((n @ s) 0)))	;; oul
("uncontrollably"	nil	(((uh n) 1) ((k @ n) 0) ((t r o l) 1) ((@) 0) ((b l ii) 0)))	;; oul
("uncontrolled"	nil	(((uh n) 1) ((k @ n) 0) ((t r o l d) 1)))	;; oul
("unconvincing"	nil	(((uh n )1)((k @ n )0)((v i n s )1)((i ng )0)))	;; ing
("uncool"	nil	(((uh n) 0) ((k u l) 1)))	;; uul
("uncorking"	nil	(((uh n )0)((k oo k )1)((i ng )0)))	;; ing
("uncoupling"	nil	(((uh n )0)((k uh )1)((p l! )0)((i ng )0)))	;; ing
("uncovering"	nil	(((uh n )0)((k uh )1)((v @ r )0)((i ng )0)))	;; ing
("uncrating"	nil	(((uh n )0)((k r ei t^ )1)((i ng )0)))	;; ing
("uncreasing"	nil	(((uh n )0)((k r ii s )1)((i ng )0)))	;; ing
("uncreating"	nil	(((uh n )1)((k r iy )0)((ei t^ )1)((i ng )0)))	;; ing
("uncrumpling"	nil	(((uh n )0)((k r uh m )1)((p l! )0)((i ng )0)))	;; ing
("uncurling"	nil	(((uh n )0)((k @@r l )1)((i ng )0)))	;; ing
("undawning"	nil	(((uh n )0)((d oo n )1)((i ng )0)))	;; ing
("undeceiving"	nil	(((uh n )1)((d i )0)((s ii v )1)((i ng )0)))	;; ing
("undeclining"	nil	(((uh n )1)((d i )0)((k l ai n )1)((i ng )0)))	;; ing
("undelaying"	nil	(((uh n )1)((d i )0)((l ei )1)((i ng )0)))	;; ing
("undeleting"	nil	(((uh n )1)((d i )0)((l ii t^ )1)((i ng )0)))	;; ing
("undemanding"	nil	(((uh n )1)((d i )0)((m aa n d )1)((i ng )0)))	;; ing
("undepending"	nil	(((uh n )1)((d i )0)((p e n d )1)((i ng )0)))	;; ing
("under-cooking"	nil	(((uh n )1)((d @ )0)((k u k )1)((i ng )0)))	;; ing
("under-feeding"	nil	(((uh n )1)((d @ )0)((f ii d )1)((i ng )0)))	;; ing
("underachieving"	nil	(((uh n )1)((d @ r )0)((@ )0)((ch ii v )1)((i ng )0)))	;; ing
("underacting"	nil	(((uh n )1)((d @ r )0)((a k t )1)((i ng )0)))	;; ing
("underbudgeting"	nil	(((uh n )1)((d @ )0)((b uh )1)((jh @ t^ )0)((i ng )0)))	;; ing
("undercapitalising"	nil	(((uh n )1)((d @ )0)((k a )1)((p @ )0)((t l! )0)((ai z )1)((i ng )0)))	;; ing
("undercapitalizing"	nil	(((uh n )1)((d @ )0)((k a )1)((p @ )0)((t l! )0)((ai z )1)((i ng )0)))	;; ing
("undercharging"	nil	(((uh n )1)((d @ )0)((ch aa jh )1)((i ng )0)))	;; ing
("underclothing"	nil	(((uh n )1)((d @ )0)((k l ou dh )1)((i ng )0)))	;; ing
("undercoating"	nil	(((uh n )1)((d @ )0)((k ou t^ )1)((i ng )0)))	;; ing
("undercompensating"	nil	(((uh n )1)((d @ )0)((k o m )1)((p @ n )0)((s ei t^ )1)((i ng )0)))	;; ing
("underconstraining"	nil	(((uh n )1)((d @ )0)((k @ n )0)((s t r ei n )1)((i ng )0)))	;; ing
("undercooking"	nil	(((uh n )1)((d @ )0)((k u k )1)((i ng )0)))	;; ing
("undercool"	nil	(((uh n) 1) ((d @) 0) ((k u l) 1)))	;; uul
("undercooled"	nil	(((uh n) 1) ((d @) 0) ((k u l d) 1)))	;; uul
("undercooling"	nil	(((uh ng) 1) ((d @) 0) ((k u l) 1) ((i ng) 0)))	;; uul
("undercools"	nil	(((uh n) 1) ((d @) 0) ((k u l z) 1)))	;; uul
("undercutting"	nil	(((uh n )1)((d @ )0)((k uh t^ )1)((i ng )0)))	;; ing
("underdetermining"	nil	(((uh n )1)((d @ )0)((d i )0)((t @@r )1)((m i n )0)((i ng )0)))	;; ing
("underdeveloping"	nil	(((uh n )1)((d @ )0)((d i )0)((v a )1)((l @ p )0)((i ng )0)))	;; ing
("underdoing"	nil	(((uh n )1)((d @ )0)((d uu )1)((i ng )0)))	;; ing
("underdressing"	nil	(((uh n )1)((d @ )0)((d r e s )1)((i ng )0)))	;; ing
("underemphasizing"	nil	(((uh n )1)((d @ r )0)((e m )1)((f @ )0)((s ai z )1)((i ng )0)))	;; ing
("underestimating"	nil	(((uh n )1)((d @ r )0)((e )1)((s t @ )0)((m ei t^ )1)((i ng )0)))	;; ing
("underexploiting"	nil	(((uh n )1)((d @ r )0)((@ k )0)((s p l oi t^ )1)((i ng )0)))	;; ing
("underexposing"	nil	(((uh n )1)((d @ r )0)((@ k )0)((s p ou z )1)((i ng )0)))	;; ing
("underfeeding"	nil	(((uh n )1)((d @ )0)((f ii d )1)((i ng )0)))	;; ing
("underfilling"	nil	(((uh n )1)((d @ )0)((f i l )1)((i ng )0)))	;; ing
("underfinancing"	nil	(((uh n )1)((d @ )0)((f ai )1)((n a n s )0)((i ng )0)))	;; ing
("underfinishing"	nil	(((uh n )1)((d @ )0)((f i )1)((n i sh )0)((i ng )0)))	;; ing
("underfitting"	nil	(((uh n )1)((d @ )0)((f i t^ )1)((i ng )0)))	;; ing
("underfunding"	nil	(((uh n )1)((d @ )0)((f uh n d )1)((i ng )0)))	;; ing
("undergirding"	nil	(((uh n )1)((d @ )0)((g @@r d )1)((i ng )0)))	;; ing
("undergoing"	nil	(((uh n )1)((d @ )0)((g ou )1)((i ng )0)))	;; ing
("underheating"	nil	(((uh n )1)((d @ )0)((h ii t^ )1)((i ng )0)))	;; ing
("underlaying"	nil	(((uh n )1)((d @ )0)((l ei )1)((i ng )0)))	;; ing
("underling"	nil	(((uh n )1)((d @ )0)((l i ng )0)))	;; ing
("underlining"	nil	(((uh n )1)((d @ )0)((l ai n )1)((i ng )0)))	;; ing
("underlying"	nil	(((uh n )1)((d @ )0)((l ai )1)((i ng )0)))	;; ing
("undermanning"	nil	(((uh n )1)((d @ )0)((m a n )1)((i ng )0)))	;; ing
("undermining"	nil	(((uh n )1)((d @ )0)((m ai n )1)((i ng )0)))	;; ing
("undernourishing"	nil	(((uh n )1)((d @ )0)((n uh )1)((r i sh )0)((i ng )0)))	;; ing
("underpaying"	nil	(((uh n )1)((d @ )0)((p ei )1)((i ng )0)))	;; ing
("underperforming"	nil	(((uh n )1)((d @ )0)((p @ )0)((f oo m )1)((i ng )0)))	;; ing
("underpinning"	nil	(((uh n )1)((d @ )0)((p i n )1)((i ng )0)))	;; ing
("underplanting"	nil	(((uh n )1)((d @ )0)((p l aa n t )1)((i ng )0)))	;; ing
("underpopulating"	nil	(((uh n )1)((d @ )0)((p o )1)((p y @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("underpowering"	nil	(((uh n )1)((d @ )0)((p ow @ r )1)((i ng )0)))	;; ing
("underpricing"	nil	(((uh n )1)((d @ )0)((p r ai s )1)((i ng )0)))	;; ing
("underrating"	nil	(((uh n )1)((d @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("underreporting"	nil	(((uh n )1)((d @ )0)((r i )0)((p oo t^ )1)((i ng )0)))	;; ing
("underrepresenting"	nil	(((uh n )1)((d @ )0)((r e )1)((p r i )0)((z e n t )1)((i ng )0)))	;; ing
("underscoring"	nil	(((uh n )1)((d @ )0)((s k oo r )1)((i ng )0)))	;; ing
("underselling"	nil	(((uh n )1)((d @ )0)((s a l )1)((i ng )0)))	;; ing
("undershooting"	nil	(((uh n )1)((d @ )0)((sh uu t^ )1)((i ng )0)))	;; ing
("undersigning"	nil	(((uh n )1)((d @ )0)((s ai n )1)((i ng )0)))	;; ing
("undersold"	nil	(((uh n) 1) ((d @) 0) ((s o l d) 1)))	;; oul
("underspending"	nil	(((uh n )1)((d @ )0)((s p e n d )1)((i ng )0)))	;; ing
("understaffing"	nil	(((uh n )1)((d @ )0)((s t aa f )1)((i ng )0)))	;; ing
("understanding"	nil	(((uh n )1)((d @ )0)((s t a n d )1)((i ng )0)))	;; ing
("understating"	nil	(((uh n )1)((d @ )0)((s t ei t^ )1)((i ng )0)))	;; ing
("understudying"	nil	(((uh n )1)((d @ )0)((s t uh )1)((d iy )0)((i ng )0)))	;; ing
("undertaking"	nil	(((uh n )1)((d @ )0)((t ei k )1)((i ng )0)))	;; ing
("underusing"	nil	(((uh n )1)((d @ )0)((y uu z )1)((i ng )0)))	;; ing
("underutilising"	nil	(((uh n )1)((d @ )0)((y uu )1)((t^ i l )0)((ai z )1)((i ng )0)))	;; ing
("underutilizing"	nil	(((uh n )1)((d @ )0)((y uu )1)((t^ i l )0)((ai z )1)((i ng )0)))	;; ing
("undervaluing"	nil	(((uh n )1)((d @ )0)((v a )1)((l y uw )0)((i ng )0)))	;; ing
("underwhelming"	nil	(((uh n )1)((d @ )0)((w a l m )1)((i ng )0)))	;; ing
("underwriting"	nil	(((uh n )1)((d @ )0)((r ai t^ )1)((i ng )0)))	;; ing
("undeserving"	nil	(((uh n )1)((d i )0)((z @@r v )1)((i ng )0)))	;; ing
("undesigning"	nil	(((uh n )1)((d i )0)((z ai n )1)((i ng )0)))	;; ing
("undesiring"	nil	(((uh n )1)((d i )0)((z ai @ r )1)((i ng )0)))	;; ing
("undespairing"	nil	(((uh n )1)((d i )0)((s p ir r )1)((i ng )0)))	;; ing
("undeviating"	nil	(((uh n )0)((d ii )1)((v iy )0)((ei t^ )1)((i ng )0)))	;; ing
("undisappointing"	nil	(((uh n )1)((d i )0)((s @ )0)((p oi n t )1)((i ng )0)))	;; ing
("undiscerning"	nil	(((uh n )1)((d i )0)((s @@r n )1)((i ng )0)))	;; ing
("undiscriminating"	nil	(((uh n )1)((d i )0)((s k r i )1)((m i )0)((n ei t^ )1)((i ng )0)))	;; ing
("undissolving"	nil	(((uh n )1)((d i )0)((z o l v )1)((i ng )0)))	;; ing
("undistinguishing"	nil	(((uh n )1)((d i )0)((s t i ng )1)((g w i sh )0)((i ng )0)))	;; ing
("undistracting"	nil	(((uh n )1)((d i )0)((s t r a k t )1)((i ng )0)))	;; ing
("undisturbing"	nil	(((uh n )1)((d i )0)((s t @@r b )1)((i ng )0)))	;; ing
("undiverting"	nil	(((uh n )1)((d ai )0)((v @@r t^ )1)((i ng )0)))	;; ing
("undoing"	nil	(((uh n )0)((d uu )1)((i ng )0)))	;; ing
("undoubting"	nil	(((uh n )0)((d ow t^ )1)((i ng )0)))	;; ing
("undreading"	nil	(((uh n )0)((d r e d )1)((i ng )0)))	;; ing
("undreaming"	nil	(((uh n )0)((d r ii m )1)((i ng )0)))	;; ing
("undressing"	nil	(((uh n )0)((d r e s )1)((i ng )0)))	;; ing
("undrooping"	nil	(((uh n )0)((d r uu p )1)((i ng )0)))	;; ing
("undulating"	nil	(((uh n )1)((jh @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("undying"	nil	(((uh n )0)((d ai )1)((i ng )0)))	;; ing
("unearthing"	nil	(((uh n )0)((@@r th )1)((i ng )0)))	;; ing
("unedifying"	nil	(((uh n )0)((e )1)((d @ )0)((f ai )1)((i ng )0)))	;; ing
("unending"	nil	(((uh n )0)((e n d )1)((i ng )0)))	;; ing
("unenquiring"	nil	(((uh n )1)((@ n )0)((k w ai @ r )1)((i ng )0)))	;; ing
("unenrolled"	nil	(((uh n) 1) ((@ n) 0) ((r o l d) 1)))	;; oul
("unenterprising"	nil	(((uh n )0)((e n )1)((t @ )0)((p r ai z )1)((i ng )0)))	;; ing
("unentertaining"	nil	(((uh n )1)((e n )0)((t @ )0)((t ei n )1)((i ng )0)))	;; ing
("unenvying"	nil	(((uh n )0)((e n )1)((v iy )0)((i ng )0)))	;; ing
("unerring"	nil	(((uh n )0)((@@r r )1)((i ng )0)))	;; ing
("unescos"	nil	(((y uw) 0) ((n e) 1) ((s k ou z) 0)))	;; unique
("unexacting"	nil	(((uh n )1)((@ g )0)((z a k t )1)((i ng )0)))	;; ing
("unexciting"	nil	(((uh n )1)((@ k )0)((s ai t^ )1)((i ng )0)))	;; ing
("unfading"	nil	(((uh n )0)((f ei d )1)((i ng )0)))	;; ing
("unfailing"	nil	(((uh n )0)((f ei l )1)((i ng )0)))	;; ing
("unfaltering"	nil	(((uh n )1)((f oo l )1)((t @ r )0)((i ng )0)))	;; ing
("unfastening"	nil	(((uh n )0)((f aa s )1)((n! )0)((i ng )0)))	;; ing
("unfavoring"	nil	(((uh n )0)((f ei )1)((v @ r )0)((i ng )0)))	;; ing
("unfavouring"	nil	(((uh n )0)((f ei )1)((v @ r )0)((i ng )0)))	;; ing
("unfearing"	nil	(((uh n )0)((f ir r )1)((i ng )0)))	;; ing
("unfeeling"	nil	(((uh n )0)((f ii l )1)((i ng )0)))	;; ing
("unfeigning"	nil	(((uh n )0)((f ei n )1)((i ng )0)))	;; ing
("unfinishing"	nil	(((uh n )0)((f i )1)((n i sh )0)((i ng )0)))	;; ing
("unfitting"	nil	(((uh n )0)((f i t^ )1)((i ng )0)))	;; ing
("unflagging"	nil	(((uh n )0)((f l a g )1)((i ng )0)))	;; ing
("unflattering"	nil	(((uh n )0)((f l a )1)((t^ @ r )0)((i ng )0)))	;; ing
("unflinching"	nil	(((uh n )0)((f l i n ch )1)((i ng )0)))	;; ing
("unfold"	nil	(((uh n) 0) ((f o l d) 1)))	;; oul
("unfolded"	nil	(((uh n) 0) ((f o l d) 1) ((@ d) 0)))	;; oul
("unfolder"	nil	(((uh n) 0) ((f o l d) 1) ((@) 0)))	;; oul
("unfolding"	nil	(((uh ng) 0) ((f o l d) 1) ((i ng) 0)))	;; oul
("unfoldings"	nil	(((uh ng) 0) ((f o l d) 1) ((i ng z) 0)))	;; oul
("unfolds"	nil	(((uh n) 0) ((f o l d z) 1)))	;; oul
("unforeboding"	nil	(((uh n )1)((f oo )0)((b ou d )1)((i ng )0)))	;; ing
("unforeseeing"	nil	(((uh n )1)((f oo )0)((s ii )1)((i ng )0)))	;; ing
("unforetold"	nil	(((uh n) 1) ((f oo) 0) ((t o l d) 1)))	;; oul
("unforgiving"	nil	(((uh n )1)((f @ )0)((g i v )1)((i ng )0)))	;; ing
("unforthcoming"	nil	(((uh n )1)((f oo th )0)((k uh m )1)((i ng )0)))	;; ing
("unfreezing"	nil	(((uh n )0)((f r ii z )1)((i ng )0)))	;; ing
("unfrocking"	nil	(((uh n )0)((f r o k )1)((i ng )0)))	;; ing
("unfuelled"	nil	(((uh n) 0) ((f y u l d) 1)))	;; uul
("unfurling"	nil	(((uh n )0)((f @@r l )1)((i ng )0)))	;; ing
("ungiving"	nil	(((uh n )0)((g i v )1)((i ng )0)))	;; ing
("ungrudging"	nil	(((uh n )0)((g r uh jh )1)((i ng )0)))	;; ing
("unharming"	nil	(((uh n )0)((h aa m )1)((i ng )0)))	;; ing
("unharnessing"	nil	(((uh n )0)((h aa )1)((n @ s )0)((i ng )0)))	;; ing
("unheeding"	nil	(((uh n )0)((h ii d )1)((i ng )0)))	;; ing
("unhesitating"	nil	(((uh n )0)((h e )1)((z @ )0)((t ei t^ )1)((i ng )0)))	;; ing
("unhinging"	nil	(((uh n )0)((h i n jh )1)((i ng )0)))	;; ing
("unhitching"	nil	(((uh n )0)((h i ch )1)((i ng )0)))	;; ing
("unholier"	nil	(((uh n) 0) ((h o) 1) ((l ii @) 0)))	;; oul
("unholiest"	nil	(((uh n) 0) ((h o) 1) ((l ii @ s t) 0)))	;; oul
("unholily"	nil	(((uh n) 0) ((h o) 1) ((l @) 0) ((l ii) 0)))	;; oul
("unholiness"	nil	(((uh n) 0) ((h o) 1) ((l ii) 0) ((n @ s) 0)))	;; oul
("unholy"	nil	(((uh n) 0) ((h o) 1) ((l ii) 0)))	;; oul
("unhooking"	nil	(((uh n )0)((h u k )1)((i ng )0)))	;; ing
("unhurrying"	nil	(((uh n )0)((h uh )1)((r iy )0)((i ng )0)))	;; ing
("unifying"	nil	(((y uu )1)((n @ )0)((f ai )1)((i ng )0)))	;; ing
("unilluminating"	nil	(((uh n )1)((i )0)((l uu )1)((m i )0)((n ei t^ )1)((i ng )0)))	;; ing
("unimposing"	nil	(((uh n )1)((i m )0)((p ou z )1)((i ng )0)))	;; ing
("uninforming"	nil	(((uh n )1)((i n )0)((f oo m )1)((i ng )0)))	;; ing
("uninquiring"	nil	(((uh n )1)((i n )0)((k w ai @ r )1)((i ng )0)))	;; ing
("uninspiring"	nil	(((uh n )1)((i n )0)((s p ai @ r )1)((i ng )0)))	;; ing
("uninteresting"	nil	(((uh n )0)((i n )1)((t @ )0)((r e s t )0)((i ng )0)))	;; ing
("unintoxicating"	nil	(((uh n )1)((i n )0)((t o k )1)((s i )0)((k ei t^ )1)((i ng )0)))	;; ing
("uninviting"	nil	(((uh n )1)((i n )0)((v ai t^ )1)((i ng )0)))	;; ing
("unionising"	nil	(((y uu )1)((n y @ n )0)((ai z )1)((i ng )0)))	;; ing
("unionizing"	nil	(((y uu )1)((n y @ n )0)((ai z )1)((i ng )0)))	;; ing
("unipolar"	nil	(((y uu) 1) ((n ii) 0) ((p o l) 1) ((@) 0)))	;; oul
("unisyss"	nil	(((y uu) 1) ((n i) 0) ((s i s) 0) ((@ z) 0)))	;; unique
("uniting"	nil	(((y uw )0)((n ai t^ )1)((i ng )0)))	;; ing
("universalizing"	nil	(((y uu )1)((n @ )0)((v @@r s )1)((l! )0)((ai z )1)((i ng )0)))	;; ing
("universitys"	nil	(((y uu) 1) ((n @) 0) ((v @@r) 1) ((s @) 0) ((t^ ii z) 0)))	;; unique
("unixers"	nil	(((y uu) 1) ((n i k s) 0) ((@ z) 0)))	;; unique
("unixs"	nil	(((y uu) 1) ((n i k s) 0) ((@ z) 0)))	;; unique
("unknotting"	nil	(((uh n )0)((n o t^ )1)((i ng )0)))	;; ing
("unknowing"	nil	(((uh n )0)((n ou )1)((i ng )0)))	;; ing
("unlaboring"	nil	(((uh n )0)((l ei )1)((b @ r )0)((i ng )0)))	;; ing
("unlabouring"	nil	(((uh n )0)((l ei )1)((b @ r )0)((i ng )0)))	;; ing
("unlacing"	nil	(((uh n )0)((l ei s )1)((i ng )0)))	;; ing
("unleashing"	nil	(((uh n )0)((l ii sh )1)((i ng )0)))	;; ing
("unlinking"	nil	(((uh n )0)((l i ng k )1)((i ng )0)))	;; ing
("unlistening"	nil	(((uh n )0)((l i )1)((s n! )0)((i ng )0)))	;; ing
("unliving"	nil	(((uh n )0)((l i v )1)((i ng )0)))	;; ing
("unloading"	nil	(((uh n )0)((l ou d )1)((i ng )0)))	;; ing
("unlocking"	nil	(((uh n )0)((l o k )1)((i ng )0)))	;; ing
("unloosing"	nil	(((uh n )0)((l uu s )1)((i ng )0)))	;; ing
("unloving"	nil	(((uh n )0)((l uh v )1)((i ng )0)))	;; ing
("unmaking"	nil	(((uh n )0)((m ei k )1)((i ng )0)))	;; ing
("unmanaging"	nil	(((uh n )0)((m a )1)((n @ jh )0)((i ng )0)))	;; ing
("unmanning"	nil	(((uh n )0)((m a n )1)((i ng )0)))	;; ing
("unmasking"	nil	(((uh n )0)((m aa s k )1)((i ng )0)))	;; ing
("unmeaning"	nil	(((uh n )0)((m ii n )1)((i ng )0)))	;; ing
("unmeriting"	nil	(((uh n )0)((m e )1)((r @ t^ )0)((i ng )0)))	;; ing
("unmoralizing"	nil	(((uh n )0)((m o )1)((r @ l )0)((ai z )1)((i ng )0)))	;; ing
("unmould"	nil	(((uh n) 0) ((m o l d) 1)))	;; oul
("unmoulded"	nil	(((uh n) 0) ((m o l d) 1) ((@ d) 0)))	;; oul
("unmoulds"	nil	(((uh n) 0) ((m o l d z) 1)))	;; oul
("unmoving"	nil	(((uh n )0)((m uu v )1)((i ng )0)))	;; ing
("unmurmuring"	nil	(((uh n )0)((m @@r )1)((m @ r )0)((i ng )0)))	;; ing
("unmuzzling"	nil	(((uh n )0)((m uh )1)((z l! )0)((i ng )0)))	;; ing
("unnerving"	nil	(((uh n )0)((n @@r v )1)((i ng )0)))	;; ing
("unnoticing"	nil	(((uh n )0)((n ou )1)((t^ @ s )0)((i ng )0)))	;; ing
("unnourishing"	nil	(((uh n )0)((n uh )1)((r i sh )0)((i ng )0)))	;; ing
("unobserving"	nil	(((uh n )1)((@ b )0)((z @@r v )1)((i ng )0)))	;; ing
("unoffending"	nil	(((uh n )1)((@ )0)((f e n d )1)((i ng )0)))	;; ing
("unpackaging"	nil	(((uh n )0)((p a k )1)((@ jh )0)((i ng )0)))	;; ing
("unpacking"	nil	(((uh n )0)((p a k )1)((i ng )0)))	;; ing
("unpardoning"	nil	(((uh n )0)((p aa )1)((d n! )0)((i ng )0)))	;; ing
("unpatronizing"	nil	(((uh n )0)((p a )1)((t r @ n )0)((ai z )1)((i ng )0)))	;; ing
("unperforming"	nil	(((uh n )1)((p @ )0)((f oo m )1)((i ng )0)))	;; ing
("unperishing"	nil	(((uh n )0)((p e )1)((r i sh )0)((i ng )0)))	;; ing
("unpicking"	nil	(((uh n )0)((p i k )1)((i ng )0)))	;; ing
("unpinning"	nil	(((uh n )0)((p i n )1)((i ng )0)))	;; ing
("unpitying"	nil	(((uh n )0)((p i )1)((t^ iy )0)((i ng )0)))	;; ing
("unplaiting"	nil	(((uh n )0)((p l a t^ )1)((i ng )0)))	;; ing
("unpleasing"	nil	(((uh n )0)((p l ii z )1)((i ng )0)))	;; ing
("unplugging"	nil	(((uh n )0)((p l uh g )1)((i ng )0)))	;; ing
("unpolarisable"	nil	(((uh n) 0) ((p o l) 1) ((@ r) 0) ((ai z) 1) ((@) 0) ((b l!) 0)))	;; oul
("unpolarised"	nil	(((uh n) 0) ((p o l) 1) ((@ r) 0) ((ai z d) 0)))	;; oul
("unpolarizable"	nil	(((uh n) 0) ((p o l) 1) ((@ r) 0) ((ai z) 1) ((@) 0) ((b l!) 0)))	;; oul
("unpolarize"	nil	(((uh n) 0) ((p o l) 1) ((@ r) 0) ((ai z) 0)))	;; oul
("unpolarized"	nil	(((uh n) 0) ((p o l) 1) ((@ r) 0) ((ai z d) 0)))	;; oul
("unpolarizes"	nil	(((uh n) 0) ((p o l) 1) ((@ r) 0) ((ai z) 1) ((@ z) 0)))	;; oul
("unpolled"	nil	(((uh n) 0) ((p o l d) 1)))	;; oul
("unpossessing"	nil	(((uh n )1)((p @ )0)((z e s )1)((i ng )0)))	;; ing
("unposting"	nil	(((uh n )0)((p ou s t )1)((i ng )0)))	;; ing
("unpreaching"	nil	(((uh n )0)((p r ii ch )1)((i ng )0)))	;; ing
("unprepossessing"	nil	(((uh n )1)((p r - ii )0)((p @ )0)((z e s )1)((i ng )0)))	;; ing
("unpresuming"	nil	(((uh n )1)((p r @ )0)((z y uu m )1)((i ng )0)))	;; ing
("unpretending"	nil	(((uh n )1)((p r @ )0)((t e n d )1)((i ng )0)))	;; ing
("unprevailing"	nil	(((uh n )1)((p r i )0)((v ei l )1)((i ng )0)))	;; ing
("unprofiting"	nil	(((uh n )0)((p r o )1)((f @ t^ )0)((i ng )0)))	;; ing
("unpromising"	nil	(((uh n )0)((p r o )1)((m @ s )0)((i ng )0)))	;; ing
("unprotecting"	nil	(((uh n )1)((p r @ )0)((t e k t )1)((i ng )0)))	;; ing
("unprotesting"	nil	(((uh n )1)((p r @ )0)((t e s t )1)((i ng )0)))	;; ing
("unprovoking"	nil	(((uh n )1)((p r @ )0)((v ou k )1)((i ng )0)))	;; ing
("unquestioning"	nil	(((uh n )0)((k w e s )1)((ch @ n )0)((i ng )0)))	;; ing
("unraveling"	nil	(((uh n )0)((r a )1)((v l! )0)((i ng )0)))	;; ing
("unravelling"	nil	(((uh n )0)((r a )1)((v l! )0)((i ng )0)))	;; ing
("unreasoning"	nil	(((uh n )0)((r ii )1)((z n! )0)((i ng )0)))	;; ing
("unrecalling"	nil	(((uh n )1)((r i )0)((k oo l )1)((i ng )0)))	;; ing
("unrecognising"	nil	(((uh n )0)((r e )1)((k @ g )0)((n ai z )1)((i ng )0)))	;; ing
("unrecognizing"	nil	(((uh n )0)((r e )1)((k @ g )0)((n ai z )1)((i ng )0)))	;; ing
("unreeling"	nil	(((uh n )0)((r ii l )1)((i ng )0)))	;; ing
("unreflecting"	nil	(((uh n )1)((r @ )0)((f l e k t )1)((i ng )0)))	;; ing
("unrefreshing"	nil	(((uh n )1)((r i )0)((f r e sh )1)((i ng )0)))	;; ing
("unregarding"	nil	(((uh n )1)((r @ )0)((g aa d )1)((i ng )0)))	;; ing
("unrejoicing"	nil	(((uh n )1)((r i )0)((jh oi s )1)((i ng )0)))	;; ing
("unrelenting"	nil	(((uh n )1)((r i )0)((l e n t )1)((i ng )0)))	;; ing
("unremaining"	nil	(((uh n )1)((r i )0)((m ei n )1)((i ng )0)))	;; ing
("unremembering"	nil	(((uh n )1)((r i )0)((m e m )1)((b @ r )0)((i ng )0)))	;; ing
("unremitting"	nil	(((uh n )1)((r i )0)((m i t^ )1)((i ng )0)))	;; ing
("unrepenting"	nil	(((uh n )1)((r i )0)((p e n t )1)((i ng )0)))	;; ing
("unrepining"	nil	(((uh n )1)((r i )0)((p ai n )1)((i ng )0)))	;; ing
("unreproaching"	nil	(((uh n )1)((r i )0)((p r ou ch )1)((i ng )0)))	;; ing
("unreproving"	nil	(((uh n )1)((r i )0)((p r uu v )1)((i ng )0)))	;; ing
("unresenting"	nil	(((uh n )1)((r i )0)((z e n t )1)((i ng )0)))	;; ing
("unresisting"	nil	(((uh n )1)((r i )0)((z i s t )1)((i ng )0)))	;; ing
("unresting"	nil	(((uh n )0)((r e s t )1)((i ng )0)))	;; ing
("unretreating"	nil	(((uh n )1)((r i )0)((t r ii t^ )1)((i ng )0)))	;; ing
("unreturning"	nil	(((uh n )1)((r i )0)((t @@r n )1)((i ng )0)))	;; ing
("unrevealing"	nil	(((uh n )1)((r i )0)((v ii l )1)((i ng )0)))	;; ing
("unrewarding"	nil	(((uh n )1)((r i )0)((w oo d )1)((i ng )0)))	;; ing
("unripping"	nil	(((uh n )0)((r i p )1)((i ng )0)))	;; ing
("unrobing"	nil	(((uh n )0)((r ou b )1)((i ng )0)))	;; ing
("unroll"	nil	(((uh n) 0) ((r o l) 1)))	;; oul
("unrolled"	nil	(((uh n) 0) ((r o l d) 1)))	;; oul
("unrolling"	nil	(((uh ng) 0) ((r o l) 1) ((i ng) 0)))	;; oul
("unrollings"	nil	(((uh ng) 0) ((r o l) 1) ((i ng z) 0)))	;; oul
("unrolls"	nil	(((uh n) 0) ((r o l z) 1)))	;; oul
("unsatiating"	nil	(((uh n )0)((s ei )1)((sh iy )0)((ei t^ )1)((i ng )0)))	;; ing
("unsatisfying"	nil	(((uh n )0)((s a )1)((t^ @ s )0)((f ai )1)((i ng )0)))	;; ing
("unschooled"	nil	(((uh n) 0) ((s k u l d) 1)))	;; uul
("unscrambling"	nil	(((uh n )0)((s k r a m )1)((b l! )0)((i ng )0)))	;; ing
("unscrewing"	nil	(((uh n )0)((s k r uu )1)((i ng )0)))	;; ing
("unseating"	nil	(((uh n )0)((s ii t^ )1)((i ng )0)))	;; ing
("unseeing"	nil	(((uh n )0)((s ii )1)((i ng )0)))	;; ing
("unseeming"	nil	(((uh n )0)((s ii m )1)((i ng )0)))	;; ing
("unselecting"	nil	(((uh n )1)((s @ )0)((l e k t )1)((i ng )0)))	;; ing
("unsetting"	nil	(((uh n )0)((s e t^ )1)((i ng )0)))	;; ing
("unsettling"	nil	(((uh n )0)((s e )1)((t l! )0)((i ng )0)))	;; ing
("unshackling"	nil	(((uh n )0)((sh a )1)((k l! )0)((i ng )0)))	;; ing
("unshaking"	nil	(((uh n )0)((sh ei k )1)((i ng )0)))	;; ing
("unsheathing"	nil	(((uh n )0)((sh ii th )1)((i ng )0)))	;; ing
("unshifting"	nil	(((uh n )0)((sh i f t )1)((i ng )0)))	;; ing
("unshrinking"	nil	(((uh n )0)((sh r i ng k )1)((i ng )0)))	;; ing
("unsighing"	nil	(((uh n )0)((s ai )1)((i ng )0)))	;; ing
("unsleeping"	nil	(((uh n )0)((s l ii p )1)((i ng )0)))	;; ing
("unslinging"	nil	(((uh n )0)((s l i ng )1)((i ng )0)))	;; ing
("unslipping"	nil	(((uh n )0)((s l i p )1)((i ng )0)))	;; ing
("unslumbering"	nil	(((uh n )0)((s l uh m )1)((b @ r )0)((i ng )0)))	;; ing
("unsmiling"	nil	(((uh n )0)((s m ai l )1)((i ng )0)))	;; ing
("unsoftening"	nil	(((uh n )0)((s o f )1)((n! )0)((i ng )0)))	;; ing
("unsold"	nil	(((uh n) 0) ((s o l d) 1)))	;; oul
("unsolder"	nil	(((uh n) 0) ((s o l) 1) ((d @) 0)))	;; oul
("unsolders"	nil	(((uh n) 0) ((s o l) 1) ((d @ z) 0)))	;; oul
("unsoldierlike"	nil	(((uh n) 0) ((s o l) 1) ((jh @) 0) ((l ai k) 1)))	;; oul
("unsoldierly"	nil	(((uh n) 0) ((s o l) 1) ((jh @) 0) ((l ii) 0)))	;; oul
("unsparing"	nil	(((uh n )0)((s p ir r )1)((i ng )0)))	;; ing
("unspeaking"	nil	(((uh n )0)((s p ii k )1)((i ng )0)))	;; ing
("unsporting"	nil	(((uh n )0)((s p oo t^ )1)((i ng )0)))	;; ing
("unstaying"	nil	(((uh n )0)((s t ei )1)((i ng )0)))	;; ing
("unsticking"	nil	(((uh n )0)((s t i k )1)((i ng )0)))	;; ing
("unstinting"	nil	(((uh n )0)((s t i n t )1)((i ng )0)))	;; ing
("unstitching"	nil	(((uh n )0)((s t i ch )1)((i ng )0)))	;; ing
("unstooping"	nil	(((uh n )0)((s t uu p )1)((i ng )0)))	;; ing
("unstrapping"	nil	(((uh n )0)((s t r a p )1)((i ng )0)))	;; ing
("unsubscribing"	nil	(((uh n )1)((s @ b )0)((s k r ai b )1)((i ng )0)))	;; ing
("unsuiting"	nil	(((uh n )0)((s uu t^ )1)((i ng )0)))	;; ing
("unsupporting"	nil	(((uh n )1)((s @ )0)((p oo t^ )1)((i ng )0)))	;; ing
("unsurprising"	nil	(((uh n )1)((s @ )0)((p r ai z )1)((i ng )0)))	;; ing
("unsuspecting"	nil	(((uh n )1)((s @ )0)((s p e k t )1)((i ng )0)))	;; ing
("unsustaining"	nil	(((uh n )1)((s @ )0)((s t ei n )1)((i ng )0)))	;; ing
("unswearing"	nil	(((uh n )0)((s w ir r )1)((i ng )0)))	;; ing
("unswerving"	nil	(((uh n )0)((s w @@r v )1)((i ng )0)))	;; ing
("unswizzling"	nil	(((uh n )0)((s w i )1)((z l! )0)((i ng )0)))	;; ing
("unsympathising"	nil	(((uh n )0)((s i m )1)((p @ )0)((th ai z )1)((i ng )0)))	;; ing
("unsympathizing"	nil	(((uh n )0)((s i m )1)((p @ )0)((th ai z )1)((i ng )0)))	;; ing
("untacking"	nil	(((uh n )0)((t a k )1)((i ng )0)))	;; ing
("untainting"	nil	(((uh n )0)((t ei n t )1)((i ng )0)))	;; ing
("untantalising"	nil	(((uh n )0)((t a n )1)((t @ )0)((l ai z )1)((i ng )0)))	;; ing
("untantalizing"	nil	(((uh n )0)((t a n )1)((t @ )0)((l ai z )1)((i ng )0)))	;; ing
("untarring"	nil	(((uh n )0)((t aa r )1)((i ng )0)))	;; ing
("untaxing"	nil	(((uh n )0)((t a k s )1)((i ng )0)))	;; ing
("untempering"	nil	(((uh n )0)((t e m )1)((p @ r )0)((i ng )0)))	;; ing
("untemporising"	nil	(((uh n )0)((t e m )1)((p @ )0)((r ai z )1)((i ng )0)))	;; ing
("untemporizing"	nil	(((uh n )0)((t e m )1)((p @ )0)((r ai z )1)((i ng )0)))	;; ing
("unterrifying"	nil	(((uh n )0)((t e )1)((r @ )0)((f ai )1)((i ng )0)))	;; ing
("unthinking"	nil	(((uh n )0)((th i ng k )1)((i ng )0)))	;; ing
("untiring"	nil	(((uh n )0)((t ai @ r )1)((i ng )0)))	;; ing
("untoiling"	nil	(((uh n )0)((t oi l )1)((i ng )0)))	;; ing
("untold"	nil	(((uh n) 0) ((t o l d) 1)))	;; oul
("untrembling"	nil	(((uh n )0)((t r e m )1)((b l! )0)((i ng )0)))	;; ing
("untrespassing"	nil	(((uh n )0)((t r e )1)((s p @ s )0)((i ng )0)))	;; ing
("untrussing"	nil	(((uh n )0)((t r uh s )1)((i ng )0)))	;; ing
("unturning"	nil	(((uh n )0)((t @@r n )1)((i ng )0)))	;; ing
("untwisting"	nil	(((uh n )0)((t w i s t )1)((i ng )0)))	;; ing
("untying"	nil	(((uh n )0)((t ai )1)((i ng )0)))	;; ing
("ununderstanding"	nil	(((uh n )1)((uh n )0)((d @ )0)((s t a n d )1)((i ng )0)))	;; ing
("unvarying"	nil	(((uh n )0)((v ir )1)((r iy )0)((i ng )0)))	;; ing
("unveiling"	nil	(((uh n )0)((v ei l )1)((i ng )0)))	;; ing
("unvoicing"	nil	(((uh n )0)((v oi s )1)((i ng )0)))	;; ing
("unwandering"	nil	(((uh n )0)((w o n )1)((d @ r )0)((i ng )0)))	;; ing
("unwaning"	nil	(((uh n )0)((w ei n )1)((i ng )0)))	;; ing
("unwasting"	nil	(((uh n )0)((w ei s t )1)((i ng )0)))	;; ing
("unwavering"	nil	(((uh n )0)((w ei )1)((v @ r )0)((i ng )0)))	;; ing
("unwearying"	nil	(((uh n )0)((w ir )1)((r iy )0)((i ng )0)))	;; ing
("unweighing"	nil	(((uh n )0)((w ei )1)((i ng )0)))	;; ing
("unwelcoming"	nil	(((uh n )0)((w a l )1)((k @ m )0)((i ng )0)))	;; ing
("unwholesome"	nil	(((uh n) 0) ((h o l) 1) ((s m!) 0)))	;; oul
("unwholesomely"	nil	(((uh n) 0) ((h o l) 1) ((s m!) 0) ((l ii) 0)))	;; oul
("unwholesomeness"	nil	(((uh n) 0) ((h o l) 1) ((s m!) 0) ((n @ s) 0)))	;; oul
("unwilling"	nil	(((uh n )0)((w i l )1)((i ng )0)))	;; ing
("unwinding"	nil	(((uh n )0)((w ai n d )1)((i ng )0)))	;; ing
("unwinking"	nil	(((uh n )0)((w i ng k )1)((i ng )0)))	;; ing
("unwishing"	nil	(((uh n )0)((w i sh )1)((i ng )0)))	;; ing
("unwithdrawing"	nil	(((uh n )1)((w - i dh )0)((d r oo )1)((i ng )0)))	;; ing
("unwithering"	nil	(((uh n )0)((w i )1)((dh @ r )0)((i ng )0)))	;; ing
("unwithholding"	nil	(((uh ng) 1) ((w i dh) 0) ((h o l d) 1) ((i ng) 0)))	;; oul
("unwitting"	nil	(((uh n )0)((w i t^ )1)((i ng )0)))	;; ing
("unworking"	nil	(((uh n )0)((w @@r k )1)((i ng )0)))	;; ing
("unwrapping"	nil	(((uh n )0)((r a p )1)((i ng )0)))	;; ing
("unwriting"	nil	(((uh n )0)((r ai t^ )1)((i ng )0)))	;; ing
("unyielding"	nil	(((uh n )0)((y ii l d )1)((i ng )0)))	;; ing
("unzipping"	nil	(((uh n )0)((z i p )1)((i ng )0)))	;; ing
("up-and-coming"	nil	(((uh p )1)((@ n )0)((k uh m )1)((i ng )0)))	;; ing
("upbraiding"	nil	(((- uh p )0)((b r ei d )1)((i ng )0)))	;; ing
("upbringing"	nil	(((uh p )1)((b r i ng )1)((i ng )0)))	;; ing
("upcoming"	nil	(((uh p )1)((k - uh m )0)((i ng )0)))	;; ing
("updating"	nil	(((- uh p )0)((d ei t^ )1)((i ng )0)))	;; ing
("upending"	nil	(((- uh p )0)((e n d )1)((i ng )0)))	;; ing
("upgrading"	nil	(((- uh p )0)((g r ei d )1)((i ng )0)))	;; ing
("uphold"	nil	(((uh p) 0) ((h o l d) 1)))	;; oul
("upholder"	nil	(((uh p) 0) ((h o l d) 1) ((@) 0)))	;; oul
("upholders"	nil	(((uh p) 0) ((h o l d) 1) ((@ z) 0)))	;; oul
("upholding"	nil	(((uh p) 0) ((h o l d) 1) ((i ng) 0)))	;; oul
("upholds"	nil	(((uh p) 0) ((h o l d z) 1)))	;; oul
("upholster"	nil	(((uh p) 0) ((h o l) 1) ((s t @) 0)))	;; oul
("upholstered"	nil	(((uh p) 0) ((h o l) 1) ((s t @ d) 0)))	;; oul
("upholsterer"	nil	(((uh p) 0) ((h o l) 1) ((s t @ r) 0) ((@) 0)))	;; oul
("upholsterers"	nil	(((uh p) 0) ((h o l) 1) ((s t @ r) 0) ((@ z) 0)))	;; oul
("upholstering"	nil	(((uh p) 0) ((h o l) 1) ((s t @ r) 0) ((i ng) 0)))	;; oul
("upholsters"	nil	(((uh p) 0) ((h o l) 1) ((s t @ z) 0)))	;; oul
("upholstery"	nil	(((uh p) 0) ((h o l) 1) ((s t @ r) 0) ((ii) 0)))	;; oul
("uplifting"	nil	(((- uh p )0)((l i f t )1)((i ng )0)))	;; ing
("uplighting"	nil	(((uh p )1)((l ai t^ )1)((i ng )0)))	;; ing
("uploading"	nil	(((- uh p )0)((l ou d )1)((i ng )0)))	;; ing
("upokororo"	nil	(((uw) 1) ((p oo) 0) ((k oo) 0) ((r ou) 0) ((r ou) 0)))	;; unique
("upokotea"	nil	(((uw) 1) ((p oo) 0) ((k oo) 0) ((t e) 0) ((@) 0)))	;; unique
("uppercasing"	nil	(((uh p )1)((@ )0)((k ei s )1)((i ng )0)))	;; ing
("upping"	nil	(((uh p )1)((i ng )0)))	;; ing
("upraising"	nil	(((- uh p )0)((r ei z )1)((i ng )0)))	;; ing
("uprising"	nil	(((uh p )1)((r ai z )1)((i ng )0)))	;; ing
("uprooting"	nil	(((- uh p )0)((r uu t^ )1)((i ng )0)))	;; ing
("uprushing"	nil	(((uh p )1)((r uh sh )1)((i ng )0)))	;; ing
("upsetting"	nil	(((- uh p )0)((s e t^ )1)((i ng )0)))	;; ing
("upsizing"	nil	(((uh p )1)((s ai z )1)((i ng )0)))	;; ing
("upspringing"	nil	(((uh p )1)((s p r i ng )1)((i ng )0)))	;; ing
("upstaging"	nil	(((- uh p )0)((s t ei jh )1)((i ng )0)))	;; ing
("upstanding"	nil	(((- uh p )0)((s t a n d )1)((i ng )0)))	;; ing
("upsurging"	nil	(((- uh p )0)((s @@r jh )1)((i ng )0)))	;; ing
("upthrusting"	nil	(((- uh p )0)((th r uh s t )1)((i ng )0)))	;; ing
("upturning"	nil	(((- uh p )0)((t @@r n )1)((i ng )0)))	;; ing
("upwelling"	nil	(((- uh p )0)((w a l )1)((i ng )0)))	;; ing
("uranium-mining"	nil	(((y ur )0)((r ei )1)((n iy @ m )0)((m ai n )1)((i ng )0)))	;; ing
("urbanising"	nil	(((@@r )1)((b @ n )0)((ai z )1)((i ng )0)))	;; ing
("urbanizing"	nil	(((@@r )1)((b @ n )0)((ai z )1)((i ng )0)))	;; ing
("urenika"	nil	(((uw) 0) ((r e) 0) ((n ii) 1) ((k @) 0)))	;; unique
("ureure"	nil	(((uw) 1) ((r e) 0) ((uu) 0) ((r ei) 0)))	;; unique
("urging"	nil	(((@@r jh )1)((i ng )0)))	;; ing
("urinating"	nil	(((y ur )1)((r @ n )0)((ei t^ )1)((i ng )0)))	;; ing
("uruguays"	nil	(((y uu) 1) ((r @) 0) ((g w ai z) 0)))	;; unique
("urupa"	nil	(((uw) 0) ((r uu) 0) ((p aa) 1)))	;; unique
("uruwhenua"	nil	(((uw) 1) ((r uu) 0) ((f e) 1) ((n uu) 0) ((@) 0)))	;; unique
("ushering"	nil	(((uh )1)((sh @ r )0)((i ng )0)))	;; ing
("using"	nil	(((y uu z )1)((i ng )0)))	;; ing
("usufructing"	nil	(((y uu z )1)((y uw )0)((f r uh k t )1)((i ng )0)))	;; ing
("usurping"	nil	(((y uw )0)((z @@r p )1)((i ng )0)))	;; ing
("utahs"	nil	(((y uu) 1) ((t^ aa z) 0)))	;; unique
("utilising"	nil	(((y uu )1)((t^ i l )0)((ai z )1)((i ng )0)))	;; ing
("utilizing"	nil	(((y uu )1)((t^ i l )0)((ai z )1)((i ng )0)))	;; ing
("uttering"	nil	(((uh )1)((t^ @ r )0)((i ng )0)))	;; ing
("utu"	nil	(((uw) 1) ((t uu) 0)))	;; unique
("utuwai"	nil	(((uw) 1) ((t^ @) 0) ((w ai) 0)))	;; unique
("vacating"	nil	(((v ei )0)((k ei t^ )1)((i ng )0)))	;; ing
("vacationing"	nil	(((v ei )0)((k ei )1)((sh n! )0)((i ng )0)))	;; ing
("vaccinating"	nil	(((v a k )1)((s n! )0)((ei t^ )1)((i ng )0)))	;; ing
("vacillating"	nil	(((v a )1)((s @ )0)((l ei t^ )1)((i ng )0)))	;; ing
("vacuuming"	nil	(((v a )1)((k y uw m )0)((i ng )0)))	;; ing
("vailing"	nil	(((v ei l )1)((i ng )0)))	;; ing
("vails"	nil	(((v ei l z) 1)))	;; unique
("valeting"	nil	(((v a )1)((l ei )0)((i ng )0)))	;; ing
("valiants"	nil	(((v a) 1) ((l y @ n t s) 0)))	;; unique
("validating"	nil	(((v a )1)((l @ d )0)((ei t^ )1)((i ng )0)))	;; ing
("valuating"	nil	(((v a )1)((l y uw )0)((ei t^ )1)((i ng )0)))	;; ing
("valuing"	nil	(((v a )1)((l y uw )0)((i ng )0)))	;; ing
("vamping"	nil	(((v a m p )1)((i ng )0)))	;; ing
("vandalising"	nil	(((v a n )1)((d l! )0)((ai z )1)((i ng )0)))	;; ing
("vandalizing"	nil	(((v a n )1)((d l! )0)((ai z )1)((i ng )0)))	;; ing
("vanishing"	nil	(((v a )1)((n i sh )0)((i ng )0)))	;; ing
("vanquishing"	nil	(((v a ng )1)((k w i sh )0)((i ng )0)))	;; ing
("vaporing"	nil	(((v ei )1)((p @ r )0)((i ng )0)))	;; ing
("vaporising"	nil	(((v ei )1)((p @ r )0)((ai z )1)((i ng )0)))	;; ing
("vaporizing"	nil	(((v ei )1)((p @ r )0)((ai z )1)((i ng )0)))	;; ing
("vapouring"	nil	(((v ei )1)((p @ r )0)((i ng )0)))	;; ing
("variegating"	nil	(((v ir )1)((r i )0)((g ei t^ )1)((i ng )0)))	;; ing
("varnishing"	nil	(((v aa )1)((n i sh )0)((i ng )0)))	;; ing
("varying"	nil	(((v ir )1)((r iy )0)((i ng )0)))	;; ing
("vaughans"	nil	(((v oo n z) 1)))	;; unique
("vaulting"	nil	(((v oo l t )1)((i ng )0)))	;; ing
("vaunting"	nil	(((v oo n t )1)((i ng )0)))	;; ing
("vaxs"	nil	(((v a k s) 1) ((@ z) 0)))	;; unique
("vectorising"	nil	(((v e k )1)((t @ r )0)((ai z )1)((i ng )0)))	;; ing
("vectorizing"	nil	(((v e k )1)((t @ r )0)((ai z )1)((i ng )0)))	;; ing
("veering"	nil	(((v ir r )1)((i ng )0)))	;; ing
("vegetating"	nil	(((v e )1)((jh @ )0)((t ei t^ )1)((i ng )0)))	;; ing
("vegetations"	nil	(((v e) 1) ((jh @) 0) ((t ei) 1) ((sh n! z) 0)))	;; unique
("veiling"	nil	(((v ei l )1)((i ng )0)))	;; ing
("veining"	nil	(((v ei n )1)((i ng )0)))	;; ing
("velarising"	nil	(((v ii )1)((l @ r )0)((ai z )1)((i ng )0)))	;; ing
("velarizing"	nil	(((v ii )1)((l @ r )0)((ai z )1)((i ng )0)))	;; ing
("vending"	nil	(((v e n d )1)((i ng )0)))	;; ing
("veneering"	nil	(((v @ )0)((n ir r )1)((i ng )0)))	;; ing
("venerating"	nil	(((v e )1)((n @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("venezuelas"	nil	(((v e) 1) ((n @ z) 0) ((w ei) 1) ((l @ z) 0)))	;; unique
("ventilating"	nil	(((v e n )1)((t i l )0)((ei t^ )1)((i ng )0)))	;; ing
("venting"	nil	(((v e n t )1)((i ng )0)))	;; ing
("ventriloquizing"	nil	(((v e n )0)((t r i )1)((l @ )0)((k w ai z )1)((i ng )0)))	;; ing
("venturing"	nil	(((v e n )1)((ch @ r )0)((i ng )0)))	;; ing
("verbalising"	nil	(((v @@r )1)((b l! )0)((ai z )1)((i ng )0)))	;; ing
("verbalizing"	nil	(((v @@r )1)((b l! )0)((ai z )1)((i ng )0)))	;; ing
("verbing"	nil	(((v @@r b )1)((i ng )0)))	;; ing
("verging"	nil	(((v @@r jh )1)((i ng )0)))	;; ing
("vergo"	nil	(((v @@r) 1) ((g ou) 0)))	;; unique
("verifying"	nil	(((v e )1)((r @ )0)((f ai )1)((i ng )0)))	;; ing
("versifying"	nil	(((v @@r s )1)((@ )0)((f ai )1)((i ng )0)))	;; ing
("versioning"	nil	(((v @@r )1)((sh n! )0)((i ng )0)))	;; ing
("vertexs"	nil	(((v @@r) 1) ((t^ e k s) 0) ((@ z) 0)))	;; unique
("vesting"	nil	(((v e s t )1)((i ng )0)))	;; ing
("vetoing"	nil	(((v ii )1)((t^ ou )0)((i ng )0)))	;; ing
("vetting"	nil	(((v e t^ )1)((i ng )0)))	;; ing
("vexing"	nil	(((v e k s )1)((i ng )0)))	;; ing
("vibrating"	nil	(((v ai )0)((b r ei t^ )1)((i ng )0)))	;; ing
("vics"	nil	(((v i k s) 1)))	;; unique
("victimising"	nil	(((v i k )1)((t i m )0)((ai z )1)((i ng )0)))	;; ing
("victimizing"	nil	(((v i k )1)((t i m )0)((ai z )1)((i ng )0)))	;; ing
("victorias"	nil	(((v i k) 0) ((t oo) 1) ((r ii @ z) 0)))	;; unique
("videoconferencing"	nil	(((v i )1)((d iy )0)((ou )0)((k o n )1)((f @ r )0)((@ n s )0)((i ng )0)))	;; ing
("videocontroller"	nil	(((v i) 1) ((d ii) 0) ((ou) 0) ((k @ n) 0) ((t r o l) 1) ((@) 0)))	;; oul
("videocontrollers"	nil	(((v i) 1) ((d ii) 0) ((ou) 0) ((k @ n) 0) ((t r o l) 1) ((@ z) 0)))	;; oul
("videofilming"	nil	(((v i )1)((d iy )0)((ou )1)((f i l m )1)((i ng )0)))	;; ing
("videoing"	nil	(((v i )1)((d iy )0)((ou )0)((i ng )0)))	;; ing
("videotaping"	nil	(((v i )1)((d iy )0)((ou )0)((t ei p )1)((i ng )0)))	;; ing
("vieing"	nil	(((v ai )1)((i ng )0)))	;; ing
("viennas"	nil	(((v ii) 0) ((e) 1) ((n @ z) 0)))	;; unique
("vietnams"	nil	(((v ii) 1) ((e t) 0) ((n aa m z) 1)))	;; unique
("viewing"	nil	(((v y uu )1)((i ng )0)))	;; ing
("viking"	nil	(((v ai )1)((k i ng )0)))	;; ing
("vilifying"	nil	(((v i )1)((l @ )0)((f ai )1)((i ng )0)))	;; ing
("vincents"	nil	(((v i n) 1) ((s n! t s) 0)))	;; unique
("vindicating"	nil	(((v i n )1)((d @ )0)((k ei t^ )1)((i ng )0)))	;; ing
("vining"	nil	(((v ai n )1)((i ng )0)))	;; ing
("viola"	nil	(((v ii) 0) ((o) 1) ((l @) 0)))	;; oul
("violas"	nil	(((v ii) 0) ((o) 1) ((l @ z) 0)))	;; oul
("violating"	nil	(((v ai @ )1)((l ei t^ )0)((i ng )0)))	;; ing
("virginias"	nil	(((v @) 0) ((jh i) 1) ((n y @ z) 0)))	;; unique
("virtualizing"	nil	(((v @@r )1)((ch uw @ l )0)((ai z )1)((i ng )0)))	;; ing
("viruss"	nil	(((v ai) 1) ((r @ s) 0) ((@ z) 0)))	;; unique
("visioning"	nil	(((v i )1)((zh n! )0)((i ng )0)))	;; ing
("visiting"	nil	(((v i )1)((z @ t^ )0)((i ng )0)))	;; ing
("visualising"	nil	(((v i )1)((zh uw @ l )0)((ai z )1)((i ng )0)))	;; ing
("visualizing"	nil	(((v i )1)((zh uw @ l )0)((ai z )1)((i ng )0)))	;; ing
("vitalising"	nil	(((v ai )1)((t l! )0)((ai z )1)((i ng )0)))	;; ing
("vitalizing"	nil	(((v ai )1)((t l! )0)((ai z )1)((i ng )0)))	;; ing
("vitiating"	nil	(((v i )1)((sh iy )0)((ei t^ )1)((i ng )0)))	;; ing
("vitrifying"	nil	(((v i )1)((t r @ )0)((f ai )1)((i ng )0)))	;; ing
("vituperating"	nil	(((v i )0)((t y uu )1)((p @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("vivifying"	nil	(((v i )1)((v @ )0)((f ai )1)((i ng )0)))	;; ing
("vocalising"	nil	(((v ou )1)((k @ l )0)((ai z )1)((i ng )0)))	;; ing
("vocalizing"	nil	(((v ou )1)((k @ l )0)((ai z )1)((i ng )0)))	;; ing
("vociferating"	nil	(((v @ )0)((s i )1)((f @ )0)((r ei t^ )1)((i ng )0)))	;; ing
("voicing"	nil	(((v oi s )1)((i ng )0)))	;; ing
("voiding"	nil	(((v oi d )1)((i ng )0)))	;; ing
("vole"	nil	(((v o l) 1)))	;; oul
("voles"	nil	(((v o l z) 1)))	;; oul
("volleying"	nil	(((v o )1)((l iy )0)((i ng )0)))	;; ing
("volt"	nil	(((v o l t) 1)))	;; oul
("voltage"	nil	(((v o l t) 1) ((i jh) 0)))	;; oul
("voltages"	nil	(((v o l t) 1) ((i jh) 0) ((@ z) 0)))	;; oul
("voltaic"	nil	(((v o l) 0) ((t ei) 1) ((i k) 0)))	;; oul
("voltas"	nil	(((v o l) 1) ((t @ z) 0)))	;; unique
("voltmeter"	nil	(((v o l t) 1) ((m ii) 1) ((t^ @) 0)))	;; oul
("voltmeters"	nil	(((v o l t) 1) ((m ii) 1) ((t^ @ z) 0)))	;; oul
("volts"	nil	(((v o l t s) 1)))	;; oul
("volunteering"	nil	(((v o )1)((l @ n )0)((t ir r )1)((i ng )0)))	;; ing
("vomiting"	nil	(((v o )1)((m @ t^ )0)((i ng )0)))	;; ing
("voting"	nil	(((v ou t^ )1)((i ng )0)))	;; ing
("vouching"	nil	(((v ow ch )1)((i ng )0)))	;; ing
("vouchsafing"	nil	(((v - ow ch )0)((s ei f )1)((i ng )0)))	;; ing
("vowing"	nil	(((v ow )1)((i ng )0)))	;; ing
("voyaging"	nil	(((v oi )1)((i jh )0)((i ng )0)))	;; ing
("vrooming"	nil	(((v r uu m )1)((i ng )0)))	;; ing
("vs"	nil	(((v ii z) 1)))	;; unique
("vulcanising"	nil	(((v o l )1)((k @ n )0)((ai z )1)((i ng )0)))	;; ing
("vulcanizing"	nil	(((v o l )1)((k @ n )0)((ai z )1)((i ng )0)))	;; ing
("vulgarising"	nil	(((v o l )1)((g @ r )0)((ai z )1)((i ng )0)))	;; ing
("vulgarizing"	nil	(((v o l )1)((g @ r )0)((ai z )1)((i ng )0)))	;; ing
("vying"	nil	(((v ai )1)((i ng )0)))	;; ing
("wadding"	nil	(((w o d )1)((i ng )0)))	;; ing
("waddling"	nil	(((w o )1)((d l! )0)((i ng )0)))	;; ing
("wading"	nil	(((w ei d )1)((i ng )0)))	;; ing
("waerenga"	nil	(((w aa) 1) ((e) 0) ((r e ng) 0) ((@) 0)))	;; unique
("waeroa"	nil	(((w aa) 1) ((e) 0) ((r ou) 0) ((@) 0)))	;; unique
("waewaekaka"	nil	(((w aa) 1) ((e) 0) ((w aa) 0) ((e) 0) ((k aa) 1) ((k @) 0)))	;; unique
("waewaekoukou"	nil	(((w aa) 1) ((e) 0) ((w aa) 0) ((e) 0) ((k ou) 1) ((k ou) 0)))	;; unique
("waffling"	nil	(((w o )1)((f l! )0)((i ng )0)))	;; ing
("wafting"	nil	(((w o f t )1)((i ng )0)))	;; ing
("wagering"	nil	(((w ei jh )1)((@ r )0)((i ng )0)))	;; ing
("wagging"	nil	(((w a g )1)((i ng )0)))	;; ing
("waggling"	nil	(((w a )1)((g l! )0)((i ng )0)))	;; ing
("waging"	nil	(((w ei jh )1)((i ng )0)))	;; ing
("waharoa"	nil	(((w aa) 1) ((h aa) 0) ((r ou) 0) ((@) 0)))	;; unique
("wahi"	nil	(((w aa) 1) ((h ii) 0)))	;; unique
("wahine"	nil	(((w aa) 1) ((h ii) 0) ((n ei) 0)))	;; unique
("wai"	nil	(((w ai) 1)))	;; unique
("waiariki"	nil	(((w ai) 1) ((@) 0) ((r ii) 0) ((k ii) 0)))	;; unique
("waiata"	nil	(((w ai) 1) ((aa) 0) ((t^ @) 0)))	;; unique
("waiharakeke"	nil	(((w ai) 0) ((h aa) 1) ((r aa) 0) ((k e) 1) ((k ei) 0)))	;; unique
("waihi"	nil	(((w ai) 0) ((h ii) 1)))	;; unique
("waihopai"	nil	(((w ai) 0) ((h ou) 1) ((p ai) 0)))	;; unique
("wailing"	nil	(((w ei l )1)((i ng )0)))	;; ing
("wainscoting"	nil	(((w ei n )1)((s k @ t^ )0)((i ng )0)))	;; ing
("wainscotting"	nil	(((w ei n )1)((s k @ t^ )0)((i ng )0)))	;; ing
("waiouru"	nil	(((w ai) 0) ((uu) 1) ((r uu) 0)))	;; unique
("waipiro"	nil	(((w ai) 1) ((p ii) 1) ((r ou) 0)))	;; unique
("wairarapa"	nil	(((w ai) 0) ((r @) 0) ((r a) 1) ((p @) 0)))	;; unique
("wairau"	nil	(((w ai) 1) ((r ow) 0)))	;; unique
("wairua"	nil	(((w ai) 0) ((r uu) 1) ((@) 0)))	;; unique
("waistcoating"	nil	(((w ei s t )1)((k ou t^ )1)((i ng )0)))	;; ing
("waitangi"	nil	(((w ai) 1) ((t uh ng) 0) ((ii) 0)))	;; unique
("waitering"	nil	(((w ei t^ )1)((@ r )0)((i ng )0)))	;; ing
("waiting"	nil	(((w ei t^ )1)((i ng )0)))	;; ing
("waitoreke"	nil	(((w ai) 1) ((t oo) 0) ((r e) 0) ((k ei) 0)))	;; unique
("waitressing"	nil	(((w ei )1)((t r @ s )0)((i ng )0)))	;; ing
("waitresss"	nil	(((w ei) 1) ((t r @ s) 0) ((@ z) 0)))	;; unique
("waiu-atua"	nil	(((w ai) 0) ((uu) 1) ((aa) 1) ((t uu) 0) ((@) 0)))	;; unique
("waiving"	nil	(((w ei v )1)((i ng )0)))	;; ing
("waka"	nil	(((w o) 1) ((k @) 0)))	;; unique
("wakahuia"	nil	(((w aa) 1) ((k aa) 0) ((h uu) 0) ((ii) 0) ((@) 0)))	;; unique
("wakening"	nil	(((w ei k )1)((@ n )0)((i ng )0)))	;; ing
("waking"	nil	(((w ei k )1)((i ng )0)))	;; ing
("waldorfs"	nil	(((w oo l) 1) ((d oo f s) 0)))	;; unique
("waldos"	nil	(((w oo l) 1) ((d ou z) 0)))	;; unique
("waldrons"	nil	(((w oo l) 1) ((d r @ n z) 0)))	;; unique
("walking"	nil	(((w oo k )1)((i ng )0)))	;; ing
("wallaces"	nil	(((w o) 1) ((l @ s) 0) ((@ z) 0)))	;; unique
("wallcovering"	nil	(((w oo l )1)((k uh )1)((v @ r )0)((i ng )0)))	;; ing
("walling"	nil	(((w oo l )1)((i ng )0)))	;; ing
("walloping"	nil	(((w o )1)((l @ p )0)((i ng )0)))	;; ing
("wallowing"	nil	(((w o )1)((l ou )0)((i ng )0)))	;; ing
("wallpapering"	nil	(((w oo l )1)((p ei )1)((p @ r )0)((i ng )0)))	;; ing
("wallys"	nil	(((w o) 1) ((l ii z) 0)))	;; unique
("walpole"	nil	(((w oo l) 1) ((p o l) 0)))	;; oul
("walshs"	nil	(((w oo l sh) 1) ((@ z) 0)))	;; unique
("waltzing"	nil	(((w oo l t s )1)((i ng )0)))	;; ing
("wan-looking"	nil	(((w o n )1)((l u k )1)((i ng )0)))	;; ing
("wananga"	nil	(((w a) 1) ((n uh ng) 0) ((@) 0)))	;; unique
("wandering"	nil	(((w o n )1)((d @ r )0)((i ng )0)))	;; ing
("wangling"	nil	(((w a ng )1)((g l! )0)((i ng )0)))	;; ing
("wangs"	nil	(((w a ng z) 1)))	;; unique
("waning"	nil	(((w ei n )1)((i ng )0)))	;; ing
("wanking"	nil	(((w a ng k )1)((i ng )0)))	;; ing
("wanting"	nil	(((w o n t )1)((i ng )0)))	;; ing
("waoriki"	nil	(((w aa) 1) ((oo) 0) ((r ii) 0) ((k ii) 0)))	;; unique
("war-making"	nil	(((w oo )1)((m ei k )1)((i ng )0)))	;; ing
("warbling"	nil	(((w oo )1)((b l! )0)((i ng )0)))	;; ing
("warding"	nil	(((w oo d )1)((i ng )0)))	;; ing
("warehou"	nil	(((w o) 1) ((r @) 0) ((h ow) 0)))	;; unique
("warehousing"	nil	(((w ii @ )1)((h ow z )1)((i ng )0)))	;; ing
("warfarin"	nil	(((w oo) 1) ((f @) 0) ((r i n) 0)))	;; unique
("warfaring"	nil	(((w oo )1)((f ir r )0)((i ng )0)))	;; ing
("wargaming"	nil	(((w oo )1)((g ei m )1)((i ng )0)))	;; ing
("warhol"	nil	(((w oo) 1) ((h o l) 0)))	;; oul
("waring"	nil	(((w ir )1)((r i ng )0)))	;; ing
("warlording"	nil	(((w oo )1)((l oo d )1)((i ng )0)))	;; ing
("warming"	nil	(((w oo m )1)((i ng )0)))	;; ing
("warmongering"	nil	(((w oo )1)((m uh ng )1)((g @ r )0)((i ng )0)))	;; ing
("warning"	nil	(((w oo n )1)((i ng )0)))	;; ing
("warping"	nil	(((w oo p )1)((i ng )0)))	;; ing
("warranting"	nil	(((w o )1)((r @ n t )0)((i ng )0)))	;; ing
("warring"	nil	(((w oo r )1)((i ng )0)))	;; ing
("washing"	nil	(((w o sh )1)((i ng )0)))	;; ing
("wassailing"	nil	(((w o )1)((s ei l )0)((i ng )0)))	;; ing
("wasting"	nil	(((w ei s t )1)((i ng )0)))	;; ing
("watching"	nil	(((w o ch )1)((i ng )0)))	;; ing
("watchmaking"	nil	(((w o ch )1)((m ei k )1)((i ng )0)))	;; ing
("watchmans"	nil	(((w o ch) 1) ((m @ n z) 0)))	;; unique
("watchs"	nil	(((w o ch) 1) ((@ z) 0)))	;; unique
("water-cooler"	nil	(((w oo) 1) ((t^ @) 0) ((k u l) 1) ((@) 0)))	;; uul
("watercoloring"	nil	(((w oo )1)((t^ @ )0)((k uh )1)((l @ r )0)((i ng )0)))	;; ing
("watering"	nil	(((w oo )1)((t^ @ r )0)((i ng )0)))	;; ing
("waterlogging"	nil	(((w oo )1)((t^ @ )0)((l o g )1)((i ng )0)))	;; ing
("watermarking"	nil	(((w oo )1)((t^ @ )0)((m aa k )1)((i ng )0)))	;; ing
("waterproofing"	nil	(((w oo )1)((t^ @ )0)((p r uu f )1)((i ng )0)))	;; ing
("watling"	nil	(((w o t )1)((l i ng )0)))	;; ing
("wattling"	nil	(((w o )1)((t l! )0)((i ng )0)))	;; ing
("wattss"	nil	(((w o t s) 1) ((@ z) 0)))	;; unique
("wavering"	nil	(((w ei )1)((v @ r )0)((i ng )0)))	;; ing
("waving"	nil	(((w ei v )1)((i ng )0)))	;; ing
("waxing"	nil	(((w a k s )1)((i ng )0)))	;; ing
("waxworking"	nil	(((w a k s )1)((w @@r k )1)((i ng )0)))	;; ing
("wayfaring"	nil	(((w ei )1)((f ir r )1)((i ng )0)))	;; ing
("waylaying"	nil	(((w - ei )0)((l ei )1)((i ng )0)))	;; ing
("waynes"	nil	(((w ei n z) 1)))	;; unique
("we'll"	nil	(((w ii l) 1)))	;; contraction
("weakening"	nil	(((w ii k )1)((@ n )0)((i ng )0)))	;; ing
("weakling"	nil	(((w ii k )1)((l i ng )0)))	;; ing
("weaklooking"	nil	(((w ii k )1)((l u k )1)((i ng )0)))	;; ing
("weaning"	nil	(((w ii n )1)((i ng )0)))	;; ing
("weanling"	nil	(((w ii n )1)((l i ng )0)))	;; ing
("wearing"	nil	(((w ir r )1)((i ng )0)))	;; ing
("wearying"	nil	(((w ir )1)((r iy )0)((i ng )0)))	;; ing
("weaseling"	nil	(((w ii )1)((z l! )0)((i ng )0)))	;; ing
("weathering"	nil	(((w e )1)((dh @ r )0)((i ng )0)))	;; ing
("weatherproofing"	nil	(((w e )1)((dh @ )0)((p r uu f )1)((i ng )0)))	;; ing
("weatherstripping"	nil	(((w e )1)((dh @ )0)((s t r i p )1)((i ng )0)))	;; ing
("weaving"	nil	(((w ii v )1)((i ng )0)))	;; ing
("webbing"	nil	(((w e b )1)((i ng )0)))	;; ing
("wedding"	nil	(((w e d )1)((i ng )0)))	;; ing
("wedging"	nil	(((w e jh )1)((i ng )0)))	;; ing
("weeding"	nil	(((w ii d )1)((i ng )0)))	;; ing
("weeing"	nil	(((w ii )1)((i ng )0)))	;; ing
("week-old"	nil	(((w ii k) 0) ((o l d) 1)))	;; oul
("weening"	nil	(((w ii n )1)((i ng )0)))	;; ing
("weeping"	nil	(((w ii p )1)((i ng )0)))	;; ing
("weeweeing"	nil	(((w ii )1)((w ii )1)((i ng )0)))	;; ing
("wehi"	nil	(((w e1 ) 0) ((h ii) 0)))	;; unique
("weighing"	nil	(((w ei )1)((i ng )0)))	;; ing
("weighting"	nil	(((w ei t^ )1)((i ng )0)))	;; ing
("weightlifting"	nil	(((w ei t )1)((l i f t )1)((i ng )0)))	;; ing
("weisss"	nil	(((v ai s) 1) ((@ z) 0)))	;; unique
("weka"	nil	(((w e) 1) ((k @) 0)))	;; unique
("weka-pango"	nil	(((w e) 1) ((k @) 0) ((p uh ng) 1) ((ou) 0)))	;; unique
("welcoming"	nil	(((w a l )1)((k @ m )0)((i ng )0)))	;; ing
("welding"	nil	(((w a l d )1)((i ng )0)))	;; ing
("welfares"	nil	(((w a l) 1) ((f ir z) 0)))	;; unique
("well-becoming"	nil	(((w a l )1)((b i )0)((k uh m )1)((i ng )0)))	;; ing
("well-being"	nil	(((w a l )1)((b ii )1)((i ng )0)))	;; ing
("well-dressing"	nil	(((w a l )1)((d r e s )1)((i ng )0)))	;; ing
("well-judging"	nil	(((w a l )1)((jh uh jh )1)((i ng )0)))	;; ing
("well-liking"	nil	(((w a l )1)((l ai k )1)((i ng )0)))	;; ing
("well-looking"	nil	(((w a l )1)((l u k )1)((i ng )0)))	;; ing
("well-meaning"	nil	(((w a l )1)((m ii n )1)((i ng )0)))	;; ing
("well-pleasing"	nil	(((w a l )1)((p l ii z )1)((i ng )0)))	;; ing
("well-upholstered"	nil	(((w a l) 1) ((uh p) 0) ((h o l) 1) ((s t @ d) 0)))	;; oul
("well-wishing"	nil	(((w a l )1)((w i sh )1)((i ng )0)))	;; ing
("wellbeing"	nil	(((w a l )1)((b ii )1)((i ng )0)))	;; ing
("wellers"	nil	(((w a) 1) ((l @ z) 0)))	;; unique
("wellieing"	nil	(((w a )1)((l iy )0)((i ng )0)))	;; ing
("welling"	nil	(((w a l )1)((i ng )0)))	;; ing
("wellying"	nil	(((w a )1)((l iy )0)((i ng )0)))	;; ing
("welshing"	nil	(((w a l sh )1)((i ng )0)))	;; ing
("welshs"	nil	(((w a l sh) 1) ((@ z) 0)))	;; unique
("weltering"	nil	(((w a l )1)((t @ r )0)((i ng )0)))	;; ing
("wending"	nil	(((w e n d )1)((i ng )0)))	;; ing
("wendys"	nil	(((w e n) 1) ((d ii z) 0)))	;; unique
("weren't"	nil	(((w @@r n t) 1)))	;; contraction
("wero"	nil	(((w e) 1) ((r ou) 0)))	;; unique
("westernising"	nil	(((w e s t )1)((@ n )0)((ai z )1)((i ng )0)))	;; ing
("westernizing"	nil	(((w e s t )1)((@ n )0)((ai z )1)((i ng )0)))	;; ing
("weta"	nil	(((w e) 1) ((t^ @) 0)))	;; unique
("wetapunga"	nil	(((w e) 1) ((t aa) 0) ((p uu ng) 1) ((@) 0)))	;; unique
("wetting"	nil	(((w e t^ )1)((i ng )0)))	;; ing
("weve"	nil	(((w ii v) 1)))	;; unique
("weweia"	nil	(((w e) 1) ((w e) 0) ((ii) 0) ((@) 0)))	;; unique
("whacking"	nil	(((w a k )1)((i ng )0)))	;; ing
("whai"	nil	(((f ai) 1)))	;; unique
("whai-repo"	nil	(((f ai) 1) ((r e) 1) ((p oo) 0)))	;; unique
("whaikorero"	nil	(((f ai) 0) ((k oo) 1) ((r e) 0) ((r ou) 0)))	;; unique
("whaka-"	nil	(((f aa) 0) ((k aa) 0)))	;; unique
("whakairo"	nil	(((f aa) 1) ((k ai) 0) ((r ou) 0)))	;; unique
("whakama"	nil	(((f aa) 0) ((k aa) 0) ((m aa) 1)))	;; unique
("whakaoriori"	nil	(((f aa) 1) ((k @) 0) ((oo) 1) ((r ii) 0) ((oo) 1) ((r ii) 0)))	;; unique
("whakapapa"	nil	(((f aa) 1) ((k aa) 0) ((p aa) 0) ((p @) 0)))	;; unique
("whakatane"	nil	(((f aa) 0) ((k @) 0) ((t aa) 1) ((n i) 0)))	;; unique
("whakatauaki"	nil	(((f aa) 1) ((k aa) 0) ((t ow) 1) ((aa) 0) ((k ii) 0)))	;; unique
("whakatu"	nil	(((f aa) 1) ((k aa) 0) ((t uu) 0)))	;; unique
("whakawhanaungatanga"	nil	(((f aa) 1) ((k aa) 0) ((f aa) 1) ((n ow ng) 0) ((aa) 0) ((t uh ng) 0) ((@) 0)))	;; unique
("whaling"	nil	(((w ei l )1)((i ng )0)))	;; ing
("whamming"	nil	(((w a m )1)((i ng )0)))	;; ing
("whanake"	nil	(((f aa) 1) ((n aa) 0) ((k ei) 0)))	;; unique
("whanau"	nil	(((f aa) 1) ((n ow) 0)))	;; unique
("whanaunga"	nil	(((f aa) 0) ((n @) 0) ((u ng) 1) ((@) 0)))	;; unique
("whanaungatanga"	nil	(((f aa) 1) ((n ow ng) 0) ((aa) 0) ((t uh ng) 0) ((@) 0)))	;; unique
("whangai"	nil	(((f uh ng) 1) ((ai) 0)))	;; unique
("whanganui"	nil	(((f uh ng) 1) ((aa) 0) ((n uu) 0) ((ii) 0)))	;; unique
("wharangi"	nil	(((f aa) 1) ((r uh ng) 0) ((ii) 0)))	;; unique
("wharangipiro"	nil	(((f aa) 1) ((r uh ng) 0) ((ii) 0) ((p ii) 1) ((r ou) 0)))	;; unique
("wharariki"	nil	(((f aa) 1) ((r aa) 0) ((r ii) 0) ((k ii) 0)))	;; unique
("wharawhara"	nil	(((f aa) 1) ((r aa) 0) ((f aa) 0) ((r @) 0)))	;; unique
("whare"	nil	(((f aa) 1) ((r ei) 0)))	;; unique
("wharekai"	nil	(((f aa) 1) ((r e) 0) ((k ai) 0)))	;; unique
("wharekauri"	nil	(((f aa) 1) ((r e) 0) ((k ow) 0) ((r ii) 0)))	;; unique
("wharenui"	nil	(((f aa) 1) ((r e) 0) ((n uu) 0) ((ii) 0)))	;; unique
("wharepaku"	nil	(((f aa) 1) ((r e) 0) ((p aa) 1) ((k uu) 0)))	;; unique
("wharepuni"	nil	(((f aa) 1) ((r e) 0) ((p uu) 0) ((n ii) 0)))	;; unique
("whariki"	nil	(((f aa) 1) ((r ii) 0) ((k ii) 0)))	;; unique
("what'll"	nil	(((w o t) 1) ((l!) 0)))	;; contraction
("what're"	nil	(((w o t^) 1) ((@) 0)))	;; contraction
("what's"	nil	(((w o t s) 1)))	;; contraction
("what've"	nil	(((w o t^) 1) ((@ v) 0)))	;; unique
("whata"	nil	(((f aa) 1) ((t^ @) 0)))	;; unique
("whatd"	nil	(((w o t^) 1) ((@ d) 0)))	;; unique
("whatu"	nil	(((f aa) 1) ((t uu) 0)))	;; unique
("whau"	nil	(((f ow) 1)))	;; unique
("whauwhau"	nil	(((f ow) 1) ((f ow) 0)))	;; unique
("whauwhaupaku"	nil	(((f ow) 1) ((f ow) 0) ((p aa) 0) ((k uu) 0)))	;; unique
("whauwhi"	nil	(((f ow) 1) ((f ii) 0)))	;; unique
("whawhakou"	nil	(((f aa) 1) ((f aa) 0) ((k ou) 0)))	;; unique
("wheedling"	nil	(((w ii )1)((d l! )0)((i ng )0)))	;; ing
("wheeling"	nil	(((w ii l )1)((i ng )0)))	;; ing
("wheezing"	nil	(((w ii z )1)((i ng )0)))	;; ing
("whekau"	nil	(((f e) 1) ((k ow) 0)))	;; unique
("wheke"	nil	(((f e) 1) ((k ei) 0)))	;; unique
("wheki"	nil	(((f e) 1) ((k ii) 0)))	;; unique
("whelping"	nil	(((w a l p )1)((i ng )0)))	;; ing
("whens"	nil	(((w e n z) 1)))	;; unique
("whenua"	nil	(((f e) 1) ((n uu) 0) ((@) 0)))	;; unique
("where're"	nil	(((w ir r) 1) ((@) 0)))	;; contraction
("where's"	nil	(((w e @ z) 1)))	;; contraction, beer-bear
("whered"	nil	(((w ir d) 1)))	;; unique
("whetting"	nil	(((w e t^ )1)((i ng )0)))	;; ing
("whichs"	nil	(((w i ch) 1) ((@ z) 0)))	;; unique
("whickering"	nil	(((w i )1)((k @ r )0)((i ng )0)))	;; ing
("whiffing"	nil	(((w i f )1)((i ng )0)))	;; ing
("whigging"	nil	(((w i g )1)((i ng )0)))	;; ing
("whiling"	nil	(((w ai l )1)((i ng )0)))	;; ing
("whimpering"	nil	(((w i m )1)((p @ r )0)((i ng )0)))	;; ing
("whingeing"	nil	(((w i n jh )1)((i ng )0)))	;; ing
("whinging"	nil	(((w i n jh )1)((i ng )0)))	;; ing
("whining"	nil	(((w ai n )1)((i ng )0)))	;; ing
("whinnying"	nil	(((w i )1)((n iy )0)((i ng )0)))	;; ing
("whio"	nil	(((f ii) 1) ((oo) 0)))	;; unique
("whip-cracking"	nil	(((w i p )1)((k r a k )1)((i ng )0)))	;; ing
("whippeting"	nil	(((w i )1)((p i t^ )0)((i ng )0)))	;; ing
("whipping"	nil	(((w i p )1)((i ng )0)))	;; ing
("whipstitching"	nil	(((w i p )1)((s t i ch )1)((i ng )0)))	;; ing
("whirling"	nil	(((w @@r l )1)((i ng )0)))	;; ing
("whirlpool"	nil	(((w @@r l) 1) ((p u l) 0)))	;; uul
("whirlpools"	nil	(((w @@r l) 1) ((p u l z) 0)))	;; uul
("whirring"	nil	(((w @@r r )1)((i ng )0)))	;; ing
("whisking"	nil	(((w i s k )1)((i ng )0)))	;; ing
("whispering"	nil	(((w i )1)((s p @ r )0)((i ng )0)))	;; ing
("whistleblowing"	nil	(((w i )1)((s l! )0)((b l ou )1)((i ng )0)))	;; ing
("whistling"	nil	(((w i )1)((s l! )0)((i ng )0)))	;; ing
("whitakers"	nil	(((w i) 1) ((t^ @) 0) ((k @ z) 0)))	;; unique
("whitau"	nil	(((f ii) 1) ((t ow) 0)))	;; unique
("whitbreads"	nil	(((w i t) 1) ((b r e d z) 0)))	;; unique
("white-washing"	nil	(((w ai t )1)((w o sh )1)((i ng )0)))	;; ing
("whitening"	nil	(((w ai t )1)((n! )0)((i ng )0)))	;; ing
("whitewashing"	nil	(((w ai t )1)((w o sh )1)((i ng )0)))	;; ing
("whiting"	nil	(((w ai )1)((t^ i ng )0)))	;; ing
("whitneys"	nil	(((w i t) 1) ((n ii z) 0)))	;; unique
("whittling"	nil	(((w i )1)((t l! )0)((i ng )0)))	;; ing
("whizzing"	nil	(((w i z )1)((i ng )0)))	;; ing
("who'd"	nil	(((h uu d) 1)))	;; contraction
("who'll"	nil	(((h @ l) 1)))	;; contraction
("who're"	nil	(((h uu @) 1)))	;; unique
("who's"	nil	(((h uu z) 1)))	;; contraction
("who've"	nil	(((h uu v) 1)))	;; contraction
("whole"	nil	(((h o l) 1)))	;; oul
("whole-hearted"	nil	(((h o l) 1) ((h aa t^) 1) ((@ d) 0)))	;; oul
("whole-heartedly"	nil	(((h o l) 1) ((h aa t^) 1) ((@ d) 0) ((l ii) 0)))	;; oul
("wholehearted"	nil	(((h o l) 1) ((h aa t^) 1) ((@ d) 0)))	;; oul
("wholeheartedly"	nil	(((h o l) 1) ((h aa t^) 1) ((@ d) 0) ((l ii) 0)))	;; oul
("wholeheartedness"	nil	(((h o l) 1) ((h aa t^) 1) ((@ d) 0) ((n @ s) 0)))	;; oul
("wholemeal"	nil	(((h o l) 1) ((m ii l) 0)))	;; oul
("wholeness"	nil	(((h o l) 1) ((n @ s) 0)))	;; oul
("wholes"	nil	(((h o l z) 1)))	;; oul
("wholesale"	nil	(((h o l) 1) ((s ei l) 0)))	;; oul
("wholesaler"	nil	(((h o l) 1) ((s ei l) 1) ((@) 0)))	;; oul
("wholesalers"	nil	(((h o l) 1) ((s ei l) 1) ((@ z) 0)))	;; oul
("wholesales"	nil	(((h o l) 1) ((s ei l z) 0)))	;; oul
("wholesaling"	nil	(((h o l) 1) ((s ei l) 1) ((i ng) 0)))	;; oul
("wholescale"	nil	(((h o l) 1) ((s k ei l) 0)))	;; oul
("wholesome"	nil	(((h o l) 1) ((s m!) 0)))	;; oul
("wholesomely"	nil	(((h o l) 1) ((s m!) 0) ((l ii) 0)))	;; oul
("wholesomeness"	nil	(((h o l) 1) ((s m!) 0) ((n @ s) 0)))	;; oul
("wholesomest"	nil	(((h o l) 1) ((s m!) 0) ((@ s t) 0)))	;; oul
("wholism"	nil	(((h o l) 1) ((i) 0) ((z m!) 0)))	;; oul
("wholistic"	nil	(((h o l) 0) ((i s t) 1) ((i k) 0)))	;; oul
("wholly"	nil	(((h o l) 1) ((ii) 0)))	;; oul
("whooping"	nil	(((w uu p )1)((i ng )0)))	;; ing
("whooshing"	nil	(((w u sh )1)((i ng )0)))	;; ing
("whopping"	nil	(((w o p )1)((i ng )0)))	;; ing
("whoring"	nil	(((h oo r )1)((i ng )0)))	;; ing
("why's"	nil	(((w ai z) 1)))	;; contraction
("wicked-looking"	nil	(((w i )1)((k i d )0)((l u k )1)((i ng )0)))	;; ing
("widely-differing"	nil	(((w ai d )1)((l iy )0)((d i )1)((f @ r )0)((i ng )0)))	;; ing
("widening"	nil	(((w ai d )1)((n! )0)((i ng )0)))	;; ing
("wideranging"	nil	(((w ai d )1)((r ei n jh )1)((i ng )0)))	;; ing
("widowing"	nil	(((w i )1)((d ou )0)((i ng )0)))	;; ing
("wielding"	nil	(((w ii l d )1)((i ng )0)))	;; ing
("wife-beating"	nil	(((w ai f )1)((b ii t^ )1)((i ng )0)))	;; ing
("wife-carrying"	nil	(((w ai f )1)((k a )1)((r iy )0)((i ng )0)))	;; ing
("wigging"	nil	(((w i g )1)((i ng )0)))	;; ing
("wiggling"	nil	(((w i )1)((g l! )0)((i ng )0)))	;; ing
("wigmaking"	nil	(((w i g )1)((m ei k )1)((i ng )0)))	;; ing
("wikitoria"	nil	(((w i) 0) ((k ii) 0) ((t oo) 1) ((r ii) 0) ((@) 0)))	;; unique
("wilcoxs"	nil	(((w i l) 1) ((k o k s) 0) ((@ z) 0)))	;; unique
("wiling"	nil	(((w ai l )1)((i ng )0)))	;; ing
("will-o-the-wisp"	nil	(((w i l) 1) ((@) 0) ((dh @) 0) ((w i s p) 1)))	;; unique
("will-o-the-wisps"	nil	(((w i l) 1) ((@) 0) ((dh @) 0) ((w i s p s) 1)))	;; unique
("willards"	nil	(((w i) 1) ((l aa d z) 0)))	;; unique
("williamsons"	nil	(((w i l) 1) ((y @ m) 0) ((s n! z) 0)))	;; unique
("williamss"	nil	(((w i l) 1) ((y @ m z) 0) ((@ z) 0)))	;; unique
("willing"	nil	(((w i l )1)((i ng )0)))	;; ing
("williss"	nil	(((w i) 1) ((l i s) 0) ((@ z) 0)))	;; unique
("wilmas"	nil	(((w i l) 1) ((m @ z) 0)))	;; unique
("wilsons"	nil	(((w i l) 1) ((s n! z) 0)))	;; unique
("wilting"	nil	(((w i l t )1)((i ng )0)))	;; ing
("wiltons"	nil	(((w i l) 1) ((t n! z) 0)))	;; unique
("wimping"	nil	(((w i m p )1)((i ng )0)))	;; ing
("wincing"	nil	(((w i n s )1)((i ng )0)))	;; ing
("winding"	nil	(((w i n d )1)((i ng )0)))	;; ing
("windowing"	nil	(((w i n )1)((d ou )0)((i ng )0)))	;; ing
("windsurfing"	nil	(((w i n d )1)((s @@r f )1)((i ng )0)))	;; ing
("winemaking"	nil	(((w ai n )1)((m ei k )1)((i ng )0)))	;; ing
("wingding"	nil	(((w i ng )1)((d i ng )0)))	;; ing
("wingeing"	nil	(((w i n jh )1)((i ng )0)))	;; ing
("winging"	nil	(((w i n jh )1)((i ng )0)))	;; ing
("wining"	nil	(((w ai n )1)((i ng )0)))	;; ing
("winking"	nil	(((w i ng k )1)((i ng )0)))	;; ing
("winkling"	nil	(((w i ng )1)((k l! )0)((i ng )0)))	;; ing
("winning"	nil	(((w i n )1)((i ng )0)))	;; ing
("winnowing"	nil	(((w i )1)((n ou )0)((i ng )0)))	;; ing
("winstons"	nil	(((w i n) 1) ((s t @ n z) 0)))	;; unique
("wintering"	nil	(((w i n )1)((t @ r )0)((i ng )0)))	;; ing
("winthrops"	nil	(((w i n) 1) ((th r o p s) 0)))	;; unique
("wiping"	nil	(((w ai p )1)((i ng )0)))	;; ing
("wiredrawing"	nil	(((w ai @ )1)((d r oo )1)((i ng )0)))	;; ing
("wiretapping"	nil	(((w ai @ )1)((t a p )1)((i ng )0)))	;; ing
("wireworking"	nil	(((w ai @ )1)((w @@r k )1)((i ng )0)))	;; ing
("wiring"	nil	(((w ai @ r )1)((i ng )0)))	;; ing
("wisecracking"	nil	(((w ai z )1)((k r a k )1)((i ng )0)))	;; ing
("wishing"	nil	(((w i sh )1)((i ng )0)))	;; ing
("wising"	nil	(((w ai z )1)((i ng )0)))	;; ing
("witching"	nil	(((w i ch )1)((i ng )0)))	;; ing
("witchs"	nil	(((w i ch) 1) ((@ z) 0)))	;; unique
("withdrawing"	nil	(((w - i dh )0)((d r oo )1)((i ng )0)))	;; ing
("withering"	nil	(((w i )1)((dh @ r )0)((i ng )0)))	;; ing
("withhold"	nil	(((w i dh) 0) ((h o l d) 1)))	;; oul
("withholder"	nil	(((w i dh) 0) ((h o l d) 1) ((@) 0)))	;; oul
("withholding"	nil	(((w i dh) 0) ((h o l d) 1) ((i ng) 0)))	;; oul
("withholdings"	nil	(((w i dh) 0) ((h o l d) 1) ((i ng z) 0)))	;; oul
("withholds"	nil	(((w i dh) 0) ((h o l d z) 1)))	;; oul
("withstanding"	nil	(((w - i dh )0)((s t a n d )1)((i ng )0)))	;; ing
("witnessing"	nil	(((w i t )1)((n @ s )0)((i ng )0)))	;; ing
("witnesss"	nil	(((w i t) 1) ((n @ s) 0) ((@ z) 0)))	;; unique
("witting"	nil	(((w i )1)((t^ i ng )0)))	;; ing
("wiving"	nil	(((w ai v )1)((i ng )0)))	;; ing
("wiwi"	nil	(((w ii) 1) ((w ii) 0)))	;; unique
("wobbling"	nil	(((w o )1)((b l! )0)((i ng )0)))	;; ing
("woking"	nil	(((w ou )1)((k i ng )0)))	;; ing
("wold"	nil	(((w o l d) 1)))	;; oul
("wolds"	nil	(((w o l d z) 1)))	;; oul
("wolfgangs"	nil	(((v o l f) 1) ((g a ng z) 0)))	;; unique
("wolfing"	nil	(((w u l f )1)((i ng )0)))	;; ing
("wolfs"	nil	(((w u l f s) 1)))	;; unique
("womanising"	nil	(((w u )1)((m @ n )0)((ai z )1)((i ng )0)))	;; ing
("womanizing"	nil	(((w u )1)((m @ n )0)((ai z )1)((i ng )0)))	;; ing
("womans"	nil	(((w u) 1) ((m @ n z) 0)))	;; unique
("womens"	nil	(((w i) 1) ((m i n z) 0)))	;; unique
("won't"	nil	(((w ou n t) 1)))	;; contraction
("wondering"	nil	(((w uh n )1)((d @ r )0)((i ng )0)))	;; ing
("woodburning"	nil	(((w u d )1)((b @@r n )1)((i ng )0)))	;; ing
("woodcarving"	nil	(((w u d )1)((k aa v )1)((i ng )0)))	;; ing
("woodcutting"	nil	(((w u d )1)((k uh t^ )1)((i ng )0)))	;; ing
("wooding"	nil	(((w u d )1)((i ng )0)))	;; ing
("woodmans"	nil	(((w u d) 1) ((m @ n z) 0)))	;; unique
("woodpecking"	nil	(((w u d )1)((p e k )1)((i ng )0)))	;; ing
("woodworking"	nil	(((w u d )1)((w - @@r k )0)((i ng )0)))	;; ing
("woofing"	nil	(((w u f )1)((i ng )0)))	;; ing
("wooing"	nil	(((w uu )1)((i ng )0)))	;; ing
("wool"	nil	(((w u l) 1)))	;; uul
("wool-gathering"	nil	(((w u l) 1) ((g a) 1) ((dh @ r) 0) ((i ng) 0)))	;; uul
("wooldridge"	nil	(((w u l) 1) ((d r i jh) 0)))	;; uul
("woolen"	nil	(((w u l) 1) ((@ n) 0)))	;; uul
("woolens"	nil	(((w u l) 1) ((@ n z) 0)))	;; uul
("woolf"	nil	(((w u l f) 1)))	;; uul
("woolgather"	nil	(((w u l) 1) ((g a) 1) ((dh @) 0)))	;; uul
("woolgathered"	nil	(((w u l) 1) ((g a) 1) ((dh @ d) 0)))	;; uul
("woolgathering"	nil	(((w u l) 1) ((g a) 1) ((dh @ r) 0) ((i ng) 0)))	;; uul
("woolgathers"	nil	(((w u l) 1) ((g a) 1) ((dh @ z) 0)))	;; uul
("woolily"	nil	(((w u l) 1) ((@) 0) ((l ii) 0)))	;; uul
("woollen"	nil	(((w u l) 1) ((@ n) 0)))	;; uul
("woollens"	nil	(((w u l) 1) ((@ n z) 0)))	;; uul
("woolley"	nil	(((w u l) 1) ((ii) 0)))	;; uul
("woolleys"	nil	(((w u l) 1) ((ii z) 0)))	;; uul
("woollier"	nil	(((w u l) 1) ((e @) 0)))	;; uul
("woollies"	nil	(((w u l) 1) ((ii z) 0)))	;; uul
("woolliest"	nil	(((w u l) 1) ((ii @ s t) 0)))	;; uul
("woolliness"	nil	(((w u l) 1) ((ii) 0) ((n @ s) 0)))	;; uul
("woolly"	nil	(((w u l) 1) ((ii) 0)))	;; uul
("wools"	nil	(((w u l z) 1)))	;; uul
("woolsack"	nil	(((w u l) 1) ((s a k) 0)))	;; uul
("woolsacks"	nil	(((w u l) 1) ((s a k s) 0)))	;; uul
("woolveridge"	nil	(((w u l) 1) ((v @) 0) ((r i jh) 0)))	;; uul
("woolwich"	nil	(((w u) 1) ((l i ch) 0)))	;; uul
("woolworth"	nil	(((w u l) 1) ((w @ th) 0)))	;; uul
("woolworths"	nil	(((w u l) 1) ((w @ th s) 0)))	;; uul
("word-processing"	nil	(((w @@r d )1)((p r ou )1)((s e s )0)((i ng )0)))	;; ing
("wording"	nil	(((w @@r d )1)((i ng )0)))	;; ing
("wordprocessing"	nil	(((w @@r d )1)((p r ou )1)((s e s )0)((i ng )0)))	;; ing
("wordsworths"	nil	(((w @@r d z) 1) ((w @ th s) 0)))	;; unique
("workd"	nil	(((w @@r k t) 1)))	;; unique
("workholder"	nil	(((w @@r k) 1) ((h o l d) 1) ((@) 0)))	;; oul
("workholders"	nil	(((w @@r k) 1) ((h o l d) 1) ((@ z) 0)))	;; oul
("working"	nil	(((w @@r k )1)((i ng )0)))	;; ing
("workmans"	nil	(((w @@r k) 1) ((m @ n z) 0)))	;; unique
("workmens"	nil	(((w @@r k) 1) ((m @ n z) 0)))	;; unique
("workplanning"	nil	(((w @@r k )1)((p l a n )1)((i ng )0)))	;; ing
("wormhole"	nil	(((w @@r m) 1) ((h o l) 0)))	;; oul
("wormholes"	nil	(((w @@r m) 1) ((h o l z) 0)))	;; oul
("worming"	nil	(((w @@r m )1)((i ng )0)))	;; ing
("worrying"	nil	(((w uh )1)((r iy )0)((i ng )0)))	;; ing
("worsening"	nil	(((w @@r s )1)((n! )0)((i ng )0)))	;; ing
("worshiping"	nil	(((w @@r )1)((sh i p )0)((i ng )0)))	;; ing
("worshipping"	nil	(((w @@r )1)((sh i p )0)((i ng )0)))	;; ing
("worthing"	nil	(((w @@r )1)((dh i ng )0)))	;; ing
("would'nt"	nil	(((w u d) 1) ((n! t) 0)))	;; unique
("would've"	nil	(((w u d) 1) ((@ v) 0)))	;; contraction
("wounding"	nil	(((w uu n d )1)((i ng )0)))	;; ing
("wowing"	nil	(((w ow )1)((i ng )0)))	;; ing
("wracking"	nil	(((r a k )1)((i ng )0)))	;; ing
("wrangling"	nil	(((r a ng )1)((g l i ng )0)))	;; ing
("wrapping"	nil	(((r a p )1)((i ng )0)))	;; ing
("wreaking"	nil	(((r ii k )1)((i ng )0)))	;; ing
("wrecking"	nil	(((r e k )1)((i ng )0)))	;; ing
("wrenching"	nil	(((r e n ch )1)((i ng )0)))	;; ing
("wresting"	nil	(((r e s t )1)((i ng )0)))	;; ing
("wrestling"	nil	(((r e s )1)((l i ng )0)))	;; ing
("wretchs"	nil	(((r e ch) 1) ((@ z) 0)))	;; unique
("wriggling"	nil	(((r i )1)((g l! )0)((i ng )0)))	;; ing
("wringing"	nil	(((r i ng )1)((i ng )0)))	;; ing
("wrinkling"	nil	(((r i ng )1)((k l! )0)((i ng )0)))	;; ing
("writhing"	nil	(((r ai dh )1)((i ng )0)))	;; ing
("writing"	nil	(((r ai t^ )1)((i ng )0)))	;; ing
("wronging"	nil	(((r o ng )1)((i ng )0)))	;; ing
("ws"	nil	(((d uh) 1) ((b l!) 0) ((y uu z) 1)))	;; unique
("wus"	nil	(((w uu z) 1)))	;; unique
("wuthering"	nil	(((w uh )1)((dh @ )0)((r i ng )0)))	;; ing
("wynns"	nil	(((w i n z) 1)))	;; unique
("wyoming"	nil	(((w ai )0)((ou )1)((m i ng )0)))	;; ing
("xeroxing"	nil	(((z ir )1)((r o k s )0)((i ng )0)))	;; ing
("xeroxs"	nil	(((z ir) 1) ((r o k s) 0) ((@ z) 0)))	;; unique
("xs"	nil	(((e k s) 1) ((@ z) 0)))	;; unique
("yachting"	nil	(((y o t^ )1)((i ng )0)))	;; ing
("yakking"	nil	(((y a k )1)((i ng )0)))	;; ing
("yales"	nil	(((y ei l z) 1)))	;; unique
("yammering"	nil	(((y a )1)((m @ r )0)((i ng )0)))	;; ing
("yanking"	nil	(((y a ng k )1)((i ng )0)))	;; ing
("yapping"	nil	(((y a p )1)((i ng )0)))	;; ing
("yarning"	nil	(((y aa n )1)((i ng )0)))	;; ing
("yawing"	nil	(((y oo )1)((i ng )0)))	;; ing
("yawning"	nil	(((y oo n )1)((i ng )0)))	;; ing
("yearling"	nil	(((y @@r )1)((l i ng )0)))	;; ing
("yearning"	nil	(((y @@r n )1)((i ng )0)))	;; ing
("yelling"	nil	(((y a l )1)((i ng )0)))	;; ing
("yellowing"	nil	(((y a )1)((l ou )0)((i ng )0)))	;; ing
("yelping"	nil	(((y a l p )1)((i ng )0)))	;; ing
("yeltsins"	nil	(((y a l t) 1) ((s i n z) 0)))	;; unique
("yeomans"	nil	(((y ou) 1) ((m @ n z) 0)))	;; unique
("yess"	nil	(((y e s) 1) ((@ z) 0)))	;; unique
("yielding"	nil	(((y ii l d )1)((i ng )0)))	;; ing
("yipping"	nil	(((y i p )1)((i ng )0)))	;; ing
("yknow"	nil	(((y @) 0) ((n ou) 1)))	;; unique
("yo-yoing"	nil	(((y ou )1)((y ou )0)((i ng )0)))	;; ing
("yodeling"	nil	(((y ou )1)((d l! )0)((i ng )0)))	;; ing
("yodelling"	nil	(((y ou )1)((d l! )0)((i ng )0)))	;; ing
("yoking"	nil	(((y ou k )1)((i ng )0)))	;; ing
("you'd"	nil	(((y uu d) 1)))	;; contraction
("you'll"	nil	(((y @ l) 1)))	;; contraction
("you're"	nil	(((y oo) 1)))	;; contraction
("you've"	nil	(((y uu v) 1)))	;; contraction
("yowling"	nil	(((y ow l )1)((i ng )0)))	;; ing
("ys"	nil	(((w ai z) 1)))	;; unique
("yugoslavias"	nil	(((y uu) 1) ((g ou) 0) ((s l aa) 1) ((v ii @ z) 0)))	;; unique
("zagging"	nil	(((z a g )1)((i ng )0)))	;; ing
("zambias"	nil	(((z a m) 1) ((b ii @ z) 0)))	;; unique
("zapping"	nil	(((z a p )1)((i ng )0)))	;; ing
("zarathustras"	nil	(((z a) 1) ((r @) 0) ((th uu) 1) ((s t r @ z) 0)))	;; unique
("zells"	nil	(((z a l z) 1)))	;; unique
("zeroing"	nil	(((z ir )1)((r ou )0)((i ng )0)))	;; ing
("zig-zagging"	nil	(((z i g )1)((z a g )0)((i ng )0)))	;; ing
("zigging"	nil	(((z i g )1)((i ng )0)))	;; ing
("zigzagging"	nil	(((z i g )1)((z a g )1)((i ng )0)))	;; ing
("zimbabwes"	nil	(((z i m) 0) ((b aa b) 1) ((w ii z) 0)))	;; unique
("zimmermanns"	nil	(((z i) 1) ((m @) 0) ((m @ n z) 0)))	;; unique
("zincs"	nil	(((z i ng k s) 1)))	;; unique
("zipping"	nil	(((z i p )1)((i ng )0)))	;; ing
("zola"	nil	(((z o) 1) ((l @) 0)))	;; oul
("zoning"	nil	(((z ou n )1)((i ng )0)))	;; ing
("zooming"	nil	(((z uu m )1)((i ng )0)))	;; ing
("zopiclone"	nil	(((z o p) 1) ((i) 0) ((k l ou n) 1)))	;; unique
("zs"	nil	(((z e d z) 1)))	;; unique
